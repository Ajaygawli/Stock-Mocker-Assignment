{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule getDraftEditorSelection\r\n * @format\r\n * \r\n */\n\n'use strict';\n\nvar getDraftEditorSelectionWithNodes = require('./getDraftEditorSelectionWithNodes');\n\n/**\r\n * Convert the current selection range to an anchor/focus pair of offset keys\r\n * and values that can be interpreted by components.\r\n */\nfunction getDraftEditorSelection(editorState, root) {\n  var selection = global.getSelection();\n\n  // No active selection.\n  if (selection.rangeCount === 0) {\n    return {\n      selectionState: editorState.getSelection().set('hasFocus', false),\n      needsRecovery: false\n    };\n  }\n  return getDraftEditorSelectionWithNodes(editorState, root, selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n}\nmodule.exports = getDraftEditorSelection;","map":{"version":3,"names":["getDraftEditorSelectionWithNodes","require","getDraftEditorSelection","editorState","root","selection","global","getSelection","rangeCount","selectionState","set","needsRecovery","anchorNode","anchorOffset","focusNode","focusOffset","module","exports"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/draft-js/lib/getDraftEditorSelection.js"],"sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule getDraftEditorSelection\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar getDraftEditorSelectionWithNodes = require('./getDraftEditorSelectionWithNodes');\r\n\r\n/**\r\n * Convert the current selection range to an anchor/focus pair of offset keys\r\n * and values that can be interpreted by components.\r\n */\r\nfunction getDraftEditorSelection(editorState, root) {\r\n  var selection = global.getSelection();\r\n\r\n  // No active selection.\r\n  if (selection.rangeCount === 0) {\r\n    return {\r\n      selectionState: editorState.getSelection().set('hasFocus', false),\r\n      needsRecovery: false\r\n    };\r\n  }\r\n\r\n  return getDraftEditorSelectionWithNodes(editorState, root, selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\r\n}\r\n\r\nmodule.exports = getDraftEditorSelection;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,gCAAgC,GAAGC,OAAO,CAAC,oCAAoC,CAAC;;AAEpF;AACA;AACA;AACA;AACA,SAASC,uBAAuBA,CAACC,WAAW,EAAEC,IAAI,EAAE;EAClD,IAAIC,SAAS,GAAGC,MAAM,CAACC,YAAY,EAAE;;EAErC;EACA,IAAIF,SAAS,CAACG,UAAU,KAAK,CAAC,EAAE;IAC9B,OAAO;MACLC,cAAc,EAAEN,WAAW,CAACI,YAAY,EAAE,CAACG,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;MACjEC,aAAa,EAAE;IACjB,CAAC;EACH;EAEA,OAAOX,gCAAgC,CAACG,WAAW,EAAEC,IAAI,EAAEC,SAAS,CAACO,UAAU,EAAEP,SAAS,CAACQ,YAAY,EAAER,SAAS,CAACS,SAAS,EAAET,SAAS,CAACU,WAAW,CAAC;AACtJ;AAEAC,MAAM,CAACC,OAAO,GAAGf,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}