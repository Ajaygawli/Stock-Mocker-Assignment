{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableHeaderRow from './TableHeaderRow';\nfunction getHeaderRows(columns) {\n  var currentRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var rows = arguments[2];\n  rows = rows || [];\n  rows[currentRow] = rows[currentRow] || [];\n  columns.forEach(function (column) {\n    if (column.rowSpan && rows.length < column.rowSpan) {\n      while (rows.length < column.rowSpan) {\n        rows.push([]);\n      }\n    }\n    var cell = {\n      key: column.key,\n      className: column.className || '',\n      children: column.title,\n      column: column\n    };\n    if (column.children) {\n      getHeaderRows(column.children, currentRow + 1, rows);\n    }\n    if ('colSpan' in column) {\n      cell.colSpan = column.colSpan;\n    }\n    if ('rowSpan' in column) {\n      cell.rowSpan = column.rowSpan;\n    }\n    if (cell.colSpan !== 0) {\n      rows[currentRow].push(cell);\n    }\n  });\n  return rows.filter(function (row) {\n    return row.length > 0;\n  });\n}\nexport default function TableHeader(props, _ref) {\n  var table = _ref.table;\n  var components = table.components;\n  var _table$props = table.props,\n    prefixCls = _table$props.prefixCls,\n    showHeader = _table$props.showHeader,\n    onHeaderRow = _table$props.onHeaderRow;\n  var expander = props.expander,\n    columns = props.columns,\n    fixed = props.fixed;\n  if (!showHeader) {\n    return null;\n  }\n  var rows = getHeaderRows(columns);\n  expander.renderExpandIndentCell(rows, fixed);\n  var HeaderWrapper = components.header.wrapper;\n  return React.createElement(HeaderWrapper, {\n    className: prefixCls + '-thead'\n  }, rows.map(function (row, index) {\n    return React.createElement(TableHeaderRow, {\n      prefixCls: prefixCls,\n      key: index,\n      index: index,\n      fixed: fixed,\n      columns: columns,\n      rows: rows,\n      row: row,\n      components: components,\n      onHeaderRow: onHeaderRow\n    });\n  }));\n}\nTableHeader.propTypes = {\n  fixed: PropTypes.string,\n  columns: PropTypes.array.isRequired,\n  expander: PropTypes.object.isRequired,\n  onHeaderRow: PropTypes.func\n};\nTableHeader.contextTypes = {\n  table: PropTypes.any\n};","map":{"version":3,"names":["React","PropTypes","TableHeaderRow","getHeaderRows","columns","currentRow","arguments","length","undefined","rows","forEach","column","rowSpan","push","cell","key","className","children","title","colSpan","filter","row","TableHeader","props","_ref","table","components","_table$props","prefixCls","showHeader","onHeaderRow","expander","fixed","renderExpandIndentCell","HeaderWrapper","header","wrapper","createElement","map","index","propTypes","string","array","isRequired","object","func","contextTypes","any"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/rc-table/es/TableHeader.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableHeaderRow from './TableHeaderRow';\n\nfunction getHeaderRows(columns) {\n  var currentRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var rows = arguments[2];\n\n  rows = rows || [];\n  rows[currentRow] = rows[currentRow] || [];\n\n  columns.forEach(function (column) {\n    if (column.rowSpan && rows.length < column.rowSpan) {\n      while (rows.length < column.rowSpan) {\n        rows.push([]);\n      }\n    }\n    var cell = {\n      key: column.key,\n      className: column.className || '',\n      children: column.title,\n      column: column\n    };\n    if (column.children) {\n      getHeaderRows(column.children, currentRow + 1, rows);\n    }\n    if ('colSpan' in column) {\n      cell.colSpan = column.colSpan;\n    }\n    if ('rowSpan' in column) {\n      cell.rowSpan = column.rowSpan;\n    }\n    if (cell.colSpan !== 0) {\n      rows[currentRow].push(cell);\n    }\n  });\n  return rows.filter(function (row) {\n    return row.length > 0;\n  });\n}\n\nexport default function TableHeader(props, _ref) {\n  var table = _ref.table;\n  var components = table.components;\n  var _table$props = table.props,\n      prefixCls = _table$props.prefixCls,\n      showHeader = _table$props.showHeader,\n      onHeaderRow = _table$props.onHeaderRow;\n  var expander = props.expander,\n      columns = props.columns,\n      fixed = props.fixed;\n\n\n  if (!showHeader) {\n    return null;\n  }\n\n  var rows = getHeaderRows(columns);\n\n  expander.renderExpandIndentCell(rows, fixed);\n\n  var HeaderWrapper = components.header.wrapper;\n\n  return React.createElement(\n    HeaderWrapper,\n    { className: prefixCls + '-thead' },\n    rows.map(function (row, index) {\n      return React.createElement(TableHeaderRow, {\n        prefixCls: prefixCls,\n        key: index,\n        index: index,\n        fixed: fixed,\n        columns: columns,\n        rows: rows,\n        row: row,\n        components: components,\n        onHeaderRow: onHeaderRow\n      });\n    })\n  );\n}\n\nTableHeader.propTypes = {\n  fixed: PropTypes.string,\n  columns: PropTypes.array.isRequired,\n  expander: PropTypes.object.isRequired,\n  onHeaderRow: PropTypes.func\n};\n\nTableHeader.contextTypes = {\n  table: PropTypes.any\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}