{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Tree from 'rc-tree';\nimport { createRef } from '../util';\nexport var popupContextTypes = {\n  onPopupKeyDown: PropTypes.func.isRequired,\n  onTreeNodeSelect: PropTypes.func.isRequired,\n  onTreeNodeCheck: PropTypes.func.isRequired\n};\nvar BasePopup = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BasePopup, _React$Component);\n  function BasePopup(props) {\n    var _this;\n    _classCallCheck(this, BasePopup);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BasePopup).call(this));\n    _defineProperty(_assertThisInitialized(_this), \"onTreeExpand\", function (expandedKeyList) {\n      var _this$props = _this.props,\n        treeExpandedKeys = _this$props.treeExpandedKeys,\n        onTreeExpand = _this$props.onTreeExpand,\n        onTreeExpanded = _this$props.onTreeExpanded; // Set uncontrolled state\n\n      if (!treeExpandedKeys) {\n        _this.setState({\n          expandedKeyList: expandedKeyList\n        }, onTreeExpanded);\n      }\n      if (onTreeExpand) {\n        onTreeExpand(expandedKeyList);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onLoad\", function (loadedKeys) {\n      _this.setState({\n        loadedKeys: loadedKeys\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getTree\", function () {\n      return _this.treeRef.current;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getLoadData\", function () {\n      var _this$props2 = _this.props,\n        loadData = _this$props2.loadData,\n        upperSearchValue = _this$props2.upperSearchValue;\n      if (upperSearchValue) return null;\n      return loadData;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"filterTreeNode\", function (treeNode) {\n      var _this$props3 = _this.props,\n        upperSearchValue = _this$props3.upperSearchValue,\n        treeNodeFilterProp = _this$props3.treeNodeFilterProp;\n      var filterVal = treeNode.props[treeNodeFilterProp];\n      if (typeof filterVal === 'string') {\n        return upperSearchValue && filterVal.toUpperCase().indexOf(upperSearchValue) !== -1;\n      }\n      return false;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"renderNotFound\", function () {\n      var _this$props4 = _this.props,\n        prefixCls = _this$props4.prefixCls,\n        notFoundContent = _this$props4.notFoundContent;\n      return React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-not-found\")\n      }, notFoundContent);\n    });\n    var treeDefaultExpandAll = props.treeDefaultExpandAll,\n      treeDefaultExpandedKeys = props.treeDefaultExpandedKeys,\n      keyEntities = props.keyEntities; // TODO: make `expandedKeyList` control\n\n    var _expandedKeyList = treeDefaultExpandedKeys;\n    if (treeDefaultExpandAll) {\n      _expandedKeyList = Object.keys(keyEntities);\n    }\n    _this.state = {\n      keyList: [],\n      expandedKeyList: _expandedKeyList,\n      // Cache `expandedKeyList` when tree is in filter. This is used in `getDerivedStateFromProps`\n      cachedExpandedKeyList: [],\n      // eslint-disable-line react/no-unused-state\n      loadedKeys: []\n    };\n    _this.treeRef = createRef();\n    return _this;\n  }\n  _createClass(BasePopup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n        keyList = _this$state.keyList,\n        expandedKeyList = _this$state.expandedKeyList,\n        loadedKeys = _this$state.loadedKeys;\n      var _this$props5 = this.props,\n        prefixCls = _this$props5.prefixCls,\n        treeNodes = _this$props5.treeNodes,\n        filteredTreeNodes = _this$props5.filteredTreeNodes,\n        treeIcon = _this$props5.treeIcon,\n        treeLine = _this$props5.treeLine,\n        treeCheckable = _this$props5.treeCheckable,\n        treeCheckStrictly = _this$props5.treeCheckStrictly,\n        multiple = _this$props5.multiple,\n        ariaId = _this$props5.ariaId,\n        renderSearch = _this$props5.renderSearch,\n        switcherIcon = _this$props5.switcherIcon,\n        searchHalfCheckedKeys = _this$props5.searchHalfCheckedKeys;\n      var _this$context$rcTreeS = this.context.rcTreeSelect,\n        onPopupKeyDown = _this$context$rcTreeS.onPopupKeyDown,\n        onTreeNodeSelect = _this$context$rcTreeS.onTreeNodeSelect,\n        onTreeNodeCheck = _this$context$rcTreeS.onTreeNodeCheck;\n      var loadData = this.getLoadData();\n      var treeProps = {};\n      if (treeCheckable) {\n        treeProps.checkedKeys = keyList;\n      } else {\n        treeProps.selectedKeys = keyList;\n      }\n      var $notFound;\n      var $treeNodes;\n      if (filteredTreeNodes) {\n        if (filteredTreeNodes.length) {\n          treeProps.checkStrictly = true;\n          $treeNodes = filteredTreeNodes; // Fill halfCheckedKeys\n\n          if (treeCheckable && !treeCheckStrictly) {\n            treeProps.checkedKeys = {\n              checked: keyList,\n              halfChecked: searchHalfCheckedKeys\n            };\n          }\n        } else {\n          $notFound = this.renderNotFound();\n        }\n      } else if (!treeNodes || !treeNodes.length) {\n        $notFound = this.renderNotFound();\n      } else {\n        $treeNodes = treeNodes;\n      }\n      var $tree;\n      if ($notFound) {\n        $tree = $notFound;\n      } else {\n        $tree = React.createElement(Tree, _extends({\n          ref: this.treeRef,\n          prefixCls: \"\".concat(prefixCls, \"-tree\"),\n          showIcon: treeIcon,\n          showLine: treeLine,\n          selectable: !treeCheckable,\n          checkable: treeCheckable,\n          checkStrictly: treeCheckStrictly,\n          multiple: multiple,\n          loadData: loadData,\n          loadedKeys: loadedKeys,\n          expandedKeys: expandedKeyList,\n          filterTreeNode: this.filterTreeNode,\n          onSelect: onTreeNodeSelect,\n          onCheck: onTreeNodeCheck,\n          onExpand: this.onTreeExpand,\n          onLoad: this.onLoad,\n          switcherIcon: switcherIcon\n        }, treeProps), $treeNodes);\n      }\n      return React.createElement(\"div\", {\n        role: \"listbox\",\n        id: ariaId,\n        onKeyDown: onPopupKeyDown,\n        tabIndex: -1\n      }, renderSearch ? renderSearch() : null, $tree);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var _ref = prevState || {},\n        _ref$prevProps = _ref.prevProps,\n        prevProps = _ref$prevProps === void 0 ? {} : _ref$prevProps,\n        loadedKeys = _ref.loadedKeys,\n        expandedKeyList = _ref.expandedKeyList,\n        cachedExpandedKeyList = _ref.cachedExpandedKeyList;\n      var valueList = nextProps.valueList,\n        valueEntities = nextProps.valueEntities,\n        keyEntities = nextProps.keyEntities,\n        treeExpandedKeys = nextProps.treeExpandedKeys,\n        filteredTreeNodes = nextProps.filteredTreeNodes,\n        upperSearchValue = nextProps.upperSearchValue;\n      var newState = {\n        prevProps: nextProps\n      }; // Check value update\n\n      if (valueList !== prevProps.valueList) {\n        newState.keyList = valueList.map(function (_ref2) {\n          var value = _ref2.value;\n          return valueEntities[value];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (_ref3) {\n          var key = _ref3.key;\n          return key;\n        });\n      } // Show all when tree is in filter mode\n\n      if (!treeExpandedKeys && filteredTreeNodes && filteredTreeNodes.length && filteredTreeNodes !== prevProps.filteredTreeNodes) {\n        newState.expandedKeyList = Object.keys(keyEntities);\n      } // Cache `expandedKeyList` when filter set\n\n      if (upperSearchValue && !prevProps.upperSearchValue) {\n        newState.cachedExpandedKeyList = expandedKeyList;\n      } else if (!upperSearchValue && prevProps.upperSearchValue && !treeExpandedKeys) {\n        newState.expandedKeyList = cachedExpandedKeyList || [];\n        newState.cachedExpandedKeyList = [];\n      } // Use expandedKeys if provided\n\n      if (prevProps.treeExpandedKeys !== treeExpandedKeys) {\n        newState.expandedKeyList = treeExpandedKeys;\n      } // Clean loadedKeys if key not exist in keyEntities anymore\n\n      if (nextProps.loadData) {\n        newState.loadedKeys = loadedKeys.filter(function (key) {\n          return key in keyEntities;\n        });\n      }\n      return newState;\n    }\n  }]);\n  return BasePopup;\n}(React.Component);\n_defineProperty(BasePopup, \"propTypes\", {\n  prefixCls: PropTypes.string,\n  upperSearchValue: PropTypes.string,\n  valueList: PropTypes.array,\n  searchHalfCheckedKeys: PropTypes.array,\n  valueEntities: PropTypes.object,\n  keyEntities: PropTypes.object,\n  treeIcon: PropTypes.bool,\n  treeLine: PropTypes.bool,\n  treeNodeFilterProp: PropTypes.string,\n  treeCheckable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  treeCheckStrictly: PropTypes.bool,\n  treeDefaultExpandAll: PropTypes.bool,\n  treeDefaultExpandedKeys: PropTypes.array,\n  treeExpandedKeys: PropTypes.array,\n  loadData: PropTypes.func,\n  multiple: PropTypes.bool,\n  onTreeExpand: PropTypes.func,\n  treeNodes: PropTypes.node,\n  filteredTreeNodes: PropTypes.node,\n  notFoundContent: PropTypes.node,\n  ariaId: PropTypes.string,\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  // HOC\n  renderSearch: PropTypes.func,\n  onTreeExpanded: PropTypes.func\n});\n_defineProperty(BasePopup, \"contextTypes\", {\n  rcTreeSelect: PropTypes.shape(_objectSpread({}, popupContextTypes))\n});\npolyfill(BasePopup);\nexport default BasePopup;","map":{"version":3,"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","_extends","assign","prototype","hasOwnProperty","call","apply","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","defineProperty","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_inherits","subClass","superClass","create","constructor","value","_setPrototypeOf","p","obj","React","PropTypes","polyfill","Tree","createRef","popupContextTypes","onPopupKeyDown","func","isRequired","onTreeNodeSelect","onTreeNodeCheck","BasePopup","_React$Component","_this","expandedKeyList","_this$props","treeExpandedKeys","onTreeExpand","onTreeExpanded","setState","loadedKeys","treeRef","current","_this$props2","loadData","upperSearchValue","treeNode","_this$props3","treeNodeFilterProp","filterVal","toUpperCase","indexOf","_this$props4","prefixCls","notFoundContent","createElement","className","treeDefaultExpandAll","treeDefaultExpandedKeys","keyEntities","_expandedKeyList","state","keyList","cachedExpandedKeyList","render","_this$state","_this$props5","treeNodes","filteredTreeNodes","treeIcon","treeLine","treeCheckable","treeCheckStrictly","multiple","ariaId","renderSearch","switcherIcon","searchHalfCheckedKeys","_this$context$rcTreeS","context","rcTreeSelect","getLoadData","treeProps","checkedKeys","selectedKeys","$notFound","$treeNodes","checkStrictly","checked","halfChecked","renderNotFound","$tree","ref","showIcon","showLine","selectable","checkable","expandedKeys","filterTreeNode","onSelect","onCheck","onExpand","onLoad","role","id","onKeyDown","tabIndex","getDerivedStateFromProps","nextProps","prevState","_ref","_ref$prevProps","prevProps","valueList","valueEntities","newState","map","_ref2","entity","_ref3","Component","string","array","object","bool","oneOfType","node","shape"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/rc-tree-select/es/Base/BasePopup.js"],"sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Tree from 'rc-tree';\nimport { createRef } from '../util';\nexport var popupContextTypes = {\n  onPopupKeyDown: PropTypes.func.isRequired,\n  onTreeNodeSelect: PropTypes.func.isRequired,\n  onTreeNodeCheck: PropTypes.func.isRequired\n};\n\nvar BasePopup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BasePopup, _React$Component);\n\n  function BasePopup(props) {\n    var _this;\n\n    _classCallCheck(this, BasePopup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BasePopup).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"onTreeExpand\", function (expandedKeyList) {\n      var _this$props = _this.props,\n          treeExpandedKeys = _this$props.treeExpandedKeys,\n          onTreeExpand = _this$props.onTreeExpand,\n          onTreeExpanded = _this$props.onTreeExpanded; // Set uncontrolled state\n\n      if (!treeExpandedKeys) {\n        _this.setState({\n          expandedKeyList: expandedKeyList\n        }, onTreeExpanded);\n      }\n\n      if (onTreeExpand) {\n        onTreeExpand(expandedKeyList);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLoad\", function (loadedKeys) {\n      _this.setState({\n        loadedKeys: loadedKeys\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTree\", function () {\n      return _this.treeRef.current;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getLoadData\", function () {\n      var _this$props2 = _this.props,\n          loadData = _this$props2.loadData,\n          upperSearchValue = _this$props2.upperSearchValue;\n      if (upperSearchValue) return null;\n      return loadData;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"filterTreeNode\", function (treeNode) {\n      var _this$props3 = _this.props,\n          upperSearchValue = _this$props3.upperSearchValue,\n          treeNodeFilterProp = _this$props3.treeNodeFilterProp;\n      var filterVal = treeNode.props[treeNodeFilterProp];\n\n      if (typeof filterVal === 'string') {\n        return upperSearchValue && filterVal.toUpperCase().indexOf(upperSearchValue) !== -1;\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderNotFound\", function () {\n      var _this$props4 = _this.props,\n          prefixCls = _this$props4.prefixCls,\n          notFoundContent = _this$props4.notFoundContent;\n      return React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-not-found\")\n      }, notFoundContent);\n    });\n\n    var treeDefaultExpandAll = props.treeDefaultExpandAll,\n        treeDefaultExpandedKeys = props.treeDefaultExpandedKeys,\n        keyEntities = props.keyEntities; // TODO: make `expandedKeyList` control\n\n    var _expandedKeyList = treeDefaultExpandedKeys;\n\n    if (treeDefaultExpandAll) {\n      _expandedKeyList = Object.keys(keyEntities);\n    }\n\n    _this.state = {\n      keyList: [],\n      expandedKeyList: _expandedKeyList,\n      // Cache `expandedKeyList` when tree is in filter. This is used in `getDerivedStateFromProps`\n      cachedExpandedKeyList: [],\n      // eslint-disable-line react/no-unused-state\n      loadedKeys: []\n    };\n    _this.treeRef = createRef();\n    return _this;\n  }\n\n  _createClass(BasePopup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          keyList = _this$state.keyList,\n          expandedKeyList = _this$state.expandedKeyList,\n          loadedKeys = _this$state.loadedKeys;\n      var _this$props5 = this.props,\n          prefixCls = _this$props5.prefixCls,\n          treeNodes = _this$props5.treeNodes,\n          filteredTreeNodes = _this$props5.filteredTreeNodes,\n          treeIcon = _this$props5.treeIcon,\n          treeLine = _this$props5.treeLine,\n          treeCheckable = _this$props5.treeCheckable,\n          treeCheckStrictly = _this$props5.treeCheckStrictly,\n          multiple = _this$props5.multiple,\n          ariaId = _this$props5.ariaId,\n          renderSearch = _this$props5.renderSearch,\n          switcherIcon = _this$props5.switcherIcon,\n          searchHalfCheckedKeys = _this$props5.searchHalfCheckedKeys;\n      var _this$context$rcTreeS = this.context.rcTreeSelect,\n          onPopupKeyDown = _this$context$rcTreeS.onPopupKeyDown,\n          onTreeNodeSelect = _this$context$rcTreeS.onTreeNodeSelect,\n          onTreeNodeCheck = _this$context$rcTreeS.onTreeNodeCheck;\n      var loadData = this.getLoadData();\n      var treeProps = {};\n\n      if (treeCheckable) {\n        treeProps.checkedKeys = keyList;\n      } else {\n        treeProps.selectedKeys = keyList;\n      }\n\n      var $notFound;\n      var $treeNodes;\n\n      if (filteredTreeNodes) {\n        if (filteredTreeNodes.length) {\n          treeProps.checkStrictly = true;\n          $treeNodes = filteredTreeNodes; // Fill halfCheckedKeys\n\n          if (treeCheckable && !treeCheckStrictly) {\n            treeProps.checkedKeys = {\n              checked: keyList,\n              halfChecked: searchHalfCheckedKeys\n            };\n          }\n        } else {\n          $notFound = this.renderNotFound();\n        }\n      } else if (!treeNodes || !treeNodes.length) {\n        $notFound = this.renderNotFound();\n      } else {\n        $treeNodes = treeNodes;\n      }\n\n      var $tree;\n\n      if ($notFound) {\n        $tree = $notFound;\n      } else {\n        $tree = React.createElement(Tree, _extends({\n          ref: this.treeRef,\n          prefixCls: \"\".concat(prefixCls, \"-tree\"),\n          showIcon: treeIcon,\n          showLine: treeLine,\n          selectable: !treeCheckable,\n          checkable: treeCheckable,\n          checkStrictly: treeCheckStrictly,\n          multiple: multiple,\n          loadData: loadData,\n          loadedKeys: loadedKeys,\n          expandedKeys: expandedKeyList,\n          filterTreeNode: this.filterTreeNode,\n          onSelect: onTreeNodeSelect,\n          onCheck: onTreeNodeCheck,\n          onExpand: this.onTreeExpand,\n          onLoad: this.onLoad,\n          switcherIcon: switcherIcon\n        }, treeProps), $treeNodes);\n      }\n\n      return React.createElement(\"div\", {\n        role: \"listbox\",\n        id: ariaId,\n        onKeyDown: onPopupKeyDown,\n        tabIndex: -1\n      }, renderSearch ? renderSearch() : null, $tree);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var _ref = prevState || {},\n          _ref$prevProps = _ref.prevProps,\n          prevProps = _ref$prevProps === void 0 ? {} : _ref$prevProps,\n          loadedKeys = _ref.loadedKeys,\n          expandedKeyList = _ref.expandedKeyList,\n          cachedExpandedKeyList = _ref.cachedExpandedKeyList;\n\n      var valueList = nextProps.valueList,\n          valueEntities = nextProps.valueEntities,\n          keyEntities = nextProps.keyEntities,\n          treeExpandedKeys = nextProps.treeExpandedKeys,\n          filteredTreeNodes = nextProps.filteredTreeNodes,\n          upperSearchValue = nextProps.upperSearchValue;\n      var newState = {\n        prevProps: nextProps\n      }; // Check value update\n\n      if (valueList !== prevProps.valueList) {\n        newState.keyList = valueList.map(function (_ref2) {\n          var value = _ref2.value;\n          return valueEntities[value];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (_ref3) {\n          var key = _ref3.key;\n          return key;\n        });\n      } // Show all when tree is in filter mode\n\n\n      if (!treeExpandedKeys && filteredTreeNodes && filteredTreeNodes.length && filteredTreeNodes !== prevProps.filteredTreeNodes) {\n        newState.expandedKeyList = Object.keys(keyEntities);\n      } // Cache `expandedKeyList` when filter set\n\n\n      if (upperSearchValue && !prevProps.upperSearchValue) {\n        newState.cachedExpandedKeyList = expandedKeyList;\n      } else if (!upperSearchValue && prevProps.upperSearchValue && !treeExpandedKeys) {\n        newState.expandedKeyList = cachedExpandedKeyList || [];\n        newState.cachedExpandedKeyList = [];\n      } // Use expandedKeys if provided\n\n\n      if (prevProps.treeExpandedKeys !== treeExpandedKeys) {\n        newState.expandedKeyList = treeExpandedKeys;\n      } // Clean loadedKeys if key not exist in keyEntities anymore\n\n\n      if (nextProps.loadData) {\n        newState.loadedKeys = loadedKeys.filter(function (key) {\n          return key in keyEntities;\n        });\n      }\n\n      return newState;\n    }\n  }]);\n\n  return BasePopup;\n}(React.Component);\n\n_defineProperty(BasePopup, \"propTypes\", {\n  prefixCls: PropTypes.string,\n  upperSearchValue: PropTypes.string,\n  valueList: PropTypes.array,\n  searchHalfCheckedKeys: PropTypes.array,\n  valueEntities: PropTypes.object,\n  keyEntities: PropTypes.object,\n  treeIcon: PropTypes.bool,\n  treeLine: PropTypes.bool,\n  treeNodeFilterProp: PropTypes.string,\n  treeCheckable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  treeCheckStrictly: PropTypes.bool,\n  treeDefaultExpandAll: PropTypes.bool,\n  treeDefaultExpandedKeys: PropTypes.array,\n  treeExpandedKeys: PropTypes.array,\n  loadData: PropTypes.func,\n  multiple: PropTypes.bool,\n  onTreeExpand: PropTypes.func,\n  treeNodes: PropTypes.node,\n  filteredTreeNodes: PropTypes.node,\n  notFoundContent: PropTypes.node,\n  ariaId: PropTypes.string,\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  // HOC\n  renderSearch: PropTypes.func,\n  onTreeExpanded: PropTypes.func\n});\n\n_defineProperty(BasePopup, \"contextTypes\", {\n  rcTreeSelect: PropTypes.shape(_objectSpread({}, popupContextTypes))\n});\n\npolyfill(BasePopup);\nexport default BasePopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}