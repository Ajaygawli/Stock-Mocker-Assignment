{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport React, { Children } from 'react';\nimport toArray from 'rc-util/es/Children/toArray';\nimport warning from 'warning';\nimport TreeNode from './TreeNode';\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\nvar onlyTreeNodeWarned = false;\nexport function warnOnlyTreeNode() {\n  if (onlyTreeNodeWarned) return;\n  onlyTreeNodeWarned = true;\n  warning(false, 'Tree only accept TreeNode as children.');\n}\nexport function arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n  return clone;\n}\nexport function arrAdd(list, value) {\n  var clone = list.slice();\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n  return clone;\n}\nexport function posToArr(pos) {\n  return pos.split('-');\n}\nexport function getPosition(level, index) {\n  return level + '-' + index;\n}\nexport function isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\nexport function getNodeChildren(children) {\n  return toArray(children).filter(isTreeNode);\n}\nexport function isCheckDisabled(node) {\n  var _ref = node.props || {},\n    disabled = _ref.disabled,\n    disableCheckbox = _ref.disableCheckbox;\n  return !!(disabled || disableCheckbox);\n}\nexport function traverseTreeNodes(treeNodes, callback) {\n  function processNode(node, index, parent) {\n    var children = node ? node.props.children : treeNodes;\n    var pos = node ? getPosition(parent.pos, index) : 0;\n\n    // Filter children\n    var childList = getNodeChildren(children);\n\n    // Process node if is not root\n    if (node) {\n      var data = {\n        node: node,\n        index: index,\n        pos: pos,\n        key: node.key || pos,\n        parentPos: parent.node ? parent.pos : null\n      };\n      callback(data);\n    }\n\n    // Process children node\n    Children.forEach(childList, function (subNode, subIndex) {\n      processNode(subNode, subIndex, {\n        node: node,\n        pos: pos\n      });\n    });\n  }\n  processNode(null);\n}\n\n/**\r\n * Use `rc-util` `toArray` to get the children list which keeps the key.\r\n * And return single node if children is only one(This can avoid `key` missing check).\r\n */\nexport function mapChildren(children, func) {\n  var list = toArray(children).map(func);\n  if (list.length === 1) {\n    return list[0];\n  }\n  return list;\n}\nexport function getDragNodesKeys(treeNodes, node) {\n  var _node$props = node.props,\n    eventKey = _node$props.eventKey,\n    pos = _node$props.pos;\n  var dragNodesKeys = [];\n  traverseTreeNodes(treeNodes, function (_ref2) {\n    var key = _ref2.key;\n    dragNodesKeys.push(key);\n  });\n  dragNodesKeys.push(eventKey || pos);\n  return dragNodesKeys;\n}\n\n// Only used when drag, not affect SSR.\nexport function calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n  var _treeNode$selectHandl = treeNode.selectHandle.getBoundingClientRect(),\n    top = _treeNode$selectHandl.top,\n    bottom = _treeNode$selectHandl.bottom,\n    height = _treeNode$selectHandl.height;\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n  if (clientY <= top + des) {\n    return -1;\n  } else if (clientY >= bottom - des) {\n    return 1;\n  }\n  return 0;\n}\n\n/**\r\n * Return selectedKeys according with multiple prop\r\n * @param selectedKeys\r\n * @param props\r\n * @returns [string]\r\n */\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n  return selectedKeys;\n}\n\n/**\r\n * Since React internal will convert key to string,\r\n * we need do this to avoid `checkStrictly` use number match\r\n */\nfunction keyListToString(keyList) {\n  if (!keyList) return keyList;\n  return keyList.map(function (key) {\n    return String(key);\n  });\n}\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\nexport function convertDataToTree(treeData, processer) {\n  if (!treeData) return [];\n  var _ref3 = processer || {},\n    _ref3$processProps = _ref3.processProps,\n    processProps = _ref3$processProps === undefined ? internalProcessProps : _ref3$processProps;\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref4) {\n    var children = _ref4.children,\n      props = _objectWithoutProperties(_ref4, ['children']);\n    var childrenNodes = convertDataToTree(children, processer);\n    return React.createElement(TreeNode, processProps(props), childrenNodes);\n  });\n}\n\n// TODO: ========================= NEW LOGIC =========================\n/**\r\n * Calculate treeNodes entities. `processTreeEntity` is used for `rc-tree-select`\r\n * @param treeNodes\r\n * @param processTreeEntity  User can customize the entity\r\n */\nexport function convertTreeToEntities(treeNodes) {\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    initWrapper = _ref5.initWrapper,\n    processEntity = _ref5.processEntity,\n    onProcessFinished = _ref5.onProcessFinished;\n  var posEntities = {};\n  var keyEntities = {};\n  var wrapper = {\n    posEntities: posEntities,\n    keyEntities: keyEntities\n  };\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n  traverseTreeNodes(treeNodes, function (item) {\n    var node = item.node,\n      index = item.index,\n      pos = item.pos,\n      key = item.key,\n      parentPos = item.parentPos;\n    var entity = {\n      node: node,\n      index: index,\n      key: key,\n      pos: pos\n    };\n    posEntities[pos] = entity;\n    keyEntities[key] = entity;\n\n    // Fill children\n    entity.parent = posEntities[parentPos];\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  });\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n  return wrapper;\n}\n\n/**\r\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\r\n */\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  }\n\n  // Convert keys to object format\n  var keyProps = void 0;\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if (typeof keys === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n  keyProps.checkedKeys = keyListToString(keyProps.checkedKeys);\n  keyProps.halfCheckedKeys = keyListToString(keyProps.halfCheckedKeys);\n  return keyProps;\n}\n\n/**\r\n * Conduct check state by the keyList. It will conduct up & from the provided key.\r\n * If the conduct path reach the disabled or already checked / unchecked node will stop conduct.\r\n * @param keyList       list of keys\r\n * @param isCheck       is check the node or not\r\n * @param keyEntities   parsed by `convertTreeToEntities` function in Tree\r\n * @param checkStatus   Can pass current checked status for process (usually for uncheck operation)\r\n * @returns {{checkedKeys: [], halfCheckedKeys: []}}\r\n */\nexport function conductCheck(keyList, isCheck, keyEntities) {\n  var checkStatus = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var checkedKeys = {};\n  var halfCheckedKeys = {}; // Record the key has some child checked (include child half checked)\n\n  (checkStatus.checkedKeys || []).forEach(function (key) {\n    checkedKeys[key] = true;\n  });\n  (checkStatus.halfCheckedKeys || []).forEach(function (key) {\n    halfCheckedKeys[key] = true;\n  });\n\n  // Conduct up\n  function conductUp(key) {\n    if (checkedKeys[key] === isCheck) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    var children = entity.children,\n      parent = entity.parent,\n      node = entity.node;\n    if (isCheckDisabled(node)) return;\n\n    // Check child node checked status\n    var everyChildChecked = true;\n    var someChildChecked = false; // Child checked or half checked\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (_ref6) {\n      var childKey = _ref6.key;\n      var childChecked = checkedKeys[childKey];\n      var childHalfChecked = halfCheckedKeys[childKey];\n      if (childChecked || childHalfChecked) someChildChecked = true;\n      if (!childChecked) everyChildChecked = false;\n    });\n\n    // Update checked status\n    if (isCheck) {\n      checkedKeys[key] = everyChildChecked;\n    } else {\n      checkedKeys[key] = false;\n    }\n    halfCheckedKeys[key] = someChildChecked;\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  // Conduct down\n  function conductDown(key) {\n    if (checkedKeys[key] === isCheck) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    var children = entity.children,\n      node = entity.node;\n    if (isCheckDisabled(node)) return;\n    checkedKeys[key] = isCheck;\n    (children || []).forEach(function (child) {\n      conductDown(child.key);\n    });\n  }\n  function conduct(key) {\n    var entity = keyEntities[key];\n    if (!entity) {\n      warning(false, '\\'' + key + '\\' does not exist in the tree.');\n      return;\n    }\n    var children = entity.children,\n      parent = entity.parent,\n      node = entity.node;\n    checkedKeys[key] = isCheck;\n    if (isCheckDisabled(node)) return;\n\n    // Conduct down\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (child) {\n      conductDown(child.key);\n    });\n\n    // Conduct up\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n  (keyList || []).forEach(function (key) {\n    conduct(key);\n  });\n  var checkedKeyList = [];\n  var halfCheckedKeyList = [];\n\n  // Fill checked list\n  Object.keys(checkedKeys).forEach(function (key) {\n    if (checkedKeys[key]) {\n      checkedKeyList.push(key);\n    }\n  });\n\n  // Fill half checked list\n  Object.keys(halfCheckedKeys).forEach(function (key) {\n    if (!checkedKeys[key] && halfCheckedKeys[key]) {\n      halfCheckedKeyList.push(key);\n    }\n  });\n  return {\n    checkedKeys: checkedKeyList,\n    halfCheckedKeys: halfCheckedKeyList\n  };\n}\n\n/**\r\n * If user use `autoExpandParent` we should get the list of parent node\r\n * @param keyList\r\n * @param keyEntities\r\n */\nexport function conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = {};\n  function conductUp(key) {\n    if (expandedKeys[key]) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys[key] = true;\n    var parent = entity.parent,\n      node = entity.node;\n    if (isCheckDisabled(node)) return;\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return Object.keys(expandedKeys);\n}\n\n/**\r\n * Returns only the data- and aria- key/value pairs\r\n * @param {object} props \r\n */\nexport function getDataAndAria(props) {\n  return Object.keys(props).reduce(function (prev, key) {\n    if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-') {\n      prev[key] = props[key];\n    }\n    return prev;\n  }, {});\n}","map":{"version":3,"names":["_objectWithoutProperties","React","Children","toArray","warning","TreeNode","DRAG_SIDE_RANGE","DRAG_MIN_GAP","onlyTreeNodeWarned","warnOnlyTreeNode","arrDel","list","value","clone","slice","index","indexOf","splice","arrAdd","push","posToArr","pos","split","getPosition","level","isTreeNode","node","type","getNodeChildren","children","filter","isCheckDisabled","_ref","props","disabled","disableCheckbox","traverseTreeNodes","treeNodes","callback","processNode","parent","childList","data","key","parentPos","forEach","subNode","subIndex","mapChildren","func","map","length","getDragNodesKeys","_node$props","eventKey","dragNodesKeys","_ref2","calcDropPosition","event","treeNode","clientY","_treeNode$selectHandl","selectHandle","getBoundingClientRect","top","bottom","height","des","Math","max","calcSelectedKeys","selectedKeys","undefined","multiple","keyListToString","keyList","String","internalProcessProps","convertDataToTree","treeData","processer","_ref3","_ref3$processProps","processProps","Array","isArray","_ref4","childrenNodes","createElement","convertTreeToEntities","_ref5","arguments","initWrapper","processEntity","onProcessFinished","posEntities","keyEntities","wrapper","item","entity","parseCheckedKeys","keys","keyProps","checkedKeys","halfCheckedKeys","checked","halfChecked","conductCheck","isCheck","checkStatus","conductUp","everyChildChecked","someChildChecked","child","_ref6","childKey","childChecked","childHalfChecked","conductDown","conduct","checkedKeyList","halfCheckedKeyList","Object","conductExpandParent","expandedKeys","getDataAndAria","reduce","prev","substr"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/rc-tree-select/node_modules/rc-tree/es/util.js"],"sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\r\nimport React, { Children } from 'react';\r\nimport toArray from 'rc-util/es/Children/toArray';\r\nimport warning from 'warning';\r\nimport TreeNode from './TreeNode';\r\n\r\nvar DRAG_SIDE_RANGE = 0.25;\r\nvar DRAG_MIN_GAP = 2;\r\n\r\nvar onlyTreeNodeWarned = false;\r\n\r\nexport function warnOnlyTreeNode() {\r\n  if (onlyTreeNodeWarned) return;\r\n\r\n  onlyTreeNodeWarned = true;\r\n  warning(false, 'Tree only accept TreeNode as children.');\r\n}\r\n\r\nexport function arrDel(list, value) {\r\n  var clone = list.slice();\r\n  var index = clone.indexOf(value);\r\n  if (index >= 0) {\r\n    clone.splice(index, 1);\r\n  }\r\n  return clone;\r\n}\r\n\r\nexport function arrAdd(list, value) {\r\n  var clone = list.slice();\r\n  if (clone.indexOf(value) === -1) {\r\n    clone.push(value);\r\n  }\r\n  return clone;\r\n}\r\n\r\nexport function posToArr(pos) {\r\n  return pos.split('-');\r\n}\r\n\r\nexport function getPosition(level, index) {\r\n  return level + '-' + index;\r\n}\r\n\r\nexport function isTreeNode(node) {\r\n  return node && node.type && node.type.isTreeNode;\r\n}\r\n\r\nexport function getNodeChildren(children) {\r\n  return toArray(children).filter(isTreeNode);\r\n}\r\n\r\nexport function isCheckDisabled(node) {\r\n  var _ref = node.props || {},\r\n      disabled = _ref.disabled,\r\n      disableCheckbox = _ref.disableCheckbox;\r\n\r\n  return !!(disabled || disableCheckbox);\r\n}\r\n\r\nexport function traverseTreeNodes(treeNodes, callback) {\r\n  function processNode(node, index, parent) {\r\n    var children = node ? node.props.children : treeNodes;\r\n    var pos = node ? getPosition(parent.pos, index) : 0;\r\n\r\n    // Filter children\r\n    var childList = getNodeChildren(children);\r\n\r\n    // Process node if is not root\r\n    if (node) {\r\n      var data = {\r\n        node: node,\r\n        index: index,\r\n        pos: pos,\r\n        key: node.key || pos,\r\n        parentPos: parent.node ? parent.pos : null\r\n      };\r\n\r\n      callback(data);\r\n    }\r\n\r\n    // Process children node\r\n    Children.forEach(childList, function (subNode, subIndex) {\r\n      processNode(subNode, subIndex, { node: node, pos: pos });\r\n    });\r\n  }\r\n\r\n  processNode(null);\r\n}\r\n\r\n/**\r\n * Use `rc-util` `toArray` to get the children list which keeps the key.\r\n * And return single node if children is only one(This can avoid `key` missing check).\r\n */\r\nexport function mapChildren(children, func) {\r\n  var list = toArray(children).map(func);\r\n  if (list.length === 1) {\r\n    return list[0];\r\n  }\r\n  return list;\r\n}\r\n\r\nexport function getDragNodesKeys(treeNodes, node) {\r\n  var _node$props = node.props,\r\n      eventKey = _node$props.eventKey,\r\n      pos = _node$props.pos;\r\n\r\n  var dragNodesKeys = [];\r\n\r\n  traverseTreeNodes(treeNodes, function (_ref2) {\r\n    var key = _ref2.key;\r\n\r\n    dragNodesKeys.push(key);\r\n  });\r\n  dragNodesKeys.push(eventKey || pos);\r\n  return dragNodesKeys;\r\n}\r\n\r\n// Only used when drag, not affect SSR.\r\nexport function calcDropPosition(event, treeNode) {\r\n  var clientY = event.clientY;\r\n\r\n  var _treeNode$selectHandl = treeNode.selectHandle.getBoundingClientRect(),\r\n      top = _treeNode$selectHandl.top,\r\n      bottom = _treeNode$selectHandl.bottom,\r\n      height = _treeNode$selectHandl.height;\r\n\r\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\r\n\r\n  if (clientY <= top + des) {\r\n    return -1;\r\n  } else if (clientY >= bottom - des) {\r\n    return 1;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Return selectedKeys according with multiple prop\r\n * @param selectedKeys\r\n * @param props\r\n * @returns [string]\r\n */\r\nexport function calcSelectedKeys(selectedKeys, props) {\r\n  if (!selectedKeys) return undefined;\r\n\r\n  var multiple = props.multiple;\r\n\r\n  if (multiple) {\r\n    return selectedKeys.slice();\r\n  }\r\n\r\n  if (selectedKeys.length) {\r\n    return [selectedKeys[0]];\r\n  }\r\n  return selectedKeys;\r\n}\r\n\r\n/**\r\n * Since React internal will convert key to string,\r\n * we need do this to avoid `checkStrictly` use number match\r\n */\r\nfunction keyListToString(keyList) {\r\n  if (!keyList) return keyList;\r\n  return keyList.map(function (key) {\r\n    return String(key);\r\n  });\r\n}\r\n\r\nvar internalProcessProps = function internalProcessProps(props) {\r\n  return props;\r\n};\r\nexport function convertDataToTree(treeData, processer) {\r\n  if (!treeData) return [];\r\n\r\n  var _ref3 = processer || {},\r\n      _ref3$processProps = _ref3.processProps,\r\n      processProps = _ref3$processProps === undefined ? internalProcessProps : _ref3$processProps;\r\n\r\n  var list = Array.isArray(treeData) ? treeData : [treeData];\r\n  return list.map(function (_ref4) {\r\n    var children = _ref4.children,\r\n        props = _objectWithoutProperties(_ref4, ['children']);\r\n\r\n    var childrenNodes = convertDataToTree(children, processer);\r\n\r\n    return React.createElement(\r\n      TreeNode,\r\n      processProps(props),\r\n      childrenNodes\r\n    );\r\n  });\r\n}\r\n\r\n// TODO: ========================= NEW LOGIC =========================\r\n/**\r\n * Calculate treeNodes entities. `processTreeEntity` is used for `rc-tree-select`\r\n * @param treeNodes\r\n * @param processTreeEntity  User can customize the entity\r\n */\r\nexport function convertTreeToEntities(treeNodes) {\r\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\r\n      initWrapper = _ref5.initWrapper,\r\n      processEntity = _ref5.processEntity,\r\n      onProcessFinished = _ref5.onProcessFinished;\r\n\r\n  var posEntities = {};\r\n  var keyEntities = {};\r\n  var wrapper = {\r\n    posEntities: posEntities,\r\n    keyEntities: keyEntities\r\n  };\r\n\r\n  if (initWrapper) {\r\n    wrapper = initWrapper(wrapper) || wrapper;\r\n  }\r\n\r\n  traverseTreeNodes(treeNodes, function (item) {\r\n    var node = item.node,\r\n        index = item.index,\r\n        pos = item.pos,\r\n        key = item.key,\r\n        parentPos = item.parentPos;\r\n\r\n    var entity = { node: node, index: index, key: key, pos: pos };\r\n\r\n    posEntities[pos] = entity;\r\n    keyEntities[key] = entity;\r\n\r\n    // Fill children\r\n    entity.parent = posEntities[parentPos];\r\n    if (entity.parent) {\r\n      entity.parent.children = entity.parent.children || [];\r\n      entity.parent.children.push(entity);\r\n    }\r\n\r\n    if (processEntity) {\r\n      processEntity(entity, wrapper);\r\n    }\r\n  });\r\n\r\n  if (onProcessFinished) {\r\n    onProcessFinished(wrapper);\r\n  }\r\n\r\n  return wrapper;\r\n}\r\n\r\n/**\r\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\r\n */\r\nexport function parseCheckedKeys(keys) {\r\n  if (!keys) {\r\n    return null;\r\n  }\r\n\r\n  // Convert keys to object format\r\n  var keyProps = void 0;\r\n  if (Array.isArray(keys)) {\r\n    // [Legacy] Follow the api doc\r\n    keyProps = {\r\n      checkedKeys: keys,\r\n      halfCheckedKeys: undefined\r\n    };\r\n  } else if (typeof keys === 'object') {\r\n    keyProps = {\r\n      checkedKeys: keys.checked || undefined,\r\n      halfCheckedKeys: keys.halfChecked || undefined\r\n    };\r\n  } else {\r\n    warning(false, '`checkedKeys` is not an array or an object');\r\n    return null;\r\n  }\r\n\r\n  keyProps.checkedKeys = keyListToString(keyProps.checkedKeys);\r\n  keyProps.halfCheckedKeys = keyListToString(keyProps.halfCheckedKeys);\r\n\r\n  return keyProps;\r\n}\r\n\r\n/**\r\n * Conduct check state by the keyList. It will conduct up & from the provided key.\r\n * If the conduct path reach the disabled or already checked / unchecked node will stop conduct.\r\n * @param keyList       list of keys\r\n * @param isCheck       is check the node or not\r\n * @param keyEntities   parsed by `convertTreeToEntities` function in Tree\r\n * @param checkStatus   Can pass current checked status for process (usually for uncheck operation)\r\n * @returns {{checkedKeys: [], halfCheckedKeys: []}}\r\n */\r\nexport function conductCheck(keyList, isCheck, keyEntities) {\r\n  var checkStatus = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\r\n\r\n  var checkedKeys = {};\r\n  var halfCheckedKeys = {}; // Record the key has some child checked (include child half checked)\r\n\r\n  (checkStatus.checkedKeys || []).forEach(function (key) {\r\n    checkedKeys[key] = true;\r\n  });\r\n\r\n  (checkStatus.halfCheckedKeys || []).forEach(function (key) {\r\n    halfCheckedKeys[key] = true;\r\n  });\r\n\r\n  // Conduct up\r\n  function conductUp(key) {\r\n    if (checkedKeys[key] === isCheck) return;\r\n\r\n    var entity = keyEntities[key];\r\n    if (!entity) return;\r\n\r\n    var children = entity.children,\r\n        parent = entity.parent,\r\n        node = entity.node;\r\n\r\n\r\n    if (isCheckDisabled(node)) return;\r\n\r\n    // Check child node checked status\r\n    var everyChildChecked = true;\r\n    var someChildChecked = false; // Child checked or half checked\r\n\r\n    (children || []).filter(function (child) {\r\n      return !isCheckDisabled(child.node);\r\n    }).forEach(function (_ref6) {\r\n      var childKey = _ref6.key;\r\n\r\n      var childChecked = checkedKeys[childKey];\r\n      var childHalfChecked = halfCheckedKeys[childKey];\r\n\r\n      if (childChecked || childHalfChecked) someChildChecked = true;\r\n      if (!childChecked) everyChildChecked = false;\r\n    });\r\n\r\n    // Update checked status\r\n    if (isCheck) {\r\n      checkedKeys[key] = everyChildChecked;\r\n    } else {\r\n      checkedKeys[key] = false;\r\n    }\r\n    halfCheckedKeys[key] = someChildChecked;\r\n\r\n    if (parent) {\r\n      conductUp(parent.key);\r\n    }\r\n  }\r\n\r\n  // Conduct down\r\n  function conductDown(key) {\r\n    if (checkedKeys[key] === isCheck) return;\r\n\r\n    var entity = keyEntities[key];\r\n    if (!entity) return;\r\n\r\n    var children = entity.children,\r\n        node = entity.node;\r\n\r\n\r\n    if (isCheckDisabled(node)) return;\r\n\r\n    checkedKeys[key] = isCheck;\r\n\r\n    (children || []).forEach(function (child) {\r\n      conductDown(child.key);\r\n    });\r\n  }\r\n\r\n  function conduct(key) {\r\n    var entity = keyEntities[key];\r\n\r\n    if (!entity) {\r\n      warning(false, '\\'' + key + '\\' does not exist in the tree.');\r\n      return;\r\n    }\r\n\r\n    var children = entity.children,\r\n        parent = entity.parent,\r\n        node = entity.node;\r\n\r\n    checkedKeys[key] = isCheck;\r\n\r\n    if (isCheckDisabled(node)) return;\r\n\r\n    // Conduct down\r\n    (children || []).filter(function (child) {\r\n      return !isCheckDisabled(child.node);\r\n    }).forEach(function (child) {\r\n      conductDown(child.key);\r\n    });\r\n\r\n    // Conduct up\r\n    if (parent) {\r\n      conductUp(parent.key);\r\n    }\r\n  }\r\n\r\n  (keyList || []).forEach(function (key) {\r\n    conduct(key);\r\n  });\r\n\r\n  var checkedKeyList = [];\r\n  var halfCheckedKeyList = [];\r\n\r\n  // Fill checked list\r\n  Object.keys(checkedKeys).forEach(function (key) {\r\n    if (checkedKeys[key]) {\r\n      checkedKeyList.push(key);\r\n    }\r\n  });\r\n\r\n  // Fill half checked list\r\n  Object.keys(halfCheckedKeys).forEach(function (key) {\r\n    if (!checkedKeys[key] && halfCheckedKeys[key]) {\r\n      halfCheckedKeyList.push(key);\r\n    }\r\n  });\r\n\r\n  return {\r\n    checkedKeys: checkedKeyList,\r\n    halfCheckedKeys: halfCheckedKeyList\r\n  };\r\n}\r\n\r\n/**\r\n * If user use `autoExpandParent` we should get the list of parent node\r\n * @param keyList\r\n * @param keyEntities\r\n */\r\nexport function conductExpandParent(keyList, keyEntities) {\r\n  var expandedKeys = {};\r\n\r\n  function conductUp(key) {\r\n    if (expandedKeys[key]) return;\r\n\r\n    var entity = keyEntities[key];\r\n    if (!entity) return;\r\n\r\n    expandedKeys[key] = true;\r\n\r\n    var parent = entity.parent,\r\n        node = entity.node;\r\n\r\n\r\n    if (isCheckDisabled(node)) return;\r\n\r\n    if (parent) {\r\n      conductUp(parent.key);\r\n    }\r\n  }\r\n\r\n  (keyList || []).forEach(function (key) {\r\n    conductUp(key);\r\n  });\r\n\r\n  return Object.keys(expandedKeys);\r\n}\r\n\r\n/**\r\n * Returns only the data- and aria- key/value pairs\r\n * @param {object} props \r\n */\r\nexport function getDataAndAria(props) {\r\n  return Object.keys(props).reduce(function (prev, key) {\r\n    if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-') {\r\n      prev[key] = props[key];\r\n    }\r\n    return prev;\r\n  }, {});\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}