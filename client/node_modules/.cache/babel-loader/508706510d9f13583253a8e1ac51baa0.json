{"ast":null,"code":"import _regeneratorRuntime from \"/home/mahak/Desktop/Virtual-Stock-Market/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mahak/Desktop/Virtual-Stock-Market/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/mahak/Desktop/Virtual-Stock-Market/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mahak/Desktop/Virtual-Stock-Market/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mahak/Desktop/Virtual-Stock-Market/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mahak/Desktop/Virtual-Stock-Market/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mahak/Desktop/Virtual-Stock-Market/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/mahak/Desktop/Virtual-Stock-Market/client/src/components/BuyShare.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Button, Input, Form } from 'antd';\nimport Animate from 'rc-animate';\nimport { getStockQuote, buyStock, sell } from '../apis';\n\nvar BuyShare =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BuyShare, _Component);\n\n  function BuyShare() {\n    var _this;\n\n    _classCallCheck(this, BuyShare);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BuyShare).call(this));\n\n    _this.handleSubmit = function (e) {\n      var _this$state = _this.state,\n          validateQty = _this$state.validateQty,\n          validateSymbol = _this$state.validateSymbol;\n      e.preventDefault();\n\n      _this.props.form.validateFields(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(err, values) {\n          var res;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(!err && validateQty === 'success' && validateSymbol === 'success')) {\n                    _context.next = 6;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return buyStock(values);\n\n                case 3:\n                  res = _context.sent;\n                  alert(res);\n                  window.location.reload();\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n\n    _this.handleSymbolChange = function (e) {\n      var symbol = e.target.value;\n\n      if (symbol === \"\") {\n        _this.setState({\n          showQuote: false\n        });\n      } else {\n        _this.setState({\n          validateSymbol: 'validating'\n        },\n        /*#__PURE__*/\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2() {\n          var quote;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return getStockQuote(symbol);\n\n                case 2:\n                  quote = _context2.sent;\n\n                  if (!quote.error) {\n                    _this.setState({\n                      validateSymbol: 'success',\n                      showQuote: true,\n                      currentQuote: quote\n                    });\n                  } else {\n                    _this.setState({\n                      validateSymbol: 'error',\n                      showQuote: true,\n                      currentQuote: quote\n                    });\n                  }\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        })));\n      }\n    };\n\n    _this.handleQtyChange = function (e) {\n      var cash = _this.props.cash;\n      var currentQuote = _this.state.currentQuote;\n      var qty = e.target.value;\n\n      if (qty === \"\") {\n        _this.setState({\n          showPrice: false\n        });\n      } else {\n        _this.setState({\n          validateQty: 'validating'\n        }, function () {\n          if (currentQuote && currentQuote !== \"Unknown symbol\") {\n            if (currentQuote.latestPrice * qty <= cash) {\n              _this.setState({\n                validateQty: 'success',\n                showPrice: true,\n                price: (currentQuote.latestPrice * qty).toFixed(2)\n              });\n            } else {\n              _this.setState({\n                validateQty: 'error',\n                showPrice: true,\n                price: (currentQuote.latestPrice * qty).toFixed(2)\n              });\n            }\n          } else {\n            _this.setState({\n              validateQty: 'warning'\n            });\n          }\n        });\n      }\n    };\n\n    _this.state = {\n      number: {},\n      validateSymbol: '',\n      validateQty: '',\n      showQuote: false,\n      currentQuote: {},\n      showPrice: false,\n      price: 0\n    };\n    return _this;\n  }\n\n  _createClass(BuyShare, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var cash = this.props.cash;\n      var _this$state2 = this.state,\n          showQuote = _this$state2.showQuote,\n          currentQuote = _this$state2.currentQuote,\n          validateSymbol = _this$state2.validateSymbol,\n          validateQty = _this$state2.validateQty,\n          showPrice = _this$state2.showPrice,\n          price = _this$state2.price;\n      return React.createElement(Row, {\n        justify: \"space-around\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 20,\n        className: \"form buy-share\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Cash - $\", cash), React.createElement(Form.Item, {\n        hasFeedback: true,\n        validateStatus: validateSymbol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, getFieldDecorator('symbol', {\n        rules: [{\n          required: true,\n          message: \"Please type the symbol of your stock\"\n        }]\n      })(React.createElement(Input, {\n        onChange: this.handleSymbolChange,\n        size: \"large\",\n        placeholder: \"Ticker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))), showQuote && React.createElement(Animate, {\n        transitionName: \"fade\",\n        transitionAppear: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, !currentQuote.error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, currentQuote.symbol, \": \", currentQuote.companyName, \", latest: \", currentQuote.latestPrice, \", open: \", currentQuote.openPrice) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \" \", currentQuote.error)), React.createElement(Form.Item, {\n        hasFeedback: true,\n        validateStatus: validateQty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, getFieldDecorator('quantity', {\n        rules: [{\n          required: true,\n          message: \"Please type your quantity\"\n        }]\n      })(React.createElement(Input, {\n        size: \"large\",\n        placeholder: \"Quantity\",\n        type: \"number\",\n        onChange: this.handleQtyChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), showPrice && React.createElement(Animate, {\n        transitionName: \"fade\",\n        transitionAppear: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, validateSymbol === \"success\" ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"This will cost $\", price, validateQty === 'error' && \", which excceeds your available cash amount.\") : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Input a Valid Symbol first\")), React.createElement(Button, {\n        htmlType: \"submit\",\n        block: true,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Buy Shares\"))));\n    }\n  }]);\n\n  return BuyShare;\n}(Component);\n\nexport default Form.create({\n  name: 'buy-share'\n})(BuyShare);","map":{"version":3,"sources":["/home/mahak/Desktop/Virtual-Stock-Market/client/src/components/BuyShare.js"],"names":["React","Component","Row","Col","Button","Input","Form","Animate","getStockQuote","buyStock","sell","BuyShare","handleSubmit","e","state","validateQty","validateSymbol","preventDefault","props","form","validateFields","err","values","res","alert","window","location","reload","handleSymbolChange","symbol","target","value","setState","showQuote","quote","error","currentQuote","handleQtyChange","cash","qty","showPrice","latestPrice","price","toFixed","number","getFieldDecorator","rules","required","message","companyName","openPrice","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Row, Col, Button, Input, Form } from 'antd'\nimport Animate from 'rc-animate'\nimport { getStockQuote, buyStock, sell } from '../apis'\nclass BuyShare extends Component{\n  \n  constructor() {\n    super();\n    this.state = {\n      number: {},\n      validateSymbol: '',\n      validateQty: '',\n      showQuote: false,\n      currentQuote: {},\n      showPrice: false,\n      price: 0\n    }\n  }\n  \n  handleSubmit = (e) => {\n    const { validateQty, validateSymbol } = this.state \n    e.preventDefault()\n    this.props.form.validateFields( async(err, values) => {\n      if (!err && validateQty === 'success' && validateSymbol === 'success') {\n        let res = await buyStock(values)\n        alert(res)\n        window.location.reload()\n      }\n    })\n  }\n\n  handleSymbolChange = (e) => {\n    let symbol = e.target.value\n    if(symbol === \"\"){\n      this.setState({\n        showQuote: false,\n      })\n    } else {\n      this.setState({\n        validateSymbol: 'validating'\n      }, async () => {\n        const quote = await getStockQuote(symbol)\n        if(!quote.error){\n          this.setState({\n            validateSymbol: 'success',\n            showQuote: true,\n            currentQuote: quote \n          })\n        }\n        else {\n          this.setState({\n            validateSymbol: 'error',\n            showQuote: true,\n            currentQuote: quote\n          })\n        }\n      })\n    }\n  }\n\n  handleQtyChange = (e) => {\n    const { cash } = this.props\n    const { currentQuote } = this.state\n    let qty = e.target.value\n    if(qty === \"\"){\n      this.setState({\n        showPrice: false,\n      })\n    } else {\n      this.setState({\n        validateQty: 'validating'\n      }, () => {\n        if(currentQuote && currentQuote !== \"Unknown symbol\"){\n          if(currentQuote.latestPrice * qty <= cash){\n            this.setState({\n              validateQty: 'success',\n              showPrice: true,\n              price: (currentQuote.latestPrice * qty).toFixed(2)\n            })\n          } else {\n            this.setState({\n              validateQty: 'error',\n              showPrice: true,\n              price: (currentQuote.latestPrice * qty).toFixed(2)\n            })\n          }\n        }\n        else {\n          this.setState({\n            validateQty: 'warning',\n          })\n        }\n      })\n    }\n  }\n  \n  \n  render() {\n    \n    const { getFieldDecorator } = this.props.form;\n    const { cash } = this.props\n    const { showQuote, currentQuote, validateSymbol, validateQty, showPrice, price } = this.state\n\n    return(\n      <Row justify=\"space-around\">\n        <Col span={20} className=\"form buy-share\">\n          <Form onSubmit={this.handleSubmit}>\n            <h3 className=\"title\">Cash - ${cash}</h3>\n            <Form.Item\n              hasFeedback\n              validateStatus={validateSymbol}\n            >\n              {getFieldDecorator('symbol', {\n                rules: [\n                  {required: true, message: \"Please type the symbol of your stock\"},\n                ]\n              })(\n                <Input \n                  onChange={this.handleSymbolChange}\n                  size=\"large\"\n                  placeholder=\"Ticker\"\n                />\n              )}\n            </Form.Item>\n            { (showQuote) &&\n              <Animate\n                transitionName=\"fade\"\n                transitionAppear\n              >\n              {!currentQuote.error?\n                <p>{currentQuote.symbol}: {currentQuote.companyName}, \n                latest: {currentQuote.latestPrice}, open: {currentQuote.openPrice}</p>:\n                <p> {currentQuote.error}</p>\n              }\n              </Animate>\n            }\n            <Form.Item\n              hasFeedback\n              validateStatus={validateQty}\n            >\n              {getFieldDecorator('quantity', {\n                rules: [\n                  { required: true, message: \"Please type your quantity\" },\n                ]\n              })(\n                <Input \n                  size=\"large\"\n                  placeholder=\"Quantity\"\n                  type=\"number\"\n                  onChange={this.handleQtyChange}\n                />\n              )}\n            </Form.Item>\n            { showPrice &&\n              <Animate\n                transitionName=\"fade\"\n                transitionAppear\n              >\n                { validateSymbol === \"success\"?\n                <p>This will cost ${price}\n                  { validateQty === 'error' &&\n                  \", which excceeds your available cash amount.\"\n                }\n                </p> : \n                <p>\n                  Input a Valid Symbol first\n                </p>\n                }\n              </Animate>\n            }\n            <Button htmlType=\"submit\" block size=\"large\">Buy Shares</Button>\n          </Form>\n        </Col>\n       </Row>\n    )\n  }\n}\n\nexport default Form.create({ name: 'buy-share'})(BuyShare)"]},"metadata":{},"sourceType":"module"}