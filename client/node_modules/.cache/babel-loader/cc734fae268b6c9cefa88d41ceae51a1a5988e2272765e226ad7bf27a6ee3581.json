{"ast":null,"code":"import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport React from 'react';\nvar ColumnManager = function () {\n  function ColumnManager(columns, elements) {\n    _classCallCheck(this, ColumnManager);\n    this._cached = {};\n    this.columns = columns || this.normalize(elements);\n  }\n  _createClass(ColumnManager, [{\n    key: 'isAnyColumnsFixed',\n    value: function isAnyColumnsFixed() {\n      var _this = this;\n      return this._cache('isAnyColumnsFixed', function () {\n        return _this.columns.some(function (column) {\n          return !!column.fixed;\n        });\n      });\n    }\n  }, {\n    key: 'isAnyColumnsLeftFixed',\n    value: function isAnyColumnsLeftFixed() {\n      var _this2 = this;\n      return this._cache('isAnyColumnsLeftFixed', function () {\n        return _this2.columns.some(function (column) {\n          return column.fixed === 'left' || column.fixed === true;\n        });\n      });\n    }\n  }, {\n    key: 'isAnyColumnsRightFixed',\n    value: function isAnyColumnsRightFixed() {\n      var _this3 = this;\n      return this._cache('isAnyColumnsRightFixed', function () {\n        return _this3.columns.some(function (column) {\n          return column.fixed === 'right';\n        });\n      });\n    }\n  }, {\n    key: 'leftColumns',\n    value: function leftColumns() {\n      var _this4 = this;\n      return this._cache('leftColumns', function () {\n        return _this4.groupedColumns().filter(function (column) {\n          return column.fixed === 'left' || column.fixed === true;\n        });\n      });\n    }\n  }, {\n    key: 'rightColumns',\n    value: function rightColumns() {\n      var _this5 = this;\n      return this._cache('rightColumns', function () {\n        return _this5.groupedColumns().filter(function (column) {\n          return column.fixed === 'right';\n        });\n      });\n    }\n  }, {\n    key: 'leafColumns',\n    value: function leafColumns() {\n      var _this6 = this;\n      return this._cache('leafColumns', function () {\n        return _this6._leafColumns(_this6.columns);\n      });\n    }\n  }, {\n    key: 'leftLeafColumns',\n    value: function leftLeafColumns() {\n      var _this7 = this;\n      return this._cache('leftLeafColumns', function () {\n        return _this7._leafColumns(_this7.leftColumns());\n      });\n    }\n  }, {\n    key: 'rightLeafColumns',\n    value: function rightLeafColumns() {\n      var _this8 = this;\n      return this._cache('rightLeafColumns', function () {\n        return _this8._leafColumns(_this8.rightColumns());\n      });\n    }\n\n    // add appropriate rowspan and colspan to column\n  }, {\n    key: 'groupedColumns',\n    value: function groupedColumns() {\n      var _this9 = this;\n      return this._cache('groupedColumns', function () {\n        var _groupColumns = function _groupColumns(columns) {\n          var currentRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          var parentColumn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n          var rows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n          // track how many rows we got\n          rows[currentRow] = rows[currentRow] || [];\n          var grouped = [];\n          var setRowSpan = function setRowSpan(column) {\n            var rowSpan = rows.length - currentRow;\n            if (column && !column.children &&\n            // parent columns are supposed to be one row\n            rowSpan > 1 && (!column.rowSpan || column.rowSpan < rowSpan)) {\n              column.rowSpan = rowSpan;\n            }\n          };\n          columns.forEach(function (column, index) {\n            var newColumn = _extends({}, column);\n            rows[currentRow].push(newColumn);\n            parentColumn.colSpan = parentColumn.colSpan || 0;\n            if (newColumn.children && newColumn.children.length > 0) {\n              newColumn.children = _groupColumns(newColumn.children, currentRow + 1, newColumn, rows);\n              parentColumn.colSpan += newColumn.colSpan;\n            } else {\n              parentColumn.colSpan++;\n            }\n            // update rowspan to all same row columns\n            for (var i = 0; i < rows[currentRow].length - 1; ++i) {\n              setRowSpan(rows[currentRow][i]);\n            }\n            // last column, update rowspan immediately\n            if (index + 1 === columns.length) {\n              setRowSpan(newColumn);\n            }\n            grouped.push(newColumn);\n          });\n          return grouped;\n        };\n        return _groupColumns(_this9.columns);\n      });\n    }\n  }, {\n    key: 'normalize',\n    value: function normalize(elements) {\n      var _this10 = this;\n      var columns = [];\n      React.Children.forEach(elements, function (element) {\n        if (!React.isValidElement(element)) {\n          return;\n        }\n        var column = _extends({}, element.props);\n        if (element.key) {\n          column.key = element.key;\n        }\n        if (element.type.isTableColumnGroup) {\n          column.children = _this10.normalize(column.children);\n        }\n        columns.push(column);\n      });\n      return columns;\n    }\n  }, {\n    key: 'reset',\n    value: function reset(columns, elements) {\n      this.columns = columns || this.normalize(elements);\n      this._cached = {};\n    }\n  }, {\n    key: '_cache',\n    value: function _cache(name, fn) {\n      if (name in this._cached) {\n        return this._cached[name];\n      }\n      this._cached[name] = fn();\n      return this._cached[name];\n    }\n  }, {\n    key: '_leafColumns',\n    value: function _leafColumns(columns) {\n      var _this11 = this;\n      var leafColumns = [];\n      columns.forEach(function (column) {\n        if (!column.children) {\n          leafColumns.push(column);\n        } else {\n          leafColumns.push.apply(leafColumns, _toConsumableArray(_this11._leafColumns(column.children)));\n        }\n      });\n      return leafColumns;\n    }\n  }]);\n  return ColumnManager;\n}();\nexport default ColumnManager;","map":{"version":3,"names":["_toConsumableArray","_extends","_classCallCheck","_createClass","React","ColumnManager","columns","elements","_cached","normalize","key","value","isAnyColumnsFixed","_this","_cache","some","column","fixed","isAnyColumnsLeftFixed","_this2","isAnyColumnsRightFixed","_this3","leftColumns","_this4","groupedColumns","filter","rightColumns","_this5","leafColumns","_this6","_leafColumns","leftLeafColumns","_this7","rightLeafColumns","_this8","_this9","_groupColumns","currentRow","arguments","length","undefined","parentColumn","rows","grouped","setRowSpan","rowSpan","children","forEach","index","newColumn","push","colSpan","i","_this10","Children","element","isValidElement","props","type","isTableColumnGroup","reset","name","fn","_this11","apply"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/rc-table/es/ColumnManager.js"],"sourcesContent":["import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\r\nimport _extends from 'babel-runtime/helpers/extends';\r\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\r\nimport _createClass from 'babel-runtime/helpers/createClass';\r\nimport React from 'react';\r\n\r\nvar ColumnManager = function () {\r\n  function ColumnManager(columns, elements) {\r\n    _classCallCheck(this, ColumnManager);\r\n\r\n    this._cached = {};\r\n\r\n    this.columns = columns || this.normalize(elements);\r\n  }\r\n\r\n  _createClass(ColumnManager, [{\r\n    key: 'isAnyColumnsFixed',\r\n    value: function isAnyColumnsFixed() {\r\n      var _this = this;\r\n\r\n      return this._cache('isAnyColumnsFixed', function () {\r\n        return _this.columns.some(function (column) {\r\n          return !!column.fixed;\r\n        });\r\n      });\r\n    }\r\n  }, {\r\n    key: 'isAnyColumnsLeftFixed',\r\n    value: function isAnyColumnsLeftFixed() {\r\n      var _this2 = this;\r\n\r\n      return this._cache('isAnyColumnsLeftFixed', function () {\r\n        return _this2.columns.some(function (column) {\r\n          return column.fixed === 'left' || column.fixed === true;\r\n        });\r\n      });\r\n    }\r\n  }, {\r\n    key: 'isAnyColumnsRightFixed',\r\n    value: function isAnyColumnsRightFixed() {\r\n      var _this3 = this;\r\n\r\n      return this._cache('isAnyColumnsRightFixed', function () {\r\n        return _this3.columns.some(function (column) {\r\n          return column.fixed === 'right';\r\n        });\r\n      });\r\n    }\r\n  }, {\r\n    key: 'leftColumns',\r\n    value: function leftColumns() {\r\n      var _this4 = this;\r\n\r\n      return this._cache('leftColumns', function () {\r\n        return _this4.groupedColumns().filter(function (column) {\r\n          return column.fixed === 'left' || column.fixed === true;\r\n        });\r\n      });\r\n    }\r\n  }, {\r\n    key: 'rightColumns',\r\n    value: function rightColumns() {\r\n      var _this5 = this;\r\n\r\n      return this._cache('rightColumns', function () {\r\n        return _this5.groupedColumns().filter(function (column) {\r\n          return column.fixed === 'right';\r\n        });\r\n      });\r\n    }\r\n  }, {\r\n    key: 'leafColumns',\r\n    value: function leafColumns() {\r\n      var _this6 = this;\r\n\r\n      return this._cache('leafColumns', function () {\r\n        return _this6._leafColumns(_this6.columns);\r\n      });\r\n    }\r\n  }, {\r\n    key: 'leftLeafColumns',\r\n    value: function leftLeafColumns() {\r\n      var _this7 = this;\r\n\r\n      return this._cache('leftLeafColumns', function () {\r\n        return _this7._leafColumns(_this7.leftColumns());\r\n      });\r\n    }\r\n  }, {\r\n    key: 'rightLeafColumns',\r\n    value: function rightLeafColumns() {\r\n      var _this8 = this;\r\n\r\n      return this._cache('rightLeafColumns', function () {\r\n        return _this8._leafColumns(_this8.rightColumns());\r\n      });\r\n    }\r\n\r\n    // add appropriate rowspan and colspan to column\r\n\r\n  }, {\r\n    key: 'groupedColumns',\r\n    value: function groupedColumns() {\r\n      var _this9 = this;\r\n\r\n      return this._cache('groupedColumns', function () {\r\n        var _groupColumns = function _groupColumns(columns) {\r\n          var currentRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n          var parentColumn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n          var rows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\r\n\r\n          // track how many rows we got\r\n          rows[currentRow] = rows[currentRow] || [];\r\n          var grouped = [];\r\n          var setRowSpan = function setRowSpan(column) {\r\n            var rowSpan = rows.length - currentRow;\r\n            if (column && !column.children && // parent columns are supposed to be one row\r\n            rowSpan > 1 && (!column.rowSpan || column.rowSpan < rowSpan)) {\r\n              column.rowSpan = rowSpan;\r\n            }\r\n          };\r\n          columns.forEach(function (column, index) {\r\n            var newColumn = _extends({}, column);\r\n            rows[currentRow].push(newColumn);\r\n            parentColumn.colSpan = parentColumn.colSpan || 0;\r\n            if (newColumn.children && newColumn.children.length > 0) {\r\n              newColumn.children = _groupColumns(newColumn.children, currentRow + 1, newColumn, rows);\r\n              parentColumn.colSpan += newColumn.colSpan;\r\n            } else {\r\n              parentColumn.colSpan++;\r\n            }\r\n            // update rowspan to all same row columns\r\n            for (var i = 0; i < rows[currentRow].length - 1; ++i) {\r\n              setRowSpan(rows[currentRow][i]);\r\n            }\r\n            // last column, update rowspan immediately\r\n            if (index + 1 === columns.length) {\r\n              setRowSpan(newColumn);\r\n            }\r\n            grouped.push(newColumn);\r\n          });\r\n          return grouped;\r\n        };\r\n        return _groupColumns(_this9.columns);\r\n      });\r\n    }\r\n  }, {\r\n    key: 'normalize',\r\n    value: function normalize(elements) {\r\n      var _this10 = this;\r\n\r\n      var columns = [];\r\n      React.Children.forEach(elements, function (element) {\r\n        if (!React.isValidElement(element)) {\r\n          return;\r\n        }\r\n        var column = _extends({}, element.props);\r\n        if (element.key) {\r\n          column.key = element.key;\r\n        }\r\n        if (element.type.isTableColumnGroup) {\r\n          column.children = _this10.normalize(column.children);\r\n        }\r\n        columns.push(column);\r\n      });\r\n      return columns;\r\n    }\r\n  }, {\r\n    key: 'reset',\r\n    value: function reset(columns, elements) {\r\n      this.columns = columns || this.normalize(elements);\r\n      this._cached = {};\r\n    }\r\n  }, {\r\n    key: '_cache',\r\n    value: function _cache(name, fn) {\r\n      if (name in this._cached) {\r\n        return this._cached[name];\r\n      }\r\n      this._cached[name] = fn();\r\n      return this._cached[name];\r\n    }\r\n  }, {\r\n    key: '_leafColumns',\r\n    value: function _leafColumns(columns) {\r\n      var _this11 = this;\r\n\r\n      var leafColumns = [];\r\n      columns.forEach(function (column) {\r\n        if (!column.children) {\r\n          leafColumns.push(column);\r\n        } else {\r\n          leafColumns.push.apply(leafColumns, _toConsumableArray(_this11._leafColumns(column.children)));\r\n        }\r\n      });\r\n      return leafColumns;\r\n    }\r\n  }]);\r\n\r\n  return ColumnManager;\r\n}();\r\n\r\nexport default ColumnManager;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}