{"ast":null,"code":"import * as types from '../constants';\nimport * as apis from '../apis';\n\nvar userLogin = function userLogin() {\n  return {\n    type: types.LOGIN_REQUEST\n  };\n};\n\nvar userLoginSucceed = function userLoginSucceed(payload) {\n  return {\n    type: types.LOGIN_SUCCEED,\n    payload: payload\n  };\n};\n\nvar userLoginFail = function userLoginFail(payload) {\n  return {\n    type: types.LOGIN_FAIL,\n    payload: payload\n  };\n};\n\nvar userRegister = function userRegister() {\n  return {\n    type: types.REGISTER_REQUEST\n  };\n};\n\nvar userRegisterSucceed = function userRegisterSucceed(payload) {\n  return {\n    type: types.REGISTER_SUCCEED,\n    payload: payload\n  };\n};\n\nvar userRegisterFail = function userRegisterFail(payload) {\n  return {\n    type: types.REGISTER_FAIL,\n    payload: payload\n  };\n};\n\nvar userCheckLogin = function userCheckLogin() {\n  return {\n    type: types.TOKEN_RECEIVE\n  };\n};\n\nvar userIsLoggedIn = function userIsLoggedIn(payload) {\n  return {\n    type: types.TOKEN_VERIFY,\n    payload: payload\n  };\n};\n\nvar userIsNotLoggedIn = function userIsNotLoggedIn() {\n  return {\n    type: types.TOKEN_REJECT\n  };\n};\n\nvar userLogout = function userLogout() {\n  return {\n    type: types.LOGOUT_REQUEST\n  };\n};\n\nvar userLogoutSucceed = function userLogoutSucceed() {\n  return {\n    type: types.LOGOUT_SUCCEED\n  };\n}; //actions for login\n\n\nexport var loginUser = function loginUser(form) {\n  return function (dispatch, getState) {\n    dispatch(userLogin);\n    apis.login(form).then(function (res) {\n      dispatch(userLoginSucceed(res));\n      apis.user().then(function (res) {\n        dispatch(userIsLoggedIn(res));\n      });\n    }).catch(function (e) {\n      dispatch(userLoginFail(e));\n    });\n  };\n};\nexport var registerUser = function registerUser(form) {\n  return function (dispatch, getState) {\n    dispatch(userRegister);\n    apis.register(form).then(function (res) {\n      dispatch(userRegisterSucceed(res));\n      apis.user().then(function (res) {\n        dispatch(userIsLoggedIn(res));\n      });\n    }).catch(function (e) {\n      console.log('error', e);\n      dispatch(userRegisterFail(e));\n    });\n  };\n};\nexport var checkUser = function checkUser() {\n  return function (dispatch, getState) {\n    dispatch(userCheckLogin());\n    apis.user().then(function (res) {\n      dispatch(userIsLoggedIn(res));\n    }).catch(function (e) {\n      dispatch(userIsNotLoggedIn(e));\n      throw e;\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch, getState) {\n    dispatch(userLogout());\n    dispatch(userLogoutSucceed());\n  };\n};","map":{"version":3,"sources":["/home/mahak/Desktop/Virtual-Stock-Market/client/src/actions/index.js"],"names":["types","apis","userLogin","type","LOGIN_REQUEST","userLoginSucceed","payload","LOGIN_SUCCEED","userLoginFail","LOGIN_FAIL","userRegister","REGISTER_REQUEST","userRegisterSucceed","REGISTER_SUCCEED","userRegisterFail","REGISTER_FAIL","userCheckLogin","TOKEN_RECEIVE","userIsLoggedIn","TOKEN_VERIFY","userIsNotLoggedIn","TOKEN_REJECT","userLogout","LOGOUT_REQUEST","userLogoutSucceed","LOGOUT_SUCCEED","loginUser","form","dispatch","getState","login","then","res","user","catch","e","registerUser","register","console","log","checkUser","logout"],"mappings":"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","sourcesContent":[" \nimport * as types from '../constants'\nimport * as apis from '../apis'\n\nconst userLogin = () => ({\n  type: types.LOGIN_REQUEST\n})\n\nconst userLoginSucceed = payload => ({\n  type: types.LOGIN_SUCCEED,\n  payload\n})\n\nconst userLoginFail = payload => ({\n  type: types.LOGIN_FAIL,\n  payload\n})\n\nconst userRegister = () => ({\n  type: types.REGISTER_REQUEST\n})\n\nconst userRegisterSucceed = payload => ({\n  type: types.REGISTER_SUCCEED,\n  payload\n})\n\nconst userRegisterFail = payload => ({\n  type: types.REGISTER_FAIL,\n  payload\n})\n\nconst userCheckLogin = () => ({\n  type: types.TOKEN_RECEIVE,\n})\n\nconst userIsLoggedIn = (payload) => ({\n  type: types.TOKEN_VERIFY,\n  payload\n})\n\nconst userIsNotLoggedIn = () => ({\n  type: types.TOKEN_REJECT,\n})\n\nconst userLogout = () => ({\n  type: types.LOGOUT_REQUEST\n})\n\nconst userLogoutSucceed = () => ({\n  type: types.LOGOUT_SUCCEED\n})\n\n//actions for login\nexport const loginUser = form => (dispatch, getState) => {\n  dispatch(userLogin)\n  apis.login(form)\n  .then( res => {\n    dispatch(userLoginSucceed(res))\n    apis.user()\n    .then(res => {\n      dispatch(userIsLoggedIn(res))\n    })\n  })\n  .catch( e => {\n    dispatch(userLoginFail(e))\n  })\n}\n\nexport const registerUser = form => (dispatch, getState) => {\n  dispatch(userRegister)\n  apis.register(form)\n  .then(res => {\n    dispatch(userRegisterSucceed(res))\n    apis.user()\n    .then(res => {\n      dispatch(userIsLoggedIn(res))\n    })\n  })\n  .catch( e => {\n    console.log('error', e)\n    dispatch(userRegisterFail(e))\n  })\n}\n\nexport const checkUser = () => (dispatch, getState) => {\n  dispatch(userCheckLogin())\n  apis.user()\n  .then(res => {\n    dispatch(userIsLoggedIn(res))\n  })\n  .catch(e => {\n    dispatch(userIsNotLoggedIn(e))\n    throw e\n  })\n}\n\nexport const logout = () => (dispatch, getState) => {\n  dispatch(userLogout())\n  dispatch(userLogoutSucceed())\n}"]},"metadata":{},"sourceType":"module"}