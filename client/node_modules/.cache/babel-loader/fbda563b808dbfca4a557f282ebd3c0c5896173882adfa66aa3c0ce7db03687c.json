{"ast":null,"code":"'use strict';\n\nvar deselectCurrent = require('toggle-selection');\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n    range = document.createRange();\n    selection = document.getSelection();\n    mark = document.createElement('span');\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = 'unset';\n    // prevents scrolling to the end of the page\n    mark.style.position = 'fixed';\n    mark.style.top = 0;\n    mark.style.clip = 'rect(0, 0, 0, 0)';\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = 'pre';\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = 'text';\n    mark.style.MozUserSelect = 'text';\n    mark.style.msUserSelect = 'text';\n    mark.style.userSelect = 'text';\n    document.body.appendChild(mark);\n    range.selectNode(mark);\n    selection.addRange(range);\n    var successful = document.execCommand('copy');\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n    try {\n      window.clipboardData.setData('text', text);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n  return success;\n}\nmodule.exports = copy;","map":{"version":3,"names":["deselectCurrent","require","defaultMessage","format","message","copyKey","test","navigator","userAgent","replace","copy","text","options","debug","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","selectNode","addRange","successful","execCommand","Error","err","console","error","warn","window","clipboardData","setData","prompt","removeRange","removeAllRanges","removeChild","module","exports"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/copy-to-clipboard/index.js"],"sourcesContent":["'use strict';\r\n\r\nvar deselectCurrent = require('toggle-selection');\r\n\r\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\r\n\r\nfunction format(message) {\r\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\r\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\r\n}\r\n\r\nfunction copy(text, options) {\r\n  var debug, message, reselectPrevious, range, selection, mark, success = false;\r\n  if (!options) { options = {}; }\r\n  debug = options.debug || false;\r\n  try {\r\n    reselectPrevious = deselectCurrent();\r\n\r\n    range = document.createRange();\r\n    selection = document.getSelection();\r\n\r\n    mark = document.createElement('span');\r\n    mark.textContent = text;\r\n    // reset user styles for span element\r\n    mark.style.all = 'unset';\r\n    // prevents scrolling to the end of the page\r\n    mark.style.position = 'fixed';\r\n    mark.style.top = 0;\r\n    mark.style.clip = 'rect(0, 0, 0, 0)';\r\n    // used to preserve spaces and line breaks\r\n    mark.style.whiteSpace = 'pre';\r\n    // do not inherit user-select (it may be `none`)\r\n    mark.style.webkitUserSelect = 'text';\r\n    mark.style.MozUserSelect = 'text';\r\n    mark.style.msUserSelect = 'text';\r\n    mark.style.userSelect = 'text';\r\n\r\n    document.body.appendChild(mark);\r\n\r\n    range.selectNode(mark);\r\n    selection.addRange(range);\r\n\r\n    var successful = document.execCommand('copy');\r\n    if (!successful) {\r\n      throw new Error('copy command was unsuccessful');\r\n    }\r\n    success = true;\r\n  } catch (err) {\r\n    debug && console.error('unable to copy using execCommand: ', err);\r\n    debug && console.warn('trying IE specific stuff');\r\n    try {\r\n      window.clipboardData.setData('text', text);\r\n      success = true;\r\n    } catch (err) {\r\n      debug && console.error('unable to copy using clipboardData: ', err);\r\n      debug && console.error('falling back to prompt');\r\n      message = format('message' in options ? options.message : defaultMessage);\r\n      window.prompt(message, text);\r\n    }\r\n  } finally {\r\n    if (selection) {\r\n      if (typeof selection.removeRange == 'function') {\r\n        selection.removeRange(range);\r\n      } else {\r\n        selection.removeAllRanges();\r\n      }\r\n    }\r\n\r\n    if (mark) {\r\n      document.body.removeChild(mark);\r\n    }\r\n    reselectPrevious();\r\n  }\r\n\r\n  return success;\r\n}\r\n\r\nmodule.exports = copy;\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,eAAe,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEjD,IAAIC,cAAc,GAAG,kCAAkC;AAEvD,SAASC,MAAMA,CAACC,OAAO,EAAE;EACvB,IAAIC,OAAO,GAAG,CAAC,WAAW,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,GAAG,GAAG,GAAG,MAAM,IAAI,IAAI;EAC3E,OAAOJ,OAAO,CAACK,OAAO,CAAC,eAAe,EAAEJ,OAAO,CAAC;AAClD;AAEA,SAASK,IAAIA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC3B,IAAIC,KAAK;IAAET,OAAO;IAAEU,gBAAgB;IAAEC,KAAK;IAAEC,SAAS;IAAEC,IAAI;IAAEC,OAAO,GAAG,KAAK;EAC7E,IAAI,CAACN,OAAO,EAAE;IAAEA,OAAO,GAAG,CAAC,CAAC;EAAE;EAC9BC,KAAK,GAAGD,OAAO,CAACC,KAAK,IAAI,KAAK;EAC9B,IAAI;IACFC,gBAAgB,GAAGd,eAAe,EAAE;IAEpCe,KAAK,GAAGI,QAAQ,CAACC,WAAW,EAAE;IAC9BJ,SAAS,GAAGG,QAAQ,CAACE,YAAY,EAAE;IAEnCJ,IAAI,GAAGE,QAAQ,CAACG,aAAa,CAAC,MAAM,CAAC;IACrCL,IAAI,CAACM,WAAW,GAAGZ,IAAI;IACvB;IACAM,IAAI,CAACO,KAAK,CAACC,GAAG,GAAG,OAAO;IACxB;IACAR,IAAI,CAACO,KAAK,CAACE,QAAQ,GAAG,OAAO;IAC7BT,IAAI,CAACO,KAAK,CAACG,GAAG,GAAG,CAAC;IAClBV,IAAI,CAACO,KAAK,CAACI,IAAI,GAAG,kBAAkB;IACpC;IACAX,IAAI,CAACO,KAAK,CAACK,UAAU,GAAG,KAAK;IAC7B;IACAZ,IAAI,CAACO,KAAK,CAACM,gBAAgB,GAAG,MAAM;IACpCb,IAAI,CAACO,KAAK,CAACO,aAAa,GAAG,MAAM;IACjCd,IAAI,CAACO,KAAK,CAACQ,YAAY,GAAG,MAAM;IAChCf,IAAI,CAACO,KAAK,CAACS,UAAU,GAAG,MAAM;IAE9Bd,QAAQ,CAACe,IAAI,CAACC,WAAW,CAAClB,IAAI,CAAC;IAE/BF,KAAK,CAACqB,UAAU,CAACnB,IAAI,CAAC;IACtBD,SAAS,CAACqB,QAAQ,CAACtB,KAAK,CAAC;IAEzB,IAAIuB,UAAU,GAAGnB,QAAQ,CAACoB,WAAW,CAAC,MAAM,CAAC;IAC7C,IAAI,CAACD,UAAU,EAAE;MACf,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;IAClD;IACAtB,OAAO,GAAG,IAAI;EAChB,CAAC,CAAC,OAAOuB,GAAG,EAAE;IACZ5B,KAAK,IAAI6B,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEF,GAAG,CAAC;IACjE5B,KAAK,IAAI6B,OAAO,CAACE,IAAI,CAAC,0BAA0B,CAAC;IACjD,IAAI;MACFC,MAAM,CAACC,aAAa,CAACC,OAAO,CAAC,MAAM,EAAEpC,IAAI,CAAC;MAC1CO,OAAO,GAAG,IAAI;IAChB,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZ5B,KAAK,IAAI6B,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEF,GAAG,CAAC;MACnE5B,KAAK,IAAI6B,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;MAChDvC,OAAO,GAAGD,MAAM,CAAC,SAAS,IAAIS,OAAO,GAAGA,OAAO,CAACR,OAAO,GAAGF,cAAc,CAAC;MACzE2C,MAAM,CAACG,MAAM,CAAC5C,OAAO,EAAEO,IAAI,CAAC;IAC9B;EACF,CAAC,SAAS;IACR,IAAIK,SAAS,EAAE;MACb,IAAI,OAAOA,SAAS,CAACiC,WAAW,IAAI,UAAU,EAAE;QAC9CjC,SAAS,CAACiC,WAAW,CAAClC,KAAK,CAAC;MAC9B,CAAC,MAAM;QACLC,SAAS,CAACkC,eAAe,EAAE;MAC7B;IACF;IAEA,IAAIjC,IAAI,EAAE;MACRE,QAAQ,CAACe,IAAI,CAACiB,WAAW,CAAClC,IAAI,CAAC;IACjC;IACAH,gBAAgB,EAAE;EACpB;EAEA,OAAOI,OAAO;AAChB;AAEAkC,MAAM,CAACC,OAAO,GAAG3C,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}