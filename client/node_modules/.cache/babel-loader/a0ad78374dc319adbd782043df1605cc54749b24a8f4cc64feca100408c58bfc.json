{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport toArray from 'rc-util/es/Children/toArray';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { treeContextTypes } from './contextTypes';\nimport { convertTreeToEntities, convertDataToTree, getDataAndAria, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from './util';\nvar Tree = function (_React$Component) {\n  _inherits(Tree, _React$Component);\n  function Tree(props) {\n    _classCallCheck(this, Tree);\n    var _this = _possibleConstructorReturn(this, (Tree.__proto__ || Object.getPrototypeOf(Tree)).call(this, props));\n    _this.onNodeDragStart = function (event, node) {\n      var expandedKeys = _this.state.expandedKeys;\n      var onDragStart = _this.props.onDragStart;\n      var _node$props = node.props,\n        eventKey = _node$props.eventKey,\n        children = _node$props.children;\n      _this.dragNode = node;\n      _this.setState({\n        dragNodesKeys: getDragNodesKeys(children, node),\n        expandedKeys: arrDel(expandedKeys, eventKey)\n      });\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.onNodeDragEnter = function (event, node) {\n      var expandedKeys = _this.state.expandedKeys;\n      var onDragEnter = _this.props.onDragEnter;\n      var _node$props2 = node.props,\n        pos = _node$props2.pos,\n        eventKey = _node$props2.eventKey;\n      if (!_this.dragNode) return;\n      var dropPosition = calcDropPosition(event, node);\n\n      // Skip if drag node is self\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n        _this.setState({\n          dragOverNodeKey: '',\n          dropPosition: null\n        });\n        return;\n      }\n\n      // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          dragOverNodeKey: eventKey,\n          dropPosition: dropPosition\n        });\n\n        // Side effect for delay drag\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          if (!('expandedKeys' in _this.props)) {\n            _this.setState({\n              expandedKeys: newExpandedKeys\n            });\n          }\n          if (onDragEnter) {\n            onDragEnter({\n              event: event,\n              node: node,\n              expandedKeys: newExpandedKeys\n            });\n          }\n        }, 400);\n      }, 0);\n    };\n    _this.onNodeDragOver = function (event, node) {\n      var onDragOver = _this.props.onDragOver;\n      var eventKey = node.props.eventKey;\n\n      // Update drag position\n\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _this.state.dropPosition) return;\n        _this.setState({\n          dropPosition: dropPosition\n        });\n      }\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n      if (onDragEnd) {\n        onDragEnd({\n          event: event,\n          node: node\n        });\n      }\n      _this.dragNode = null;\n    };\n    _this.onNodeDrop = function (event, node) {\n      var _this$state = _this.state,\n        _this$state$dragNodes = _this$state.dragNodesKeys,\n        dragNodesKeys = _this$state$dragNodes === undefined ? [] : _this$state$dragNodes,\n        dropPosition = _this$state.dropPosition;\n      var onDrop = _this.props.onDrop;\n      var _node$props3 = node.props,\n        eventKey = _node$props3.eventKey,\n        pos = _node$props3.pos;\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, 'Can not drop to dragNode(include it\\'s children node)');\n        return;\n      }\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: _this.dragNode,\n        dragNodesKeys: dragNodesKeys.slice(),\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n      if (dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n      if (onDrop) {\n        onDrop(dropResult);\n      }\n      _this.dragNode = null;\n    };\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props = _this.props,\n        onSelect = _this$props.onSelect,\n        multiple = _this$props.multiple;\n      var _treeNode$props = treeNode.props,\n        selected = _treeNode$props.selected,\n        eventKey = _treeNode$props.eventKey;\n      var targetSelected = !selected;\n\n      // Update selected keys\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      }\n\n      // [Legacy] Not found related usage in doc or upper libs\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities[key];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n      if (onSelect) {\n        var eventObj = {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        };\n        onSelect(selectedKeys, eventObj);\n      }\n    };\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state2 = _this.state,\n        keyEntities = _this$state2.keyEntities,\n        oriCheckedKeys = _this$state2.checkedKeys,\n        oriHalfCheckedKeys = _this$state2.halfCheckedKeys;\n      var _this$props2 = _this.props,\n        checkStrictly = _this$props2.checkStrictly,\n        onCheck = _this$props2.onCheck;\n      var eventKey = treeNode.props.eventKey;\n\n      // Prepare trigger arguments\n\n      var checkedObj = void 0;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities[key];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n            checkedKeys: oriCheckedKeys,\n            halfCheckedKeys: oriHalfCheckedKeys\n          }),\n          _checkedKeys = _conductCheck.checkedKeys,\n          _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n        checkedObj = _checkedKeys;\n\n        // [Legacy] This is used for `rc-tree-select`\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities[key];\n          if (!entity) return;\n          var node = entity.node,\n            pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys,\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n            loadedKeys = _ref$loadedKeys === undefined ? [] : _ref$loadedKeys,\n            _ref$loadingKeys = _ref.loadingKeys,\n            loadingKeys = _ref$loadingKeys === undefined ? [] : _ref$loadingKeys;\n          var _this$props3 = _this.props,\n            loadData = _this$props3.loadData,\n            onLoad = _this$props3.onLoad;\n          var eventKey = treeNode.props.eventKey;\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          }\n\n          // Process load data\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var newLoadedKeys = arrAdd(_this.state.loadedKeys, eventKey);\n            var newLoadingKeys = arrDel(_this.state.loadingKeys, eventKey);\n\n            // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n            if (onLoad) {\n              var eventObj = {\n                event: 'load',\n                node: treeNode\n              };\n              onLoad(newLoadedKeys, eventObj);\n            }\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    };\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var _this$props4 = _this.props,\n        onExpand = _this$props4.onExpand,\n        loadData = _this$props4.loadData;\n      var _treeNode$props2 = treeNode.props,\n        eventKey = _treeNode$props2.eventKey,\n        expanded = _treeNode$props2.expanded;\n\n      // Update selected keys\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys\n      });\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      }\n\n      // Async Load data\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this.setUncontrolledState({\n            expandedKeys: expandedKeys\n          });\n        }) : null;\n      }\n      return null;\n    };\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n    _this.setUncontrolledState = function (state) {\n      var needSync = false;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) return;\n        needSync = true;\n        newState[name] = state[name];\n      });\n      if (needSync) {\n        _this.setState(newState);\n      }\n    };\n    _this.registerTreeNode = function (key, node) {\n      if (node) {\n        _this.domTreeNodes[key] = node;\n      } else {\n        delete _this.domTreeNodes[key];\n      }\n    };\n    _this.isKeyChecked = function (key) {\n      var _this$state$checkedKe = _this.state.checkedKeys,\n        checkedKeys = _this$state$checkedKe === undefined ? [] : _this$state$checkedKe;\n      return checkedKeys.indexOf(key) !== -1;\n    };\n    _this.renderTreeNode = function (child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _this$state3 = _this.state,\n        keyEntities = _this$state3.keyEntities,\n        _this$state3$expanded = _this$state3.expandedKeys,\n        expandedKeys = _this$state3$expanded === undefined ? [] : _this$state3$expanded,\n        _this$state3$selected = _this$state3.selectedKeys,\n        selectedKeys = _this$state3$selected === undefined ? [] : _this$state3$selected,\n        _this$state3$halfChec = _this$state3.halfCheckedKeys,\n        halfCheckedKeys = _this$state3$halfChec === undefined ? [] : _this$state3$halfChec,\n        _this$state3$loadedKe = _this$state3.loadedKeys,\n        loadedKeys = _this$state3$loadedKe === undefined ? [] : _this$state3$loadedKe,\n        _this$state3$loadingK = _this$state3.loadingKeys,\n        loadingKeys = _this$state3$loadingK === undefined ? [] : _this$state3$loadingK,\n        dragOverNodeKey = _this$state3.dragOverNodeKey,\n        dropPosition = _this$state3.dropPosition;\n      var pos = getPosition(level, index);\n      var key = child.key || pos;\n      if (!keyEntities[key]) {\n        warnOnlyTreeNode();\n        return null;\n      }\n      return React.cloneElement(child, {\n        key: key,\n        eventKey: key,\n        expanded: expandedKeys.indexOf(key) !== -1,\n        selected: selectedKeys.indexOf(key) !== -1,\n        loaded: loadedKeys.indexOf(key) !== -1,\n        loading: loadingKeys.indexOf(key) !== -1,\n        checked: _this.isKeyChecked(key),\n        halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n        pos: pos,\n        // [Legacy] Drag props\n        dragOver: dragOverNodeKey === key && dropPosition === 0,\n        dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n        dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n      });\n    };\n    _this.state = {\n      // TODO: Remove this eslint\n      posEntities: {},\n      // eslint-disable-line react/no-unused-state\n      keyEntities: {},\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      treeNode: []\n    };\n\n    // Internal usage for `rc-tree-select`, we don't promise it will not change.\n    _this.domTreeNodes = {};\n    return _this;\n  }\n  _createClass(Tree, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      var _props = this.props,\n        prefixCls = _props.prefixCls,\n        selectable = _props.selectable,\n        showIcon = _props.showIcon,\n        icon = _props.icon,\n        draggable = _props.draggable,\n        checkable = _props.checkable,\n        checkStrictly = _props.checkStrictly,\n        disabled = _props.disabled,\n        loadData = _props.loadData,\n        filterTreeNode = _props.filterTreeNode,\n        openTransitionName = _props.openTransitionName,\n        openAnimation = _props.openAnimation,\n        switcherIcon = _props.switcherIcon;\n      return {\n        rcTree: {\n          // root: this,\n\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          openTransitionName: openTransitionName,\n          openAnimation: openAnimation,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          renderTreeNode: this.renderTreeNode,\n          isKeyChecked: this.isKeyChecked,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop,\n          registerTreeNode: this.registerTreeNode\n        }\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n      var treeNode = this.state.treeNode;\n      var _props2 = this.props,\n        prefixCls = _props2.prefixCls,\n        className = _props2.className,\n        focusable = _props2.focusable,\n        showLine = _props2.showLine,\n        _props2$tabIndex = _props2.tabIndex,\n        tabIndex = _props2$tabIndex === undefined ? 0 : _props2$tabIndex;\n      var domProps = getDataAndAria(this.props);\n      if (focusable) {\n        domProps.tabIndex = tabIndex;\n        domProps.onKeyDown = this.onKeyDown;\n      }\n      return React.createElement('ul', _extends({}, domProps, {\n        className: classNames(prefixCls, className, _defineProperty({}, prefixCls + '-show-line', showLine)),\n        role: 'tree',\n        unselectable: 'on'\n      }), mapChildren(treeNode, function (node, index) {\n        return _this2.renderTreeNode(node, index);\n      }));\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      }\n\n      // ================== Tree Node ==================\n      var treeNode = null;\n\n      // Check if `treeData` or `children` changed and save into the state.\n      if (needSync('treeData')) {\n        treeNode = convertDataToTree(props.treeData);\n      } else if (needSync('children')) {\n        treeNode = toArray(props.children);\n      }\n\n      // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n      if (treeNode) {\n        newState.treeNode = treeNode;\n\n        // Calculate the entities data for quick match\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState.posEntities = entitiesMap.posEntities;\n        newState.keyEntities = entitiesMap.keyEntities;\n      }\n      var keyEntities = newState.keyEntities || prevState.keyEntities;\n\n      // ================ expandedKeys =================\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        newState.expandedKeys = Object.keys(keyEntities);\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      // ================ selectedKeys =================\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n\n      // ================= checkedKeys =================\n      if (props.checkable) {\n        var checkedKeyEntity = void 0;\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n            _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n            checkedKeys = _checkedKeyEntity$che === undefined ? [] : _checkedKeyEntity$che,\n            _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n            halfCheckedKeys = _checkedKeyEntity$hal === undefined ? [] : _checkedKeyEntity$hal;\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      }\n      // ================= loadedKeys ==================\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n      return newState;\n    }\n\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n    /**\n     * Only update the value which is not in props\n     */\n\n    /**\n     * [Legacy] Original logic use `key` as tracking clue.\n     * We have to use `cloneElement` to pass `key`.\n     */\n  }]);\n\n  return Tree;\n}(React.Component);\nTree.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any,\n  treeData: PropTypes.array,\n  // Generate treeNode by children\n  showLine: PropTypes.bool,\n  showIcon: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  focusable: PropTypes.bool,\n  selectable: PropTypes.bool,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  checkStrictly: PropTypes.bool,\n  draggable: PropTypes.bool,\n  defaultExpandParent: PropTypes.bool,\n  autoExpandParent: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\n  expandedKeys: PropTypes.arrayOf(PropTypes.string),\n  defaultCheckedKeys: PropTypes.arrayOf(PropTypes.string),\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onExpand: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelect: PropTypes.func,\n  onLoad: PropTypes.func,\n  loadData: PropTypes.func,\n  loadedKeys: PropTypes.arrayOf(PropTypes.string),\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDrop: PropTypes.func,\n  filterTreeNode: PropTypes.func,\n  openTransitionName: PropTypes.string,\n  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\nTree.childContextTypes = treeContextTypes;\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: []\n};\npolyfill(Tree);\nexport default Tree;","map":{"version":3,"names":["_extends","_defineProperty","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","PropTypes","classNames","warning","toArray","polyfill","treeContextTypes","convertTreeToEntities","convertDataToTree","getDataAndAria","getPosition","getDragNodesKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","mapChildren","conductCheck","warnOnlyTreeNode","Tree","_React$Component","props","_this","__proto__","Object","getPrototypeOf","call","onNodeDragStart","event","node","expandedKeys","state","onDragStart","_node$props","eventKey","children","dragNode","setState","dragNodesKeys","onNodeDragEnter","onDragEnter","_node$props2","pos","dropPosition","dragOverNodeKey","setTimeout","delayedDragEnterLogic","keys","forEach","key","clearTimeout","newExpandedKeys","onNodeDragOver","onDragOver","onNodeDragLeave","onDragLeave","onNodeDragEnd","onDragEnd","onNodeDrop","_this$state","_this$state$dragNodes","undefined","onDrop","_node$props3","indexOf","posArr","dropResult","slice","Number","length","dropToGap","onNodeClick","e","treeNode","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","selectedKeys","keyEntities","_this$props","onSelect","multiple","_treeNode$props","selected","targetSelected","selectedNodes","map","entity","filter","setUncontrolledState","eventObj","nativeEvent","onNodeCheck","checked","_this$state2","oriCheckedKeys","checkedKeys","oriHalfCheckedKeys","halfCheckedKeys","_this$props2","checkStrictly","onCheck","checkedObj","halfChecked","checkedNodes","_conductCheck","_checkedKeys","_halfCheckedKeys","checkedNodesPositions","push","onNodeLoad","Promise","resolve","_ref","_ref$loadedKeys","loadedKeys","_ref$loadingKeys","loadingKeys","_this$props3","loadData","onLoad","promise","then","newLoadedKeys","newLoadingKeys","onNodeExpand","_this$props4","onExpand","_treeNode$props2","expanded","index","targetExpanded","loadPromise","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","needSync","newState","name","registerTreeNode","domTreeNodes","isKeyChecked","_this$state$checkedKe","renderTreeNode","child","level","arguments","_this$state3","_this$state3$expanded","_this$state3$selected","_this$state3$halfChec","_this$state3$loadedKe","_this$state3$loadingK","cloneElement","loaded","loading","dragOver","dragOverGapTop","dragOverGapBottom","posEntities","value","getChildContext","_props","prefixCls","selectable","showIcon","icon","draggable","checkable","disabled","filterTreeNode","openTransitionName","openAnimation","switcherIcon","rcTree","render","_this2","_props2","className","focusable","showLine","_props2$tabIndex","tabIndex","domProps","onKeyDown","createElement","role","unselectable","getDerivedStateFromProps","prevState","prevProps","treeData","entitiesMap","autoExpandParent","defaultExpandParent","defaultExpandAll","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","propTypes","string","oneOfType","number","any","array","bool","func","arrayOf","object","childContextTypes","defaultProps"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/rc-tree-select/node_modules/rc-tree/es/Tree.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport toArray from 'rc-util/es/Children/toArray';\nimport { polyfill } from 'react-lifecycles-compat';\n\nimport { treeContextTypes } from './contextTypes';\nimport { convertTreeToEntities, convertDataToTree, getDataAndAria, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from './util';\n\nvar Tree = function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  function Tree(props) {\n    _classCallCheck(this, Tree);\n\n    var _this = _possibleConstructorReturn(this, (Tree.__proto__ || Object.getPrototypeOf(Tree)).call(this, props));\n\n    _this.onNodeDragStart = function (event, node) {\n      var expandedKeys = _this.state.expandedKeys;\n      var onDragStart = _this.props.onDragStart;\n      var _node$props = node.props,\n          eventKey = _node$props.eventKey,\n          children = _node$props.children;\n\n\n      _this.dragNode = node;\n\n      _this.setState({\n        dragNodesKeys: getDragNodesKeys(children, node),\n        expandedKeys: arrDel(expandedKeys, eventKey)\n      });\n\n      if (onDragStart) {\n        onDragStart({ event: event, node: node });\n      }\n    };\n\n    _this.onNodeDragEnter = function (event, node) {\n      var expandedKeys = _this.state.expandedKeys;\n      var onDragEnter = _this.props.onDragEnter;\n      var _node$props2 = node.props,\n          pos = _node$props2.pos,\n          eventKey = _node$props2.eventKey;\n\n\n      if (!_this.dragNode) return;\n\n      var dropPosition = calcDropPosition(event, node);\n\n      // Skip if drag node is self\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n        _this.setState({\n          dragOverNodeKey: '',\n          dropPosition: null\n        });\n        return;\n      }\n\n      // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          dragOverNodeKey: eventKey,\n          dropPosition: dropPosition\n        });\n\n        // Side effect for delay drag\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          if (!('expandedKeys' in _this.props)) {\n            _this.setState({\n              expandedKeys: newExpandedKeys\n            });\n          }\n\n          if (onDragEnter) {\n            onDragEnter({ event: event, node: node, expandedKeys: newExpandedKeys });\n          }\n        }, 400);\n      }, 0);\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var onDragOver = _this.props.onDragOver;\n      var eventKey = node.props.eventKey;\n\n      // Update drag position\n\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n        var dropPosition = calcDropPosition(event, node);\n\n        if (dropPosition === _this.state.dropPosition) return;\n\n        _this.setState({\n          dropPosition: dropPosition\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({ event: event, node: node });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      if (onDragLeave) {\n        onDragLeave({ event: event, node: node });\n      }\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n      if (onDragEnd) {\n        onDragEnd({ event: event, node: node });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$state = _this.state,\n          _this$state$dragNodes = _this$state.dragNodesKeys,\n          dragNodesKeys = _this$state$dragNodes === undefined ? [] : _this$state$dragNodes,\n          dropPosition = _this$state.dropPosition;\n      var onDrop = _this.props.onDrop;\n      var _node$props3 = node.props,\n          eventKey = _node$props3.eventKey,\n          pos = _node$props3.pos;\n\n\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, 'Can not drop to dragNode(include it\\'s children node)');\n        return;\n      }\n\n      var posArr = posToArr(pos);\n\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: _this.dragNode,\n        dragNodesKeys: dragNodesKeys.slice(),\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n\n      if (onDrop) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          multiple = _this$props.multiple;\n      var _treeNode$props = treeNode.props,\n          selected = _treeNode$props.selected,\n          eventKey = _treeNode$props.eventKey;\n\n      var targetSelected = !selected;\n\n      // Update selected keys\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      }\n\n      // [Legacy] Not found related usage in doc or upper libs\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities[key];\n        if (!entity) return null;\n\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({ selectedKeys: selectedKeys });\n\n      if (onSelect) {\n        var eventObj = {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        };\n        onSelect(selectedKeys, eventObj);\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state2 = _this.state,\n          keyEntities = _this$state2.keyEntities,\n          oriCheckedKeys = _this$state2.checkedKeys,\n          oriHalfCheckedKeys = _this$state2.halfCheckedKeys;\n      var _this$props2 = _this.props,\n          checkStrictly = _this$props2.checkStrictly,\n          onCheck = _this$props2.onCheck;\n      var eventKey = treeNode.props.eventKey;\n\n      // Prepare trigger arguments\n\n      var checkedObj = void 0;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = { checked: checkedKeys, halfChecked: halfCheckedKeys };\n\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities[key];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({ checkedKeys: checkedKeys });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n          checkedKeys: oriCheckedKeys, halfCheckedKeys: oriHalfCheckedKeys\n        }),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n        checkedObj = _checkedKeys;\n\n        // [Legacy] This is used for `rc-tree-select`\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities[key];\n          if (!entity) return;\n\n          var node = entity.node,\n              pos = entity.pos;\n\n\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({ node: node, pos: pos });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys,\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === undefined ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === undefined ? [] : _ref$loadingKeys;\n          var _this$props3 = _this.props,\n              loadData = _this$props3.loadData,\n              onLoad = _this$props3.onLoad;\n          var eventKey = treeNode.props.eventKey;\n\n\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          }\n\n          // Process load data\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var newLoadedKeys = arrAdd(_this.state.loadedKeys, eventKey);\n            var newLoadingKeys = arrDel(_this.state.loadingKeys, eventKey);\n\n            // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n            if (onLoad) {\n              var eventObj = {\n                event: 'load',\n                node: treeNode\n              };\n              onLoad(newLoadedKeys, eventObj);\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n\n          return {\n            loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var _this$props4 = _this.props,\n          onExpand = _this$props4.onExpand,\n          loadData = _this$props4.loadData;\n      var _treeNode$props2 = treeNode.props,\n          eventKey = _treeNode$props2.eventKey,\n          expanded = _treeNode$props2.expanded;\n\n      // Update selected keys\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n\n      _this.setUncontrolledState({ expandedKeys: expandedKeys });\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      }\n\n      // Async Load data\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this.setUncontrolledState({ expandedKeys: expandedKeys });\n        }) : null;\n      }\n\n      return null;\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({ event: event, node: node });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({ event: event, node: node });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({ event: event, node: node });\n      }\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var needSync = false;\n      var newState = {};\n\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) return;\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync) {\n        _this.setState(newState);\n      }\n    };\n\n    _this.registerTreeNode = function (key, node) {\n      if (node) {\n        _this.domTreeNodes[key] = node;\n      } else {\n        delete _this.domTreeNodes[key];\n      }\n    };\n\n    _this.isKeyChecked = function (key) {\n      var _this$state$checkedKe = _this.state.checkedKeys,\n          checkedKeys = _this$state$checkedKe === undefined ? [] : _this$state$checkedKe;\n\n      return checkedKeys.indexOf(key) !== -1;\n    };\n\n    _this.renderTreeNode = function (child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _this$state3 = _this.state,\n          keyEntities = _this$state3.keyEntities,\n          _this$state3$expanded = _this$state3.expandedKeys,\n          expandedKeys = _this$state3$expanded === undefined ? [] : _this$state3$expanded,\n          _this$state3$selected = _this$state3.selectedKeys,\n          selectedKeys = _this$state3$selected === undefined ? [] : _this$state3$selected,\n          _this$state3$halfChec = _this$state3.halfCheckedKeys,\n          halfCheckedKeys = _this$state3$halfChec === undefined ? [] : _this$state3$halfChec,\n          _this$state3$loadedKe = _this$state3.loadedKeys,\n          loadedKeys = _this$state3$loadedKe === undefined ? [] : _this$state3$loadedKe,\n          _this$state3$loadingK = _this$state3.loadingKeys,\n          loadingKeys = _this$state3$loadingK === undefined ? [] : _this$state3$loadingK,\n          dragOverNodeKey = _this$state3.dragOverNodeKey,\n          dropPosition = _this$state3.dropPosition;\n\n      var pos = getPosition(level, index);\n      var key = child.key || pos;\n\n      if (!keyEntities[key]) {\n        warnOnlyTreeNode();\n        return null;\n      }\n\n      return React.cloneElement(child, {\n        key: key,\n        eventKey: key,\n        expanded: expandedKeys.indexOf(key) !== -1,\n        selected: selectedKeys.indexOf(key) !== -1,\n        loaded: loadedKeys.indexOf(key) !== -1,\n        loading: loadingKeys.indexOf(key) !== -1,\n        checked: _this.isKeyChecked(key),\n        halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n        pos: pos,\n\n        // [Legacy] Drag props\n        dragOver: dragOverNodeKey === key && dropPosition === 0,\n        dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n        dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n      });\n    };\n\n    _this.state = {\n      // TODO: Remove this eslint\n      posEntities: {}, // eslint-disable-line react/no-unused-state\n      keyEntities: {},\n\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n\n      treeNode: []\n    };\n\n    // Internal usage for `rc-tree-select`, we don't promise it will not change.\n    _this.domTreeNodes = {};\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          selectable = _props.selectable,\n          showIcon = _props.showIcon,\n          icon = _props.icon,\n          draggable = _props.draggable,\n          checkable = _props.checkable,\n          checkStrictly = _props.checkStrictly,\n          disabled = _props.disabled,\n          loadData = _props.loadData,\n          filterTreeNode = _props.filterTreeNode,\n          openTransitionName = _props.openTransitionName,\n          openAnimation = _props.openAnimation,\n          switcherIcon = _props.switcherIcon;\n\n\n      return {\n        rcTree: {\n          // root: this,\n\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          openTransitionName: openTransitionName,\n          openAnimation: openAnimation,\n\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          renderTreeNode: this.renderTreeNode,\n          isKeyChecked: this.isKeyChecked,\n\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop,\n\n          registerTreeNode: this.registerTreeNode\n        }\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var treeNode = this.state.treeNode;\n      var _props2 = this.props,\n          prefixCls = _props2.prefixCls,\n          className = _props2.className,\n          focusable = _props2.focusable,\n          showLine = _props2.showLine,\n          _props2$tabIndex = _props2.tabIndex,\n          tabIndex = _props2$tabIndex === undefined ? 0 : _props2$tabIndex;\n\n      var domProps = getDataAndAria(this.props);\n\n      if (focusable) {\n        domProps.tabIndex = tabIndex;\n        domProps.onKeyDown = this.onKeyDown;\n      }\n\n      return React.createElement(\n        'ul',\n        _extends({}, domProps, {\n          className: classNames(prefixCls, className, _defineProperty({}, prefixCls + '-show-line', showLine)),\n          role: 'tree',\n          unselectable: 'on'\n        }),\n        mapChildren(treeNode, function (node, index) {\n          return _this2.renderTreeNode(node, index);\n        })\n      );\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      }\n\n      // ================== Tree Node ==================\n      var treeNode = null;\n\n      // Check if `treeData` or `children` changed and save into the state.\n      if (needSync('treeData')) {\n        treeNode = convertDataToTree(props.treeData);\n      } else if (needSync('children')) {\n        treeNode = toArray(props.children);\n      }\n\n      // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n      if (treeNode) {\n        newState.treeNode = treeNode;\n\n        // Calculate the entities data for quick match\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState.posEntities = entitiesMap.posEntities;\n        newState.keyEntities = entitiesMap.keyEntities;\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities;\n\n      // ================ expandedKeys =================\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        newState.expandedKeys = Object.keys(keyEntities);\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      // ================ selectedKeys =================\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n\n      // ================= checkedKeys =================\n      if (props.checkable) {\n        var checkedKeyEntity = void 0;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === undefined ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === undefined ? [] : _checkedKeyEntity$hal;\n\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      }\n      // ================= loadedKeys ==================\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    /**\n     * Only update the value which is not in props\n     */\n\n\n    /**\n     * [Legacy] Original logic use `key` as tracking clue.\n     * We have to use `cloneElement` to pass `key`.\n     */\n\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any,\n  treeData: PropTypes.array, // Generate treeNode by children\n  showLine: PropTypes.bool,\n  showIcon: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  focusable: PropTypes.bool,\n  selectable: PropTypes.bool,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  checkStrictly: PropTypes.bool,\n  draggable: PropTypes.bool,\n  defaultExpandParent: PropTypes.bool,\n  autoExpandParent: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\n  expandedKeys: PropTypes.arrayOf(PropTypes.string),\n  defaultCheckedKeys: PropTypes.arrayOf(PropTypes.string),\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onExpand: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelect: PropTypes.func,\n  onLoad: PropTypes.func,\n  loadData: PropTypes.func,\n  loadedKeys: PropTypes.arrayOf(PropTypes.string),\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDrop: PropTypes.func,\n  filterTreeNode: PropTypes.func,\n  openTransitionName: PropTypes.string,\n  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\nTree.childContextTypes = treeContextTypes;\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: []\n};\n\n\npolyfill(Tree);\n\nexport default Tree;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}