{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { measureScrollbar } from './utils';\nimport BaseTable from './BaseTable';\nexport default function HeadTable(props, _ref) {\n  var table = _ref.table;\n  var _table$props = table.props,\n    prefixCls = _table$props.prefixCls,\n    scroll = _table$props.scroll,\n    showHeader = _table$props.showHeader;\n  var columns = props.columns,\n    fixed = props.fixed,\n    tableClassName = props.tableClassName,\n    handleBodyScrollLeft = props.handleBodyScrollLeft,\n    expander = props.expander;\n  var saveRef = table.saveRef;\n  var useFixedHeader = table.props.useFixedHeader;\n  var headStyle = {};\n  if (scroll.y) {\n    useFixedHeader = true;\n    // Add negative margin bottom for scroll bar overflow bug\n    var scrollbarWidth = measureScrollbar('horizontal');\n    if (scrollbarWidth > 0 && !fixed) {\n      headStyle.marginBottom = '-' + scrollbarWidth + 'px';\n      headStyle.paddingBottom = '0px';\n    }\n  }\n  if (!useFixedHeader || !showHeader) {\n    return null;\n  }\n  return React.createElement('div', {\n    key: 'headTable',\n    ref: fixed ? null : saveRef('headTable'),\n    className: prefixCls + '-header',\n    style: headStyle,\n    onScroll: handleBodyScrollLeft\n  }, React.createElement(BaseTable, {\n    tableClassName: tableClassName,\n    hasHead: true,\n    hasBody: false,\n    fixed: fixed,\n    columns: columns,\n    expander: expander\n  }));\n}\nHeadTable.propTypes = {\n  fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  columns: PropTypes.array.isRequired,\n  tableClassName: PropTypes.string.isRequired,\n  handleBodyScrollLeft: PropTypes.func.isRequired,\n  expander: PropTypes.object.isRequired\n};\nHeadTable.contextTypes = {\n  table: PropTypes.any\n};","map":{"version":3,"names":["React","PropTypes","measureScrollbar","BaseTable","HeadTable","props","_ref","table","_table$props","prefixCls","scroll","showHeader","columns","fixed","tableClassName","handleBodyScrollLeft","expander","saveRef","useFixedHeader","headStyle","y","scrollbarWidth","marginBottom","paddingBottom","createElement","key","ref","className","style","onScroll","hasHead","hasBody","propTypes","oneOfType","string","bool","array","isRequired","func","object","contextTypes","any"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/rc-table/es/HeadTable.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { measureScrollbar } from './utils';\nimport BaseTable from './BaseTable';\n\nexport default function HeadTable(props, _ref) {\n  var table = _ref.table;\n  var _table$props = table.props,\n      prefixCls = _table$props.prefixCls,\n      scroll = _table$props.scroll,\n      showHeader = _table$props.showHeader;\n  var columns = props.columns,\n      fixed = props.fixed,\n      tableClassName = props.tableClassName,\n      handleBodyScrollLeft = props.handleBodyScrollLeft,\n      expander = props.expander;\n  var saveRef = table.saveRef;\n  var useFixedHeader = table.props.useFixedHeader;\n\n  var headStyle = {};\n\n  if (scroll.y) {\n    useFixedHeader = true;\n    // Add negative margin bottom for scroll bar overflow bug\n    var scrollbarWidth = measureScrollbar('horizontal');\n    if (scrollbarWidth > 0 && !fixed) {\n      headStyle.marginBottom = '-' + scrollbarWidth + 'px';\n      headStyle.paddingBottom = '0px';\n    }\n  }\n\n  if (!useFixedHeader || !showHeader) {\n    return null;\n  }\n\n  return React.createElement(\n    'div',\n    {\n      key: 'headTable',\n      ref: fixed ? null : saveRef('headTable'),\n      className: prefixCls + '-header',\n      style: headStyle,\n      onScroll: handleBodyScrollLeft\n    },\n    React.createElement(BaseTable, {\n      tableClassName: tableClassName,\n      hasHead: true,\n      hasBody: false,\n      fixed: fixed,\n      columns: columns,\n      expander: expander\n    })\n  );\n}\n\nHeadTable.propTypes = {\n  fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  columns: PropTypes.array.isRequired,\n  tableClassName: PropTypes.string.isRequired,\n  handleBodyScrollLeft: PropTypes.func.isRequired,\n  expander: PropTypes.object.isRequired\n};\n\nHeadTable.contextTypes = {\n  table: PropTypes.any\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,gBAAgB,QAAQ,SAAS;AAC1C,OAAOC,SAAS,MAAM,aAAa;AAEnC,eAAe,SAASC,SAASA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAC7C,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;EACtB,IAAIC,YAAY,GAAGD,KAAK,CAACF,KAAK;IAC1BI,SAAS,GAAGD,YAAY,CAACC,SAAS;IAClCC,MAAM,GAAGF,YAAY,CAACE,MAAM;IAC5BC,UAAU,GAAGH,YAAY,CAACG,UAAU;EACxC,IAAIC,OAAO,GAAGP,KAAK,CAACO,OAAO;IACvBC,KAAK,GAAGR,KAAK,CAACQ,KAAK;IACnBC,cAAc,GAAGT,KAAK,CAACS,cAAc;IACrCC,oBAAoB,GAAGV,KAAK,CAACU,oBAAoB;IACjDC,QAAQ,GAAGX,KAAK,CAACW,QAAQ;EAC7B,IAAIC,OAAO,GAAGV,KAAK,CAACU,OAAO;EAC3B,IAAIC,cAAc,GAAGX,KAAK,CAACF,KAAK,CAACa,cAAc;EAE/C,IAAIC,SAAS,GAAG,CAAC,CAAC;EAElB,IAAIT,MAAM,CAACU,CAAC,EAAE;IACZF,cAAc,GAAG,IAAI;IACrB;IACA,IAAIG,cAAc,GAAGnB,gBAAgB,CAAC,YAAY,CAAC;IACnD,IAAImB,cAAc,GAAG,CAAC,IAAI,CAACR,KAAK,EAAE;MAChCM,SAAS,CAACG,YAAY,GAAG,GAAG,GAAGD,cAAc,GAAG,IAAI;MACpDF,SAAS,CAACI,aAAa,GAAG,KAAK;IACjC;EACF;EAEA,IAAI,CAACL,cAAc,IAAI,CAACP,UAAU,EAAE;IAClC,OAAO,IAAI;EACb;EAEA,OAAOX,KAAK,CAACwB,aAAa,CACxB,KAAK,EACL;IACEC,GAAG,EAAE,WAAW;IAChBC,GAAG,EAAEb,KAAK,GAAG,IAAI,GAAGI,OAAO,CAAC,WAAW,CAAC;IACxCU,SAAS,EAAElB,SAAS,GAAG,SAAS;IAChCmB,KAAK,EAAET,SAAS;IAChBU,QAAQ,EAAEd;EACZ,CAAC,EACDf,KAAK,CAACwB,aAAa,CAACrB,SAAS,EAAE;IAC7BW,cAAc,EAAEA,cAAc;IAC9BgB,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE,KAAK;IACdlB,KAAK,EAAEA,KAAK;IACZD,OAAO,EAAEA,OAAO;IAChBI,QAAQ,EAAEA;EACZ,CAAC,CAAC,CACH;AACH;AAEAZ,SAAS,CAAC4B,SAAS,GAAG;EACpBnB,KAAK,EAAEZ,SAAS,CAACgC,SAAS,CAAC,CAAChC,SAAS,CAACiC,MAAM,EAAEjC,SAAS,CAACkC,IAAI,CAAC,CAAC;EAC9DvB,OAAO,EAAEX,SAAS,CAACmC,KAAK,CAACC,UAAU;EACnCvB,cAAc,EAAEb,SAAS,CAACiC,MAAM,CAACG,UAAU;EAC3CtB,oBAAoB,EAAEd,SAAS,CAACqC,IAAI,CAACD,UAAU;EAC/CrB,QAAQ,EAAEf,SAAS,CAACsC,MAAM,CAACF;AAC7B,CAAC;AAEDjC,SAAS,CAACoC,YAAY,GAAG;EACvBjC,KAAK,EAAEN,SAAS,CAACwC;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}