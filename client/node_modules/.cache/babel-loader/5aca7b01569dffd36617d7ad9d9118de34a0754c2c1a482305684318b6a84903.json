{"ast":null,"code":"var _svgBaseProps;\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport warning from '../_util/warning'; // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\nexport var svgBaseProps = (_svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor'\n}, _defineProperty(_svgBaseProps, 'aria-hidden', 'true'), _defineProperty(_svgBaseProps, \"focusable\", 'false'), _svgBaseProps);\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\nexport function getThemeFromTypeName(type) {\n  var result = null;\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n  return result;\n}\nexport function removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\nexport function withThemeSuffix(type, theme) {\n  var result = type;\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    warning(false, 'Icon', \"This icon '\".concat(type, \"' has unknown theme '\").concat(theme, \"'\"));\n  }\n  return result;\n} // For alias or compatibility\n\nexport function alias(type) {\n  switch (type) {\n    case 'cross':\n      return 'close';\n    default:\n  }\n  return type;\n}","map":{"version":3,"names":["_svgBaseProps","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","warning","svgBaseProps","width","height","fill","fillTester","outlineTester","twoToneTester","getThemeFromTypeName","type","result","test","removeTypeTheme","replace","withThemeSuffix","theme","concat","alias"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/antd/es/icon/utils.js"],"sourcesContent":["var _svgBaseProps;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport warning from '../_util/warning'; // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\nexport var svgBaseProps = (_svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor'\n}, _defineProperty(_svgBaseProps, 'aria-hidden', 'true'), _defineProperty(_svgBaseProps, \"focusable\", 'false'), _svgBaseProps);\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\nexport function getThemeFromTypeName(type) {\n  var result = null;\n\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n\n  return result;\n}\nexport function removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\nexport function withThemeSuffix(type, theme) {\n  var result = type;\n\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    warning(false, 'Icon', \"This icon '\".concat(type, \"' has unknown theme '\").concat(theme, \"'\"));\n  }\n\n  return result;\n} // For alias or compatibility\n\nexport function alias(type) {\n  switch (type) {\n    case 'cross':\n      return 'close';\n\n    default:\n  }\n\n  return type;\n}"],"mappings":"AAAA,IAAIA,aAAa;AAEjB,SAASC,eAAeA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAE;EAAE,IAAID,GAAG,IAAID,GAAG,EAAE;IAAEG,MAAM,CAACC,cAAc,CAACJ,GAAG,EAAEC,GAAG,EAAE;MAAEC,KAAK,EAAEA,KAAK;MAAEG,UAAU,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEP,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;EAAE;EAAE,OAAOF,GAAG;AAAE;AAEhN,OAAOQ,OAAO,MAAM,kBAAkB,CAAC,CAAC;AACxC;;AAEA,OAAO,IAAIC,YAAY,IAAIX,aAAa,GAAG;EACzCY,KAAK,EAAE,KAAK;EACZC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE;AACR,CAAC,EAAEb,eAAe,CAACD,aAAa,EAAE,aAAa,EAAE,MAAM,CAAC,EAAEC,eAAe,CAACD,aAAa,EAAE,WAAW,EAAE,OAAO,CAAC,EAAEA,aAAa,CAAC;AAC9H,IAAIe,UAAU,GAAG,QAAQ;AACzB,IAAIC,aAAa,GAAG,KAAK;AACzB,IAAIC,aAAa,GAAG,WAAW;AAC/B,OAAO,SAASC,oBAAoBA,CAACC,IAAI,EAAE;EACzC,IAAIC,MAAM,GAAG,IAAI;EAEjB,IAAIL,UAAU,CAACM,IAAI,CAACF,IAAI,CAAC,EAAE;IACzBC,MAAM,GAAG,QAAQ;EACnB,CAAC,MAAM,IAAIJ,aAAa,CAACK,IAAI,CAACF,IAAI,CAAC,EAAE;IACnCC,MAAM,GAAG,UAAU;EACrB,CAAC,MAAM,IAAIH,aAAa,CAACI,IAAI,CAACF,IAAI,CAAC,EAAE;IACnCC,MAAM,GAAG,SAAS;EACpB;EAEA,OAAOA,MAAM;AACf;AACA,OAAO,SAASE,eAAeA,CAACH,IAAI,EAAE;EACpC,OAAOA,IAAI,CAACI,OAAO,CAACR,UAAU,EAAE,EAAE,CAAC,CAACQ,OAAO,CAACP,aAAa,EAAE,EAAE,CAAC,CAACO,OAAO,CAACN,aAAa,EAAE,EAAE,CAAC;AAC3F;AACA,OAAO,SAASO,eAAeA,CAACL,IAAI,EAAEM,KAAK,EAAE;EAC3C,IAAIL,MAAM,GAAGD,IAAI;EAEjB,IAAIM,KAAK,KAAK,QAAQ,EAAE;IACtBL,MAAM,IAAI,OAAO;EACnB,CAAC,MAAM,IAAIK,KAAK,KAAK,UAAU,EAAE;IAC/BL,MAAM,IAAI,IAAI;EAChB,CAAC,MAAM,IAAIK,KAAK,KAAK,SAAS,EAAE;IAC9BL,MAAM,IAAI,UAAU;EACtB,CAAC,MAAM;IACLV,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,aAAa,CAACgB,MAAM,CAACP,IAAI,EAAE,uBAAuB,CAAC,CAACO,MAAM,CAACD,KAAK,EAAE,GAAG,CAAC,CAAC;EAChG;EAEA,OAAOL,MAAM;AACf,CAAC,CAAC;;AAEF,OAAO,SAASO,KAAKA,CAACR,IAAI,EAAE;EAC1B,QAAQA,IAAI;IACV,KAAK,OAAO;MACV,OAAO,OAAO;IAEhB;EAAQ;EAGV,OAAOA,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}