{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @typechecks\r\n */\n\nvar PhotosMimeType = require('./PhotosMimeType');\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar emptyFunction = require('./emptyFunction');\nvar CR_LF_REGEX = new RegExp('\\r\\n', 'g');\nvar LF_ONLY = '\\n';\nvar RICH_TEXT_TYPES = {\n  'text/rtf': 1,\n  'text/html': 1\n};\n\n/**\r\n * If DataTransferItem is a file then return the Blob of data.\r\n *\r\n * @param {object} item\r\n * @return {?blob}\r\n */\nfunction getFileFromDataTransfer(item) {\n  if (item.kind == 'file') {\n    return item.getAsFile();\n  }\n}\nvar DataTransfer = function () {\n  /**\r\n   * @param {object} data\r\n   */\n  function DataTransfer(data) {\n    _classCallCheck(this, DataTransfer);\n    this.data = data;\n\n    // Types could be DOMStringList or array\n    this.types = data.types ? createArrayFromMixed(data.types) : [];\n  }\n\n  /**\r\n   * Is this likely to be a rich text data transfer?\r\n   *\r\n   * @return {boolean}\r\n   */\n\n  DataTransfer.prototype.isRichText = function isRichText() {\n    // If HTML is available, treat this data as rich text. This way, we avoid\n    // using a pasted image if it is packaged with HTML -- this may occur with\n    // pastes from MS Word, for example.  However this is only rich text if\n    // there's accompanying text.\n    if (this.getHTML() && this.getText()) {\n      return true;\n    }\n\n    // When an image is copied from a preview window, you end up with two\n    // DataTransferItems one of which is a file's metadata as text.  Skip those.\n    if (this.isImage()) {\n      return false;\n    }\n    return this.types.some(function (type) {\n      return RICH_TEXT_TYPES[type];\n    });\n  };\n\n  /**\r\n   * Get raw text.\r\n   *\r\n   * @return {?string}\r\n   */\n\n  DataTransfer.prototype.getText = function getText() {\n    var text;\n    if (this.data.getData) {\n      if (!this.types.length) {\n        text = this.data.getData('Text');\n      } else if (this.types.indexOf('text/plain') != -1) {\n        text = this.data.getData('text/plain');\n      }\n    }\n    return text ? text.replace(CR_LF_REGEX, LF_ONLY) : null;\n  };\n\n  /**\r\n   * Get HTML paste data\r\n   *\r\n   * @return {?string}\r\n   */\n\n  DataTransfer.prototype.getHTML = function getHTML() {\n    if (this.data.getData) {\n      if (!this.types.length) {\n        return this.data.getData('Text');\n      } else if (this.types.indexOf('text/html') != -1) {\n        return this.data.getData('text/html');\n      }\n    }\n  };\n\n  /**\r\n   * Is this a link data transfer?\r\n   *\r\n   * @return {boolean}\r\n   */\n\n  DataTransfer.prototype.isLink = function isLink() {\n    return this.types.some(function (type) {\n      return type.indexOf('Url') != -1 || type.indexOf('text/uri-list') != -1 || type.indexOf('text/x-moz-url');\n    });\n  };\n\n  /**\r\n   * Get a link url.\r\n   *\r\n   * @return {?string}\r\n   */\n\n  DataTransfer.prototype.getLink = function getLink() {\n    if (this.data.getData) {\n      if (this.types.indexOf('text/x-moz-url') != -1) {\n        var url = this.data.getData('text/x-moz-url').split('\\n');\n        return url[0];\n      }\n      return this.types.indexOf('text/uri-list') != -1 ? this.data.getData('text/uri-list') : this.data.getData('url');\n    }\n    return null;\n  };\n\n  /**\r\n   * Is this an image data transfer?\r\n   *\r\n   * @return {boolean}\r\n   */\n\n  DataTransfer.prototype.isImage = function isImage() {\n    var isImage = this.types.some(function (type) {\n      // Firefox will have a type of application/x-moz-file for images during\n      // dragging\n      return type.indexOf('application/x-moz-file') != -1;\n    });\n    if (isImage) {\n      return true;\n    }\n    var items = this.getFiles();\n    for (var i = 0; i < items.length; i++) {\n      var type = items[i].type;\n      if (!PhotosMimeType.isImage(type)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  DataTransfer.prototype.getCount = function getCount() {\n    if (this.data.hasOwnProperty('items')) {\n      return this.data.items.length;\n    } else if (this.data.hasOwnProperty('mozItemCount')) {\n      return this.data.mozItemCount;\n    } else if (this.data.files) {\n      return this.data.files.length;\n    }\n    return null;\n  };\n\n  /**\r\n   * Get files.\r\n   *\r\n   * @return {array}\r\n   */\n\n  DataTransfer.prototype.getFiles = function getFiles() {\n    if (this.data.items) {\n      // createArrayFromMixed doesn't properly handle DataTransferItemLists.\n      return Array.prototype.slice.call(this.data.items).map(getFileFromDataTransfer).filter(emptyFunction.thatReturnsArgument);\n    } else if (this.data.files) {\n      return Array.prototype.slice.call(this.data.files);\n    } else {\n      return [];\n    }\n  };\n\n  /**\r\n   * Are there any files to fetch?\r\n   *\r\n   * @return {boolean}\r\n   */\n\n  DataTransfer.prototype.hasFiles = function hasFiles() {\n    return this.getFiles().length > 0;\n  };\n  return DataTransfer;\n}();\nmodule.exports = DataTransfer;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","PhotosMimeType","require","createArrayFromMixed","emptyFunction","CR_LF_REGEX","RegExp","LF_ONLY","RICH_TEXT_TYPES","getFileFromDataTransfer","item","kind","getAsFile","DataTransfer","data","types","prototype","isRichText","getHTML","getText","isImage","some","type","text","getData","length","indexOf","replace","isLink","getLink","url","split","items","getFiles","i","getCount","hasOwnProperty","mozItemCount","files","Array","slice","call","map","filter","thatReturnsArgument","hasFiles","module","exports"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/fbjs/lib/DataTransfer.js"],"sourcesContent":["'use strict';\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @typechecks\r\n */\r\n\r\nvar PhotosMimeType = require('./PhotosMimeType');\r\n\r\nvar createArrayFromMixed = require('./createArrayFromMixed');\r\nvar emptyFunction = require('./emptyFunction');\r\n\r\nvar CR_LF_REGEX = new RegExp('\\r\\n', 'g');\r\nvar LF_ONLY = '\\n';\r\n\r\nvar RICH_TEXT_TYPES = {\r\n  'text/rtf': 1,\r\n  'text/html': 1\r\n};\r\n\r\n/**\r\n * If DataTransferItem is a file then return the Blob of data.\r\n *\r\n * @param {object} item\r\n * @return {?blob}\r\n */\r\nfunction getFileFromDataTransfer(item) {\r\n  if (item.kind == 'file') {\r\n    return item.getAsFile();\r\n  }\r\n}\r\n\r\nvar DataTransfer = function () {\r\n  /**\r\n   * @param {object} data\r\n   */\r\n  function DataTransfer(data) {\r\n    _classCallCheck(this, DataTransfer);\r\n\r\n    this.data = data;\r\n\r\n    // Types could be DOMStringList or array\r\n    this.types = data.types ? createArrayFromMixed(data.types) : [];\r\n  }\r\n\r\n  /**\r\n   * Is this likely to be a rich text data transfer?\r\n   *\r\n   * @return {boolean}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.isRichText = function isRichText() {\r\n    // If HTML is available, treat this data as rich text. This way, we avoid\r\n    // using a pasted image if it is packaged with HTML -- this may occur with\r\n    // pastes from MS Word, for example.  However this is only rich text if\r\n    // there's accompanying text.\r\n    if (this.getHTML() && this.getText()) {\r\n      return true;\r\n    }\r\n\r\n    // When an image is copied from a preview window, you end up with two\r\n    // DataTransferItems one of which is a file's metadata as text.  Skip those.\r\n    if (this.isImage()) {\r\n      return false;\r\n    }\r\n\r\n    return this.types.some(function (type) {\r\n      return RICH_TEXT_TYPES[type];\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get raw text.\r\n   *\r\n   * @return {?string}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.getText = function getText() {\r\n    var text;\r\n    if (this.data.getData) {\r\n      if (!this.types.length) {\r\n        text = this.data.getData('Text');\r\n      } else if (this.types.indexOf('text/plain') != -1) {\r\n        text = this.data.getData('text/plain');\r\n      }\r\n    }\r\n    return text ? text.replace(CR_LF_REGEX, LF_ONLY) : null;\r\n  };\r\n\r\n  /**\r\n   * Get HTML paste data\r\n   *\r\n   * @return {?string}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.getHTML = function getHTML() {\r\n    if (this.data.getData) {\r\n      if (!this.types.length) {\r\n        return this.data.getData('Text');\r\n      } else if (this.types.indexOf('text/html') != -1) {\r\n        return this.data.getData('text/html');\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Is this a link data transfer?\r\n   *\r\n   * @return {boolean}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.isLink = function isLink() {\r\n    return this.types.some(function (type) {\r\n      return type.indexOf('Url') != -1 || type.indexOf('text/uri-list') != -1 || type.indexOf('text/x-moz-url');\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get a link url.\r\n   *\r\n   * @return {?string}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.getLink = function getLink() {\r\n    if (this.data.getData) {\r\n      if (this.types.indexOf('text/x-moz-url') != -1) {\r\n        var url = this.data.getData('text/x-moz-url').split('\\n');\r\n        return url[0];\r\n      }\r\n      return this.types.indexOf('text/uri-list') != -1 ? this.data.getData('text/uri-list') : this.data.getData('url');\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Is this an image data transfer?\r\n   *\r\n   * @return {boolean}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.isImage = function isImage() {\r\n    var isImage = this.types.some(function (type) {\r\n      // Firefox will have a type of application/x-moz-file for images during\r\n      // dragging\r\n      return type.indexOf('application/x-moz-file') != -1;\r\n    });\r\n\r\n    if (isImage) {\r\n      return true;\r\n    }\r\n\r\n    var items = this.getFiles();\r\n    for (var i = 0; i < items.length; i++) {\r\n      var type = items[i].type;\r\n      if (!PhotosMimeType.isImage(type)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  DataTransfer.prototype.getCount = function getCount() {\r\n    if (this.data.hasOwnProperty('items')) {\r\n      return this.data.items.length;\r\n    } else if (this.data.hasOwnProperty('mozItemCount')) {\r\n      return this.data.mozItemCount;\r\n    } else if (this.data.files) {\r\n      return this.data.files.length;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Get files.\r\n   *\r\n   * @return {array}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.getFiles = function getFiles() {\r\n    if (this.data.items) {\r\n      // createArrayFromMixed doesn't properly handle DataTransferItemLists.\r\n      return Array.prototype.slice.call(this.data.items).map(getFileFromDataTransfer).filter(emptyFunction.thatReturnsArgument);\r\n    } else if (this.data.files) {\r\n      return Array.prototype.slice.call(this.data.files);\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Are there any files to fetch?\r\n   *\r\n   * @return {boolean}\r\n   */\r\n\r\n\r\n  DataTransfer.prototype.hasFiles = function hasFiles() {\r\n    return this.getFiles().length > 0;\r\n  };\r\n\r\n  return DataTransfer;\r\n}();\r\n\r\nmodule.exports = DataTransfer;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}