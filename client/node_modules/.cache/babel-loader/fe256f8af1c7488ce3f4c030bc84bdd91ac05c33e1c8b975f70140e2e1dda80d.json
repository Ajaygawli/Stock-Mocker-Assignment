{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport toArray from 'rc-util/es/Children/toArray';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { treeContextTypes } from './contextTypes';\nimport { convertTreeToEntities, convertDataToTree, getDataAndAria, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from './util';\nvar Tree = function (_React$Component) {\n  _inherits(Tree, _React$Component);\n  function Tree() {\n    var _ref;\n    var _temp, _this, _ret;\n    _classCallCheck(this, Tree);\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Tree.__proto__ || Object.getPrototypeOf(Tree)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      // TODO: Remove this eslint\n      posEntities: {},\n      // eslint-disable-line react/no-unused-state\n      keyEntities: {},\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      treeNode: []\n    }, _this.onNodeDragStart = function (event, node) {\n      var expandedKeys = _this.state.expandedKeys;\n      var onDragStart = _this.props.onDragStart;\n      var _node$props = node.props,\n        eventKey = _node$props.eventKey,\n        children = _node$props.children;\n      _this.dragNode = node;\n      _this.setState({\n        dragNodesKeys: getDragNodesKeys(children, node),\n        expandedKeys: arrDel(expandedKeys, eventKey)\n      });\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: node\n        });\n      }\n    }, _this.onNodeDragEnter = function (event, node) {\n      var expandedKeys = _this.state.expandedKeys;\n      var onDragEnter = _this.props.onDragEnter;\n      var _node$props2 = node.props,\n        pos = _node$props2.pos,\n        eventKey = _node$props2.eventKey;\n      if (!_this.dragNode) return;\n      var dropPosition = calcDropPosition(event, node);\n\n      // Skip if drag node is self\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n        _this.setState({\n          dragOverNodeKey: '',\n          dropPosition: null\n        });\n        return;\n      }\n\n      // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          dragOverNodeKey: eventKey,\n          dropPosition: dropPosition\n        });\n\n        // Side effect for delay drag\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          if (!('expandedKeys' in _this.props)) {\n            _this.setState({\n              expandedKeys: newExpandedKeys\n            });\n          }\n          if (onDragEnter) {\n            onDragEnter({\n              event: event,\n              node: node,\n              expandedKeys: newExpandedKeys\n            });\n          }\n        }, 400);\n      }, 0);\n    }, _this.onNodeDragOver = function (event, node) {\n      var onDragOver = _this.props.onDragOver;\n      var eventKey = node.props.eventKey;\n\n      // Update drag position\n\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _this.state.dropPosition) return;\n        _this.setState({\n          dropPosition: dropPosition\n        });\n      }\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: node\n        });\n      }\n    }, _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: node\n        });\n      }\n    }, _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n      if (onDragEnd) {\n        onDragEnd({\n          event: event,\n          node: node\n        });\n      }\n      _this.dragNode = null;\n    }, _this.onNodeDrop = function (event, node) {\n      var _this$state = _this.state,\n        _this$state$dragNodes = _this$state.dragNodesKeys,\n        dragNodesKeys = _this$state$dragNodes === undefined ? [] : _this$state$dragNodes,\n        dropPosition = _this$state.dropPosition;\n      var onDrop = _this.props.onDrop;\n      var _node$props3 = node.props,\n        eventKey = _node$props3.eventKey,\n        pos = _node$props3.pos;\n      _this.setState({\n        dragOverNodeKey: ''\n      });\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, 'Can not drop to dragNode(include it\\'s children node)');\n        return;\n      }\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: _this.dragNode,\n        dragNodesKeys: dragNodesKeys.slice(),\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n      if (dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n      if (onDrop) {\n        onDrop(dropResult);\n      }\n      _this.dragNode = null;\n    }, _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    }, _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    }, _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props = _this.props,\n        onSelect = _this$props.onSelect,\n        multiple = _this$props.multiple;\n      var _treeNode$props = treeNode.props,\n        selected = _treeNode$props.selected,\n        eventKey = _treeNode$props.eventKey;\n      var targetSelected = !selected;\n\n      // Update selected keys\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      }\n\n      // [Legacy] Not found related usage in doc or upper libs\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities[key];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n      if (onSelect) {\n        var eventObj = {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        };\n        onSelect(selectedKeys, eventObj);\n      }\n    }, _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state2 = _this.state,\n        keyEntities = _this$state2.keyEntities,\n        oriCheckedKeys = _this$state2.checkedKeys,\n        oriHalfCheckedKeys = _this$state2.halfCheckedKeys;\n      var _this$props2 = _this.props,\n        checkStrictly = _this$props2.checkStrictly,\n        onCheck = _this$props2.onCheck;\n      var eventKey = treeNode.props.eventKey;\n\n      // Prepare trigger arguments\n\n      var checkedObj = void 0;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities[key];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n            checkedKeys: oriCheckedKeys,\n            halfCheckedKeys: oriHalfCheckedKeys\n          }),\n          _checkedKeys = _conductCheck.checkedKeys,\n          _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n        checkedObj = _checkedKeys;\n\n        // [Legacy] This is used for `rc-tree-select`\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities[key];\n          if (!entity) return;\n          var node = entity.node,\n            pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys,\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    }, _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref2) {\n          var _ref2$loadedKeys = _ref2.loadedKeys,\n            loadedKeys = _ref2$loadedKeys === undefined ? [] : _ref2$loadedKeys,\n            _ref2$loadingKeys = _ref2.loadingKeys,\n            loadingKeys = _ref2$loadingKeys === undefined ? [] : _ref2$loadingKeys;\n          var _this$props3 = _this.props,\n            loadData = _this$props3.loadData,\n            onLoad = _this$props3.onLoad;\n          var eventKey = treeNode.props.eventKey;\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          }\n\n          // Process load data\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var newLoadedKeys = arrAdd(_this.state.loadedKeys, eventKey);\n            var newLoadingKeys = arrDel(_this.state.loadingKeys, eventKey);\n\n            // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n            if (onLoad) {\n              var eventObj = {\n                event: 'load',\n                node: treeNode\n              };\n              onLoad(newLoadedKeys, eventObj);\n            }\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    }, _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var _this$props4 = _this.props,\n        onExpand = _this$props4.onExpand,\n        loadData = _this$props4.loadData;\n      var _treeNode$props2 = treeNode.props,\n        eventKey = _treeNode$props2.eventKey,\n        expanded = _treeNode$props2.expanded;\n\n      // Update selected keys\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys\n      });\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      }\n\n      // Async Load data\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this.setUncontrolledState({\n            expandedKeys: expandedKeys\n          });\n        }) : null;\n      }\n      return null;\n    }, _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    }, _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    }, _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    }, _this.setUncontrolledState = function (state) {\n      var needSync = false;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) return;\n        needSync = true;\n        newState[name] = state[name];\n      });\n      if (needSync) {\n        _this.setState(newState);\n      }\n    }, _this.isKeyChecked = function (key) {\n      var _this$state$checkedKe = _this.state.checkedKeys,\n        checkedKeys = _this$state$checkedKe === undefined ? [] : _this$state$checkedKe;\n      return checkedKeys.indexOf(key) !== -1;\n    }, _this.renderTreeNode = function (child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _this$state3 = _this.state,\n        keyEntities = _this$state3.keyEntities,\n        _this$state3$expanded = _this$state3.expandedKeys,\n        expandedKeys = _this$state3$expanded === undefined ? [] : _this$state3$expanded,\n        _this$state3$selected = _this$state3.selectedKeys,\n        selectedKeys = _this$state3$selected === undefined ? [] : _this$state3$selected,\n        _this$state3$halfChec = _this$state3.halfCheckedKeys,\n        halfCheckedKeys = _this$state3$halfChec === undefined ? [] : _this$state3$halfChec,\n        _this$state3$loadedKe = _this$state3.loadedKeys,\n        loadedKeys = _this$state3$loadedKe === undefined ? [] : _this$state3$loadedKe,\n        _this$state3$loadingK = _this$state3.loadingKeys,\n        loadingKeys = _this$state3$loadingK === undefined ? [] : _this$state3$loadingK,\n        dragOverNodeKey = _this$state3.dragOverNodeKey,\n        dropPosition = _this$state3.dropPosition;\n      var pos = getPosition(level, index);\n      var key = child.key || pos;\n      if (!keyEntities[key]) {\n        warnOnlyTreeNode();\n        return null;\n      }\n      return React.cloneElement(child, {\n        key: key,\n        eventKey: key,\n        expanded: expandedKeys.indexOf(key) !== -1,\n        selected: selectedKeys.indexOf(key) !== -1,\n        loaded: loadedKeys.indexOf(key) !== -1,\n        loading: loadingKeys.indexOf(key) !== -1,\n        checked: _this.isKeyChecked(key),\n        halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n        pos: pos,\n        // [Legacy] Drag props\n        dragOver: dragOverNodeKey === key && dropPosition === 0,\n        dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n        dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  _createClass(Tree, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      var _props = this.props,\n        prefixCls = _props.prefixCls,\n        selectable = _props.selectable,\n        showIcon = _props.showIcon,\n        icon = _props.icon,\n        draggable = _props.draggable,\n        checkable = _props.checkable,\n        checkStrictly = _props.checkStrictly,\n        disabled = _props.disabled,\n        loadData = _props.loadData,\n        filterTreeNode = _props.filterTreeNode,\n        openTransitionName = _props.openTransitionName,\n        openAnimation = _props.openAnimation,\n        switcherIcon = _props.switcherIcon;\n      return {\n        rcTree: {\n          // root: this,\n\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          openTransitionName: openTransitionName,\n          openAnimation: openAnimation,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          renderTreeNode: this.renderTreeNode,\n          isKeyChecked: this.isKeyChecked,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n      var treeNode = this.state.treeNode;\n      var _props2 = this.props,\n        prefixCls = _props2.prefixCls,\n        className = _props2.className,\n        focusable = _props2.focusable,\n        showLine = _props2.showLine,\n        _props2$tabIndex = _props2.tabIndex,\n        tabIndex = _props2$tabIndex === undefined ? 0 : _props2$tabIndex;\n      var domProps = getDataAndAria(this.props);\n      if (focusable) {\n        domProps.tabIndex = tabIndex;\n        domProps.onKeyDown = this.onKeyDown;\n      }\n      return React.createElement('ul', _extends({}, domProps, {\n        className: classNames(prefixCls, className, _defineProperty({}, prefixCls + '-show-line', showLine)),\n        role: 'tree',\n        unselectable: 'on'\n      }), mapChildren(treeNode, function (node, index) {\n        return _this2.renderTreeNode(node, index);\n      }));\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      }\n\n      // ================== Tree Node ==================\n      var treeNode = null;\n\n      // Check if `treeData` or `children` changed and save into the state.\n      if (needSync('treeData')) {\n        treeNode = convertDataToTree(props.treeData);\n      } else if (needSync('children')) {\n        treeNode = toArray(props.children);\n      }\n\n      // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n      if (treeNode) {\n        newState.treeNode = treeNode;\n\n        // Calculate the entities data for quick match\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState.posEntities = entitiesMap.posEntities;\n        newState.keyEntities = entitiesMap.keyEntities;\n      }\n      var keyEntities = newState.keyEntities || prevState.keyEntities;\n\n      // ================ expandedKeys =================\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        newState.expandedKeys = Object.keys(keyEntities);\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      // ================ selectedKeys =================\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n\n      // ================= checkedKeys =================\n      if (props.checkable) {\n        var checkedKeyEntity = void 0;\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n            _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n            checkedKeys = _checkedKeyEntity$che === undefined ? [] : _checkedKeyEntity$che,\n            _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n            halfCheckedKeys = _checkedKeyEntity$hal === undefined ? [] : _checkedKeyEntity$hal;\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      }\n      // ================= loadedKeys ==================\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n      return newState;\n    }\n\n    /**\r\n     * [Legacy] Select handler is less small than node,\r\n     * so that this will trigger when drag enter node or select handler.\r\n     * This is a little tricky if customize css without padding.\r\n     * Better for use mouse move event to refresh drag state.\r\n     * But let's just keep it to avoid event trigger logic change.\r\n     */\n\n    /**\r\n     * Only update the value which is not in props\r\n     */\n\n    /**\r\n     * [Legacy] Original logic use `key` as tracking clue.\r\n     * We have to use `cloneElement` to pass `key`.\r\n     */\n  }]);\n\n  return Tree;\n}(React.Component);\nTree.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any,\n  treeData: PropTypes.array,\n  // Generate treeNode by children\n  showLine: PropTypes.bool,\n  showIcon: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  focusable: PropTypes.bool,\n  selectable: PropTypes.bool,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  checkStrictly: PropTypes.bool,\n  draggable: PropTypes.bool,\n  defaultExpandParent: PropTypes.bool,\n  autoExpandParent: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\n  expandedKeys: PropTypes.arrayOf(PropTypes.string),\n  defaultCheckedKeys: PropTypes.arrayOf(PropTypes.string),\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onExpand: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelect: PropTypes.func,\n  onLoad: PropTypes.func,\n  loadData: PropTypes.func,\n  loadedKeys: PropTypes.arrayOf(PropTypes.string),\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDrop: PropTypes.func,\n  filterTreeNode: PropTypes.func,\n  openTransitionName: PropTypes.string,\n  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\nTree.childContextTypes = treeContextTypes;\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: []\n};\npolyfill(Tree);\nexport default Tree;","map":{"version":3,"names":["_extends","_defineProperty","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","PropTypes","classNames","warning","toArray","polyfill","treeContextTypes","convertTreeToEntities","convertDataToTree","getDataAndAria","getPosition","getDragNodesKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","mapChildren","conductCheck","warnOnlyTreeNode","Tree","_React$Component","_ref","_temp","_this","_ret","_len","arguments","length","args","Array","_key","__proto__","Object","getPrototypeOf","call","apply","concat","state","posEntities","keyEntities","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","treeNode","onNodeDragStart","event","node","expandedKeys","onDragStart","props","_node$props","eventKey","children","dragNode","setState","dragNodesKeys","onNodeDragEnter","onDragEnter","_node$props2","pos","dropPosition","dragOverNodeKey","setTimeout","delayedDragEnterLogic","keys","forEach","key","clearTimeout","newExpandedKeys","onNodeDragOver","onDragOver","onNodeDragLeave","onDragLeave","onNodeDragEnd","onDragEnd","onNodeDrop","_this$state","_this$state$dragNodes","undefined","onDrop","_node$props3","indexOf","posArr","dropResult","slice","Number","dropToGap","onNodeClick","e","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","_this$props","onSelect","multiple","_treeNode$props","selected","targetSelected","selectedNodes","map","entity","filter","setUncontrolledState","eventObj","nativeEvent","onNodeCheck","checked","_this$state2","oriCheckedKeys","oriHalfCheckedKeys","_this$props2","checkStrictly","onCheck","checkedObj","halfChecked","checkedNodes","_conductCheck","_checkedKeys","_halfCheckedKeys","checkedNodesPositions","push","onNodeLoad","Promise","resolve","_ref2","_ref2$loadedKeys","_ref2$loadingKeys","_this$props3","loadData","onLoad","promise","then","newLoadedKeys","newLoadingKeys","onNodeExpand","_this$props4","onExpand","_treeNode$props2","expanded","index","targetExpanded","loadPromise","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","needSync","newState","name","isKeyChecked","_this$state$checkedKe","renderTreeNode","child","level","_this$state3","_this$state3$expanded","_this$state3$selected","_this$state3$halfChec","_this$state3$loadedKe","_this$state3$loadingK","cloneElement","loaded","loading","dragOver","dragOverGapTop","dragOverGapBottom","value","getChildContext","_props","prefixCls","selectable","showIcon","icon","draggable","checkable","disabled","filterTreeNode","openTransitionName","openAnimation","switcherIcon","rcTree","render","_this2","_props2","className","focusable","showLine","_props2$tabIndex","tabIndex","domProps","onKeyDown","createElement","role","unselectable","getDerivedStateFromProps","prevState","prevProps","treeData","entitiesMap","autoExpandParent","defaultExpandParent","defaultExpandAll","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","propTypes","string","oneOfType","number","any","array","bool","func","arrayOf","object","childContextTypes","defaultProps"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/rc-tree/es/Tree.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\r\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\r\nimport _createClass from 'babel-runtime/helpers/createClass';\r\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\r\nimport _inherits from 'babel-runtime/helpers/inherits';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport warning from 'warning';\r\nimport toArray from 'rc-util/es/Children/toArray';\r\nimport { polyfill } from 'react-lifecycles-compat';\r\n\r\nimport { treeContextTypes } from './contextTypes';\r\nimport { convertTreeToEntities, convertDataToTree, getDataAndAria, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from './util';\r\n\r\nvar Tree = function (_React$Component) {\r\n  _inherits(Tree, _React$Component);\r\n\r\n  function Tree() {\r\n    var _ref;\r\n\r\n    var _temp, _this, _ret;\r\n\r\n    _classCallCheck(this, Tree);\r\n\r\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Tree.__proto__ || Object.getPrototypeOf(Tree)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\r\n      // TODO: Remove this eslint\r\n      posEntities: {}, // eslint-disable-line react/no-unused-state\r\n      keyEntities: {},\r\n\r\n      selectedKeys: [],\r\n      checkedKeys: [],\r\n      halfCheckedKeys: [],\r\n      loadedKeys: [],\r\n      loadingKeys: [],\r\n\r\n      treeNode: []\r\n    }, _this.onNodeDragStart = function (event, node) {\r\n      var expandedKeys = _this.state.expandedKeys;\r\n      var onDragStart = _this.props.onDragStart;\r\n      var _node$props = node.props,\r\n          eventKey = _node$props.eventKey,\r\n          children = _node$props.children;\r\n\r\n\r\n      _this.dragNode = node;\r\n\r\n      _this.setState({\r\n        dragNodesKeys: getDragNodesKeys(children, node),\r\n        expandedKeys: arrDel(expandedKeys, eventKey)\r\n      });\r\n\r\n      if (onDragStart) {\r\n        onDragStart({ event: event, node: node });\r\n      }\r\n    }, _this.onNodeDragEnter = function (event, node) {\r\n      var expandedKeys = _this.state.expandedKeys;\r\n      var onDragEnter = _this.props.onDragEnter;\r\n      var _node$props2 = node.props,\r\n          pos = _node$props2.pos,\r\n          eventKey = _node$props2.eventKey;\r\n\r\n\r\n      if (!_this.dragNode) return;\r\n\r\n      var dropPosition = calcDropPosition(event, node);\r\n\r\n      // Skip if drag node is self\r\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\r\n        _this.setState({\r\n          dragOverNodeKey: '',\r\n          dropPosition: null\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Ref: https://github.com/react-component/tree/issues/132\r\n      // Add timeout to let onDragLevel fire before onDragEnter,\r\n      // so that we can clean drag props for onDragLeave node.\r\n      // Macro task for this:\r\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\r\n      setTimeout(function () {\r\n        // Update drag over node\r\n        _this.setState({\r\n          dragOverNodeKey: eventKey,\r\n          dropPosition: dropPosition\r\n        });\r\n\r\n        // Side effect for delay drag\r\n        if (!_this.delayedDragEnterLogic) {\r\n          _this.delayedDragEnterLogic = {};\r\n        }\r\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\r\n          clearTimeout(_this.delayedDragEnterLogic[key]);\r\n        });\r\n        _this.delayedDragEnterLogic[pos] = setTimeout(function () {\r\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\r\n          if (!('expandedKeys' in _this.props)) {\r\n            _this.setState({\r\n              expandedKeys: newExpandedKeys\r\n            });\r\n          }\r\n\r\n          if (onDragEnter) {\r\n            onDragEnter({ event: event, node: node, expandedKeys: newExpandedKeys });\r\n          }\r\n        }, 400);\r\n      }, 0);\r\n    }, _this.onNodeDragOver = function (event, node) {\r\n      var onDragOver = _this.props.onDragOver;\r\n      var eventKey = node.props.eventKey;\r\n\r\n      // Update drag position\r\n\r\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\r\n        var dropPosition = calcDropPosition(event, node);\r\n\r\n        if (dropPosition === _this.state.dropPosition) return;\r\n\r\n        _this.setState({\r\n          dropPosition: dropPosition\r\n        });\r\n      }\r\n\r\n      if (onDragOver) {\r\n        onDragOver({ event: event, node: node });\r\n      }\r\n    }, _this.onNodeDragLeave = function (event, node) {\r\n      var onDragLeave = _this.props.onDragLeave;\r\n\r\n\r\n      _this.setState({\r\n        dragOverNodeKey: ''\r\n      });\r\n\r\n      if (onDragLeave) {\r\n        onDragLeave({ event: event, node: node });\r\n      }\r\n    }, _this.onNodeDragEnd = function (event, node) {\r\n      var onDragEnd = _this.props.onDragEnd;\r\n\r\n      _this.setState({\r\n        dragOverNodeKey: ''\r\n      });\r\n      if (onDragEnd) {\r\n        onDragEnd({ event: event, node: node });\r\n      }\r\n\r\n      _this.dragNode = null;\r\n    }, _this.onNodeDrop = function (event, node) {\r\n      var _this$state = _this.state,\r\n          _this$state$dragNodes = _this$state.dragNodesKeys,\r\n          dragNodesKeys = _this$state$dragNodes === undefined ? [] : _this$state$dragNodes,\r\n          dropPosition = _this$state.dropPosition;\r\n      var onDrop = _this.props.onDrop;\r\n      var _node$props3 = node.props,\r\n          eventKey = _node$props3.eventKey,\r\n          pos = _node$props3.pos;\r\n\r\n\r\n      _this.setState({\r\n        dragOverNodeKey: ''\r\n      });\r\n\r\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\r\n        warning(false, 'Can not drop to dragNode(include it\\'s children node)');\r\n        return;\r\n      }\r\n\r\n      var posArr = posToArr(pos);\r\n\r\n      var dropResult = {\r\n        event: event,\r\n        node: node,\r\n        dragNode: _this.dragNode,\r\n        dragNodesKeys: dragNodesKeys.slice(),\r\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\r\n      };\r\n\r\n      if (dropPosition !== 0) {\r\n        dropResult.dropToGap = true;\r\n      }\r\n\r\n      if (onDrop) {\r\n        onDrop(dropResult);\r\n      }\r\n\r\n      _this.dragNode = null;\r\n    }, _this.onNodeClick = function (e, treeNode) {\r\n      var onClick = _this.props.onClick;\r\n\r\n      if (onClick) {\r\n        onClick(e, treeNode);\r\n      }\r\n    }, _this.onNodeDoubleClick = function (e, treeNode) {\r\n      var onDoubleClick = _this.props.onDoubleClick;\r\n\r\n      if (onDoubleClick) {\r\n        onDoubleClick(e, treeNode);\r\n      }\r\n    }, _this.onNodeSelect = function (e, treeNode) {\r\n      var selectedKeys = _this.state.selectedKeys;\r\n      var keyEntities = _this.state.keyEntities;\r\n      var _this$props = _this.props,\r\n          onSelect = _this$props.onSelect,\r\n          multiple = _this$props.multiple;\r\n      var _treeNode$props = treeNode.props,\r\n          selected = _treeNode$props.selected,\r\n          eventKey = _treeNode$props.eventKey;\r\n\r\n      var targetSelected = !selected;\r\n\r\n      // Update selected keys\r\n      if (!targetSelected) {\r\n        selectedKeys = arrDel(selectedKeys, eventKey);\r\n      } else if (!multiple) {\r\n        selectedKeys = [eventKey];\r\n      } else {\r\n        selectedKeys = arrAdd(selectedKeys, eventKey);\r\n      }\r\n\r\n      // [Legacy] Not found related usage in doc or upper libs\r\n      var selectedNodes = selectedKeys.map(function (key) {\r\n        var entity = keyEntities[key];\r\n        if (!entity) return null;\r\n\r\n        return entity.node;\r\n      }).filter(function (node) {\r\n        return node;\r\n      });\r\n\r\n      _this.setUncontrolledState({ selectedKeys: selectedKeys });\r\n\r\n      if (onSelect) {\r\n        var eventObj = {\r\n          event: 'select',\r\n          selected: targetSelected,\r\n          node: treeNode,\r\n          selectedNodes: selectedNodes,\r\n          nativeEvent: e.nativeEvent\r\n        };\r\n        onSelect(selectedKeys, eventObj);\r\n      }\r\n    }, _this.onNodeCheck = function (e, treeNode, checked) {\r\n      var _this$state2 = _this.state,\r\n          keyEntities = _this$state2.keyEntities,\r\n          oriCheckedKeys = _this$state2.checkedKeys,\r\n          oriHalfCheckedKeys = _this$state2.halfCheckedKeys;\r\n      var _this$props2 = _this.props,\r\n          checkStrictly = _this$props2.checkStrictly,\r\n          onCheck = _this$props2.onCheck;\r\n      var eventKey = treeNode.props.eventKey;\r\n\r\n      // Prepare trigger arguments\r\n\r\n      var checkedObj = void 0;\r\n      var eventObj = {\r\n        event: 'check',\r\n        node: treeNode,\r\n        checked: checked,\r\n        nativeEvent: e.nativeEvent\r\n      };\r\n\r\n      if (checkStrictly) {\r\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\r\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\r\n        checkedObj = { checked: checkedKeys, halfChecked: halfCheckedKeys };\r\n\r\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\r\n          return keyEntities[key];\r\n        }).filter(function (entity) {\r\n          return entity;\r\n        }).map(function (entity) {\r\n          return entity.node;\r\n        });\r\n\r\n        _this.setUncontrolledState({ checkedKeys: checkedKeys });\r\n      } else {\r\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\r\n          checkedKeys: oriCheckedKeys, halfCheckedKeys: oriHalfCheckedKeys\r\n        }),\r\n            _checkedKeys = _conductCheck.checkedKeys,\r\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys;\r\n\r\n        checkedObj = _checkedKeys;\r\n\r\n        // [Legacy] This is used for `rc-tree-select`\r\n        eventObj.checkedNodes = [];\r\n        eventObj.checkedNodesPositions = [];\r\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\r\n\r\n        _checkedKeys.forEach(function (key) {\r\n          var entity = keyEntities[key];\r\n          if (!entity) return;\r\n\r\n          var node = entity.node,\r\n              pos = entity.pos;\r\n\r\n\r\n          eventObj.checkedNodes.push(node);\r\n          eventObj.checkedNodesPositions.push({ node: node, pos: pos });\r\n        });\r\n\r\n        _this.setUncontrolledState({\r\n          checkedKeys: _checkedKeys,\r\n          halfCheckedKeys: _halfCheckedKeys\r\n        });\r\n      }\r\n\r\n      if (onCheck) {\r\n        onCheck(checkedObj, eventObj);\r\n      }\r\n    }, _this.onNodeLoad = function (treeNode) {\r\n      return new Promise(function (resolve) {\r\n        // We need to get the latest state of loading/loaded keys\r\n        _this.setState(function (_ref2) {\r\n          var _ref2$loadedKeys = _ref2.loadedKeys,\r\n              loadedKeys = _ref2$loadedKeys === undefined ? [] : _ref2$loadedKeys,\r\n              _ref2$loadingKeys = _ref2.loadingKeys,\r\n              loadingKeys = _ref2$loadingKeys === undefined ? [] : _ref2$loadingKeys;\r\n          var _this$props3 = _this.props,\r\n              loadData = _this$props3.loadData,\r\n              onLoad = _this$props3.onLoad;\r\n          var eventKey = treeNode.props.eventKey;\r\n\r\n\r\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\r\n            // react 15 will warn if return null\r\n            return {};\r\n          }\r\n\r\n          // Process load data\r\n          var promise = loadData(treeNode);\r\n          promise.then(function () {\r\n            var newLoadedKeys = arrAdd(_this.state.loadedKeys, eventKey);\r\n            var newLoadingKeys = arrDel(_this.state.loadingKeys, eventKey);\r\n\r\n            // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\r\n            // https://github.com/ant-design/ant-design/issues/12464\r\n            if (onLoad) {\r\n              var eventObj = {\r\n                event: 'load',\r\n                node: treeNode\r\n              };\r\n              onLoad(newLoadedKeys, eventObj);\r\n            }\r\n\r\n            _this.setUncontrolledState({\r\n              loadedKeys: newLoadedKeys\r\n            });\r\n            _this.setState({\r\n              loadingKeys: newLoadingKeys\r\n            });\r\n\r\n            resolve();\r\n          });\r\n\r\n          return {\r\n            loadingKeys: arrAdd(loadingKeys, eventKey)\r\n          };\r\n        });\r\n      });\r\n    }, _this.onNodeExpand = function (e, treeNode) {\r\n      var expandedKeys = _this.state.expandedKeys;\r\n      var _this$props4 = _this.props,\r\n          onExpand = _this$props4.onExpand,\r\n          loadData = _this$props4.loadData;\r\n      var _treeNode$props2 = treeNode.props,\r\n          eventKey = _treeNode$props2.eventKey,\r\n          expanded = _treeNode$props2.expanded;\r\n\r\n      // Update selected keys\r\n\r\n      var index = expandedKeys.indexOf(eventKey);\r\n      var targetExpanded = !expanded;\r\n\r\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\r\n\r\n      if (targetExpanded) {\r\n        expandedKeys = arrAdd(expandedKeys, eventKey);\r\n      } else {\r\n        expandedKeys = arrDel(expandedKeys, eventKey);\r\n      }\r\n\r\n      _this.setUncontrolledState({ expandedKeys: expandedKeys });\r\n\r\n      if (onExpand) {\r\n        onExpand(expandedKeys, {\r\n          node: treeNode,\r\n          expanded: targetExpanded,\r\n          nativeEvent: e.nativeEvent\r\n        });\r\n      }\r\n\r\n      // Async Load data\r\n      if (targetExpanded && loadData) {\r\n        var loadPromise = _this.onNodeLoad(treeNode);\r\n        return loadPromise ? loadPromise.then(function () {\r\n          // [Legacy] Refresh logic\r\n          _this.setUncontrolledState({ expandedKeys: expandedKeys });\r\n        }) : null;\r\n      }\r\n\r\n      return null;\r\n    }, _this.onNodeMouseEnter = function (event, node) {\r\n      var onMouseEnter = _this.props.onMouseEnter;\r\n\r\n      if (onMouseEnter) {\r\n        onMouseEnter({ event: event, node: node });\r\n      }\r\n    }, _this.onNodeMouseLeave = function (event, node) {\r\n      var onMouseLeave = _this.props.onMouseLeave;\r\n\r\n      if (onMouseLeave) {\r\n        onMouseLeave({ event: event, node: node });\r\n      }\r\n    }, _this.onNodeContextMenu = function (event, node) {\r\n      var onRightClick = _this.props.onRightClick;\r\n\r\n      if (onRightClick) {\r\n        event.preventDefault();\r\n        onRightClick({ event: event, node: node });\r\n      }\r\n    }, _this.setUncontrolledState = function (state) {\r\n      var needSync = false;\r\n      var newState = {};\r\n\r\n      Object.keys(state).forEach(function (name) {\r\n        if (name in _this.props) return;\r\n\r\n        needSync = true;\r\n        newState[name] = state[name];\r\n      });\r\n\r\n      if (needSync) {\r\n        _this.setState(newState);\r\n      }\r\n    }, _this.isKeyChecked = function (key) {\r\n      var _this$state$checkedKe = _this.state.checkedKeys,\r\n          checkedKeys = _this$state$checkedKe === undefined ? [] : _this$state$checkedKe;\r\n\r\n      return checkedKeys.indexOf(key) !== -1;\r\n    }, _this.renderTreeNode = function (child, index) {\r\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\r\n      var _this$state3 = _this.state,\r\n          keyEntities = _this$state3.keyEntities,\r\n          _this$state3$expanded = _this$state3.expandedKeys,\r\n          expandedKeys = _this$state3$expanded === undefined ? [] : _this$state3$expanded,\r\n          _this$state3$selected = _this$state3.selectedKeys,\r\n          selectedKeys = _this$state3$selected === undefined ? [] : _this$state3$selected,\r\n          _this$state3$halfChec = _this$state3.halfCheckedKeys,\r\n          halfCheckedKeys = _this$state3$halfChec === undefined ? [] : _this$state3$halfChec,\r\n          _this$state3$loadedKe = _this$state3.loadedKeys,\r\n          loadedKeys = _this$state3$loadedKe === undefined ? [] : _this$state3$loadedKe,\r\n          _this$state3$loadingK = _this$state3.loadingKeys,\r\n          loadingKeys = _this$state3$loadingK === undefined ? [] : _this$state3$loadingK,\r\n          dragOverNodeKey = _this$state3.dragOverNodeKey,\r\n          dropPosition = _this$state3.dropPosition;\r\n\r\n      var pos = getPosition(level, index);\r\n      var key = child.key || pos;\r\n\r\n      if (!keyEntities[key]) {\r\n        warnOnlyTreeNode();\r\n        return null;\r\n      }\r\n\r\n      return React.cloneElement(child, {\r\n        key: key,\r\n        eventKey: key,\r\n        expanded: expandedKeys.indexOf(key) !== -1,\r\n        selected: selectedKeys.indexOf(key) !== -1,\r\n        loaded: loadedKeys.indexOf(key) !== -1,\r\n        loading: loadingKeys.indexOf(key) !== -1,\r\n        checked: _this.isKeyChecked(key),\r\n        halfChecked: halfCheckedKeys.indexOf(key) !== -1,\r\n        pos: pos,\r\n\r\n        // [Legacy] Drag props\r\n        dragOver: dragOverNodeKey === key && dropPosition === 0,\r\n        dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\r\n        dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\r\n      });\r\n    }, _temp), _possibleConstructorReturn(_this, _ret);\r\n  }\r\n\r\n  _createClass(Tree, [{\r\n    key: 'getChildContext',\r\n    value: function getChildContext() {\r\n      var _props = this.props,\r\n          prefixCls = _props.prefixCls,\r\n          selectable = _props.selectable,\r\n          showIcon = _props.showIcon,\r\n          icon = _props.icon,\r\n          draggable = _props.draggable,\r\n          checkable = _props.checkable,\r\n          checkStrictly = _props.checkStrictly,\r\n          disabled = _props.disabled,\r\n          loadData = _props.loadData,\r\n          filterTreeNode = _props.filterTreeNode,\r\n          openTransitionName = _props.openTransitionName,\r\n          openAnimation = _props.openAnimation,\r\n          switcherIcon = _props.switcherIcon;\r\n\r\n\r\n      return {\r\n        rcTree: {\r\n          // root: this,\r\n\r\n          prefixCls: prefixCls,\r\n          selectable: selectable,\r\n          showIcon: showIcon,\r\n          icon: icon,\r\n          switcherIcon: switcherIcon,\r\n          draggable: draggable,\r\n          checkable: checkable,\r\n          checkStrictly: checkStrictly,\r\n          disabled: disabled,\r\n          openTransitionName: openTransitionName,\r\n          openAnimation: openAnimation,\r\n\r\n          loadData: loadData,\r\n          filterTreeNode: filterTreeNode,\r\n          renderTreeNode: this.renderTreeNode,\r\n          isKeyChecked: this.isKeyChecked,\r\n\r\n          onNodeClick: this.onNodeClick,\r\n          onNodeDoubleClick: this.onNodeDoubleClick,\r\n          onNodeExpand: this.onNodeExpand,\r\n          onNodeSelect: this.onNodeSelect,\r\n          onNodeCheck: this.onNodeCheck,\r\n          onNodeLoad: this.onNodeLoad,\r\n          onNodeMouseEnter: this.onNodeMouseEnter,\r\n          onNodeMouseLeave: this.onNodeMouseLeave,\r\n          onNodeContextMenu: this.onNodeContextMenu,\r\n          onNodeDragStart: this.onNodeDragStart,\r\n          onNodeDragEnter: this.onNodeDragEnter,\r\n          onNodeDragOver: this.onNodeDragOver,\r\n          onNodeDragLeave: this.onNodeDragLeave,\r\n          onNodeDragEnd: this.onNodeDragEnd,\r\n          onNodeDrop: this.onNodeDrop\r\n        }\r\n      };\r\n    }\r\n  }, {\r\n    key: 'render',\r\n    value: function render() {\r\n      var _this2 = this;\r\n\r\n      var treeNode = this.state.treeNode;\r\n      var _props2 = this.props,\r\n          prefixCls = _props2.prefixCls,\r\n          className = _props2.className,\r\n          focusable = _props2.focusable,\r\n          showLine = _props2.showLine,\r\n          _props2$tabIndex = _props2.tabIndex,\r\n          tabIndex = _props2$tabIndex === undefined ? 0 : _props2$tabIndex;\r\n\r\n      var domProps = getDataAndAria(this.props);\r\n\r\n      if (focusable) {\r\n        domProps.tabIndex = tabIndex;\r\n        domProps.onKeyDown = this.onKeyDown;\r\n      }\r\n\r\n      return React.createElement(\r\n        'ul',\r\n        _extends({}, domProps, {\r\n          className: classNames(prefixCls, className, _defineProperty({}, prefixCls + '-show-line', showLine)),\r\n          role: 'tree',\r\n          unselectable: 'on'\r\n        }),\r\n        mapChildren(treeNode, function (node, index) {\r\n          return _this2.renderTreeNode(node, index);\r\n        })\r\n      );\r\n    }\r\n  }], [{\r\n    key: 'getDerivedStateFromProps',\r\n    value: function getDerivedStateFromProps(props, prevState) {\r\n      var prevProps = prevState.prevProps;\r\n\r\n      var newState = {\r\n        prevProps: props\r\n      };\r\n\r\n      function needSync(name) {\r\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\r\n      }\r\n\r\n      // ================== Tree Node ==================\r\n      var treeNode = null;\r\n\r\n      // Check if `treeData` or `children` changed and save into the state.\r\n      if (needSync('treeData')) {\r\n        treeNode = convertDataToTree(props.treeData);\r\n      } else if (needSync('children')) {\r\n        treeNode = toArray(props.children);\r\n      }\r\n\r\n      // Tree support filter function which will break the tree structure in the vdm.\r\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\r\n      if (treeNode) {\r\n        newState.treeNode = treeNode;\r\n\r\n        // Calculate the entities data for quick match\r\n        var entitiesMap = convertTreeToEntities(treeNode);\r\n        newState.posEntities = entitiesMap.posEntities;\r\n        newState.keyEntities = entitiesMap.keyEntities;\r\n      }\r\n\r\n      var keyEntities = newState.keyEntities || prevState.keyEntities;\r\n\r\n      // ================ expandedKeys =================\r\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\r\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\r\n      } else if (!prevProps && props.defaultExpandAll) {\r\n        newState.expandedKeys = Object.keys(keyEntities);\r\n      } else if (!prevProps && props.defaultExpandedKeys) {\r\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\r\n      }\r\n\r\n      // ================ selectedKeys =================\r\n      if (props.selectable) {\r\n        if (needSync('selectedKeys')) {\r\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\r\n        } else if (!prevProps && props.defaultSelectedKeys) {\r\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\r\n        }\r\n      }\r\n\r\n      // ================= checkedKeys =================\r\n      if (props.checkable) {\r\n        var checkedKeyEntity = void 0;\r\n\r\n        if (needSync('checkedKeys')) {\r\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\r\n        } else if (!prevProps && props.defaultCheckedKeys) {\r\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\r\n        } else if (treeNode) {\r\n          // If treeNode changed, we also need check it\r\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\r\n            checkedKeys: prevState.checkedKeys,\r\n            halfCheckedKeys: prevState.halfCheckedKeys\r\n          };\r\n        }\r\n\r\n        if (checkedKeyEntity) {\r\n          var _checkedKeyEntity = checkedKeyEntity,\r\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\r\n              checkedKeys = _checkedKeyEntity$che === undefined ? [] : _checkedKeyEntity$che,\r\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\r\n              halfCheckedKeys = _checkedKeyEntity$hal === undefined ? [] : _checkedKeyEntity$hal;\r\n\r\n\r\n          if (!props.checkStrictly) {\r\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\r\n            checkedKeys = conductKeys.checkedKeys;\r\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\r\n          }\r\n\r\n          newState.checkedKeys = checkedKeys;\r\n          newState.halfCheckedKeys = halfCheckedKeys;\r\n        }\r\n      }\r\n      // ================= loadedKeys ==================\r\n      if (needSync('loadedKeys')) {\r\n        newState.loadedKeys = props.loadedKeys;\r\n      }\r\n\r\n      return newState;\r\n    }\r\n\r\n    /**\r\n     * [Legacy] Select handler is less small than node,\r\n     * so that this will trigger when drag enter node or select handler.\r\n     * This is a little tricky if customize css without padding.\r\n     * Better for use mouse move event to refresh drag state.\r\n     * But let's just keep it to avoid event trigger logic change.\r\n     */\r\n\r\n\r\n    /**\r\n     * Only update the value which is not in props\r\n     */\r\n\r\n\r\n    /**\r\n     * [Legacy] Original logic use `key` as tracking clue.\r\n     * We have to use `cloneElement` to pass `key`.\r\n     */\r\n\r\n  }]);\r\n\r\n  return Tree;\r\n}(React.Component);\r\n\r\nTree.propTypes = {\r\n  prefixCls: PropTypes.string,\r\n  className: PropTypes.string,\r\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  children: PropTypes.any,\r\n  treeData: PropTypes.array, // Generate treeNode by children\r\n  showLine: PropTypes.bool,\r\n  showIcon: PropTypes.bool,\r\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\r\n  focusable: PropTypes.bool,\r\n  selectable: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  multiple: PropTypes.bool,\r\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\r\n  checkStrictly: PropTypes.bool,\r\n  draggable: PropTypes.bool,\r\n  defaultExpandParent: PropTypes.bool,\r\n  autoExpandParent: PropTypes.bool,\r\n  defaultExpandAll: PropTypes.bool,\r\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\r\n  expandedKeys: PropTypes.arrayOf(PropTypes.string),\r\n  defaultCheckedKeys: PropTypes.arrayOf(PropTypes.string),\r\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\r\n  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\r\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\r\n  onClick: PropTypes.func,\r\n  onDoubleClick: PropTypes.func,\r\n  onExpand: PropTypes.func,\r\n  onCheck: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  onLoad: PropTypes.func,\r\n  loadData: PropTypes.func,\r\n  loadedKeys: PropTypes.arrayOf(PropTypes.string),\r\n  onMouseEnter: PropTypes.func,\r\n  onMouseLeave: PropTypes.func,\r\n  onRightClick: PropTypes.func,\r\n  onDragStart: PropTypes.func,\r\n  onDragEnter: PropTypes.func,\r\n  onDragOver: PropTypes.func,\r\n  onDragLeave: PropTypes.func,\r\n  onDragEnd: PropTypes.func,\r\n  onDrop: PropTypes.func,\r\n  filterTreeNode: PropTypes.func,\r\n  openTransitionName: PropTypes.string,\r\n  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\r\n};\r\nTree.childContextTypes = treeContextTypes;\r\nTree.defaultProps = {\r\n  prefixCls: 'rc-tree',\r\n  showLine: false,\r\n  showIcon: true,\r\n  selectable: true,\r\n  multiple: false,\r\n  checkable: false,\r\n  disabled: false,\r\n  checkStrictly: false,\r\n  draggable: false,\r\n  defaultExpandParent: true,\r\n  autoExpandParent: false,\r\n  defaultExpandAll: false,\r\n  defaultExpandedKeys: [],\r\n  defaultCheckedKeys: [],\r\n  defaultSelectedKeys: []\r\n};\r\n\r\n\r\npolyfill(Tree);\r\n\r\nexport default Tree;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}