{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule getRangeClientRects\r\n * @format\r\n * \r\n */\n\n'use strict';\n\nvar UserAgent = require('fbjs/lib/UserAgent');\nvar invariant = require('fbjs/lib/invariant');\nvar isChrome = UserAgent.isBrowser('Chrome');\n\n// In Chrome, the client rects will include the entire bounds of all nodes that\n// begin (have a start tag) within the selection, even if the selection does\n// not overlap the entire node. To resolve this, we split the range at each\n// start tag and join the client rects together.\n// https://code.google.com/p/chromium/issues/detail?id=324437\n/* eslint-disable consistent-return */\nfunction getRangeClientRectsChrome(range) {\n  var tempRange = range.cloneRange();\n  var clientRects = [];\n  for (var ancestor = range.endContainer; ancestor != null; ancestor = ancestor.parentNode) {\n    // If we've climbed up to the common ancestor, we can now use the\n    // original start point and stop climbing the tree.\n    var atCommonAncestor = ancestor === range.commonAncestorContainer;\n    if (atCommonAncestor) {\n      tempRange.setStart(range.startContainer, range.startOffset);\n    } else {\n      tempRange.setStart(tempRange.endContainer, 0);\n    }\n    var rects = Array.from(tempRange.getClientRects());\n    clientRects.push(rects);\n    if (atCommonAncestor) {\n      var _ref;\n      clientRects.reverse();\n      return (_ref = []).concat.apply(_ref, clientRects);\n    }\n    tempRange.setEndBefore(ancestor);\n  }\n  !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Found an unexpected detached subtree when getting range client rects.') : invariant(false) : void 0;\n}\n/* eslint-enable consistent-return */\n\n/**\r\n * Like range.getClientRects() but normalizes for browser bugs.\r\n */\nvar getRangeClientRects = isChrome ? getRangeClientRectsChrome : function (range) {\n  return Array.from(range.getClientRects());\n};\nmodule.exports = getRangeClientRects;","map":{"version":3,"names":["UserAgent","require","invariant","isChrome","isBrowser","getRangeClientRectsChrome","range","tempRange","cloneRange","clientRects","ancestor","endContainer","parentNode","atCommonAncestor","commonAncestorContainer","setStart","startContainer","startOffset","rects","Array","from","getClientRects","push","_ref","reverse","concat","apply","setEndBefore","process","env","NODE_ENV","getRangeClientRects","module","exports"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/draft-js/lib/getRangeClientRects.js"],"sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule getRangeClientRects\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar UserAgent = require('fbjs/lib/UserAgent');\r\n\r\nvar invariant = require('fbjs/lib/invariant');\r\n\r\nvar isChrome = UserAgent.isBrowser('Chrome');\r\n\r\n// In Chrome, the client rects will include the entire bounds of all nodes that\r\n// begin (have a start tag) within the selection, even if the selection does\r\n// not overlap the entire node. To resolve this, we split the range at each\r\n// start tag and join the client rects together.\r\n// https://code.google.com/p/chromium/issues/detail?id=324437\r\n/* eslint-disable consistent-return */\r\nfunction getRangeClientRectsChrome(range) {\r\n  var tempRange = range.cloneRange();\r\n  var clientRects = [];\r\n\r\n  for (var ancestor = range.endContainer; ancestor != null; ancestor = ancestor.parentNode) {\r\n    // If we've climbed up to the common ancestor, we can now use the\r\n    // original start point and stop climbing the tree.\r\n    var atCommonAncestor = ancestor === range.commonAncestorContainer;\r\n    if (atCommonAncestor) {\r\n      tempRange.setStart(range.startContainer, range.startOffset);\r\n    } else {\r\n      tempRange.setStart(tempRange.endContainer, 0);\r\n    }\r\n    var rects = Array.from(tempRange.getClientRects());\r\n    clientRects.push(rects);\r\n    if (atCommonAncestor) {\r\n      var _ref;\r\n\r\n      clientRects.reverse();\r\n      return (_ref = []).concat.apply(_ref, clientRects);\r\n    }\r\n    tempRange.setEndBefore(ancestor);\r\n  }\r\n\r\n  !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Found an unexpected detached subtree when getting range client rects.') : invariant(false) : void 0;\r\n}\r\n/* eslint-enable consistent-return */\r\n\r\n/**\r\n * Like range.getClientRects() but normalizes for browser bugs.\r\n */\r\nvar getRangeClientRects = isChrome ? getRangeClientRectsChrome : function (range) {\r\n  return Array.from(range.getClientRects());\r\n};\r\n\r\nmodule.exports = getRangeClientRects;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAE7C,IAAIC,SAAS,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAE7C,IAAIE,QAAQ,GAAGH,SAAS,CAACI,SAAS,CAAC,QAAQ,CAAC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,yBAAyBA,CAACC,KAAK,EAAE;EACxC,IAAIC,SAAS,GAAGD,KAAK,CAACE,UAAU,EAAE;EAClC,IAAIC,WAAW,GAAG,EAAE;EAEpB,KAAK,IAAIC,QAAQ,GAAGJ,KAAK,CAACK,YAAY,EAAED,QAAQ,IAAI,IAAI,EAAEA,QAAQ,GAAGA,QAAQ,CAACE,UAAU,EAAE;IACxF;IACA;IACA,IAAIC,gBAAgB,GAAGH,QAAQ,KAAKJ,KAAK,CAACQ,uBAAuB;IACjE,IAAID,gBAAgB,EAAE;MACpBN,SAAS,CAACQ,QAAQ,CAACT,KAAK,CAACU,cAAc,EAAEV,KAAK,CAACW,WAAW,CAAC;IAC7D,CAAC,MAAM;MACLV,SAAS,CAACQ,QAAQ,CAACR,SAAS,CAACI,YAAY,EAAE,CAAC,CAAC;IAC/C;IACA,IAAIO,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACb,SAAS,CAACc,cAAc,EAAE,CAAC;IAClDZ,WAAW,CAACa,IAAI,CAACJ,KAAK,CAAC;IACvB,IAAIL,gBAAgB,EAAE;MACpB,IAAIU,IAAI;MAERd,WAAW,CAACe,OAAO,EAAE;MACrB,OAAO,CAACD,IAAI,GAAG,EAAE,EAAEE,MAAM,CAACC,KAAK,CAACH,IAAI,EAAEd,WAAW,CAAC;IACpD;IACAF,SAAS,CAACoB,YAAY,CAACjB,QAAQ,CAAC;EAClC;EAEA,CAAC,KAAK,GAAGkB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG5B,SAAS,CAAC,KAAK,EAAE,uEAAuE,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;AACxK;AACA;;AAEA;AACA;AACA;AACA,IAAI6B,mBAAmB,GAAG5B,QAAQ,GAAGE,yBAAyB,GAAG,UAAUC,KAAK,EAAE;EAChF,OAAOa,KAAK,CAACC,IAAI,CAACd,KAAK,CAACe,cAAc,EAAE,CAAC;AAC3C,CAAC;AAEDW,MAAM,CAACC,OAAO,GAAGF,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}