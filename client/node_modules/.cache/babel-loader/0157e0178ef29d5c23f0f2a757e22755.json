{"ast":null,"code":"import _objectSpread from \"/home/mahak/Desktop/Virtual-Stock-Market/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { LOGIN_REQUEST, LOGIN_SUCCEED, LOGIN_FAIL, REGISTER_FAIL, REGISTER_SUCCEED, REGISTER_REQUEST, TOKEN_RECEIVE, TOKEN_VERIFY, TOKEN_REJECT, LOGOUT_REQUEST, LOGOUT_SUCCEED } from '../constants';\nimport { combineReducers } from 'redux';\nvar initialState = {\n  type: '',\n  status: ''\n};\nvar initUser = {\n  isPageLoading: true,\n  isLoggedIn: false,\n  email: '',\n  name: ''\n};\n\nvar message = function message() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case LOGIN_REQUEST:\n      return _objectSpread({}, state, {\n        type: \"login\",\n        status: 'Logging in'\n      });\n\n    case LOGIN_FAIL:\n      return _objectSpread({}, state, {\n        type: \"login error\",\n        status: 'Failed to Log in, ' + payload\n      });\n\n    case LOGIN_SUCCEED:\n      window.localStorage.setItem('token', payload.token);\n      return _objectSpread({}, state, {\n        type: \"login success\",\n        status: payload.success\n      });\n\n    case REGISTER_REQUEST:\n      return _objectSpread({}, state, {\n        type: \"register\",\n        status: \"Registering\"\n      });\n\n    case REGISTER_FAIL:\n      return _objectSpread({}, state, {\n        type: \"register error\",\n        status: \"Failed to register, \" + payload\n      });\n\n    case REGISTER_SUCCEED:\n      window.localStorage.setItem('token', payload.token);\n      return _objectSpread({}, state, {\n        type: 'register success',\n        status: payload.success\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar user = function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initUser;\n\n  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref2.type,\n      payload = _ref2.payload;\n\n  switch (type) {\n    case TOKEN_RECEIVE:\n      return initUser;\n\n    case TOKEN_VERIFY:\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        isPageLoading: false,\n        email: payload.email,\n        name: payload.name\n      });\n\n    case TOKEN_REJECT:\n      return _objectSpread({}, initUser, {\n        isPageLoading: false\n      });\n\n    case LOGOUT_REQUEST:\n      return state;\n\n    case LOGOUT_SUCCEED:\n      window.localStorage.setItem('token', '');\n      return initUser;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  user: user,\n  message: message\n});","map":{"version":3,"sources":["/home/mahak/Desktop/Virtual-Stock-Market/client/src/reducers/index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCEED","LOGIN_FAIL","REGISTER_FAIL","REGISTER_SUCCEED","REGISTER_REQUEST","TOKEN_RECEIVE","TOKEN_VERIFY","TOKEN_REJECT","LOGOUT_REQUEST","LOGOUT_SUCCEED","combineReducers","initialState","type","status","initUser","isPageLoading","isLoggedIn","email","name","message","state","payload","window","localStorage","setItem","token","success","user"],"mappings":"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","sourcesContent":["\n\nimport { \n  LOGIN_REQUEST, LOGIN_SUCCEED, LOGIN_FAIL, \n  REGISTER_FAIL, REGISTER_SUCCEED, REGISTER_REQUEST, \n  TOKEN_RECEIVE, TOKEN_VERIFY, TOKEN_REJECT,\n  LOGOUT_REQUEST, LOGOUT_SUCCEED\n} from '../constants'\nimport { combineReducers } from 'redux';\n\nconst initialState = {\n  type: '',\n  status: '',\n}\n\nconst initUser = {\n  isPageLoading: true,\n  isLoggedIn: false,\n  email: '',\n  name: '',\n}\n\nconst message = (state = initialState, {type, payload} ) => {\n  switch(type){\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        type: \"login\",\n        status: 'Logging in'\n      }\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        type: \"login error\",\n        status: 'Failed to Log in, ' + payload\n      }\n    case LOGIN_SUCCEED:\n      window.localStorage.setItem('token', payload.token)\n      return {\n        ...state,\n        type: \"login success\",\n        status: payload.success\n      }\n    case REGISTER_REQUEST:\n      return {\n        ...state,\n        type: \"register\",\n        status: \"Registering\"\n      }\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        type: \"register error\",\n        status: \"Failed to register, \" + payload\n      }\n    case REGISTER_SUCCEED:\n      window.localStorage.setItem('token', payload.token)\n      return {\n        ...state,\n        type: 'register success',\n        status: payload.success\n      }\n    default:\n      return state\n  }\n}\n\nconst user = (state = initUser, {type, payload} ) => {\n  switch(type){\n    case TOKEN_RECEIVE:\n      return initUser\n    case TOKEN_VERIFY:\n      return {\n        ...state,\n        isLoggedIn: true,\n        isPageLoading: false,\n        email: payload.email,\n        name: payload.name\n      }\n    case TOKEN_REJECT:\n      return {\n        ...initUser,\n        isPageLoading: false\n      }\n    case LOGOUT_REQUEST:\n      return state\n    case LOGOUT_SUCCEED:\n      window.localStorage.setItem('token', '')\n      return initUser\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  user,\n  message\n})"]},"metadata":{},"sourceType":"module"}