{"ast":null,"code":"function getError(option, xhr) {\n  var msg = 'cannot post ' + option.action + ' ' + xhr.status + '\\'';\n  var err = new Error(msg);\n  err.status = xhr.status;\n  err.method = 'post';\n  err.url = option.action;\n  return err;\n}\nfunction getBody(xhr) {\n  var text = xhr.responseText || xhr.response;\n  if (!text) {\n    return text;\n  }\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return text;\n  }\n}\n\n// option {\n//  onProgress: (event: { percent: number }): void,\n//  onError: (event: Error, body?: Object): void,\n//  onSuccess: (body: Object): void,\n//  data: Object,\n//  filename: String,\n//  file: File,\n//  withCredentials: Boolean,\n//  action: String,\n//  headers: Object,\n// }\nexport default function upload(option) {\n  var xhr = new XMLHttpRequest();\n  if (option.onProgress && xhr.upload) {\n    xhr.upload.onprogress = function progress(e) {\n      if (e.total > 0) {\n        e.percent = e.loaded / e.total * 100;\n      }\n      option.onProgress(e);\n    };\n  }\n  var formData = new FormData();\n  if (option.data) {\n    Object.keys(option.data).map(function (key) {\n      formData.append(key, option.data[key]);\n    });\n  }\n  formData.append(option.filename, option.file);\n  xhr.onerror = function error(e) {\n    option.onError(e);\n  };\n  xhr.onload = function onload() {\n    // allow success when 2xx status\n    // see https://github.com/react-component/upload/issues/34\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(option, xhr), getBody(xhr));\n    }\n    option.onSuccess(getBody(xhr), xhr);\n  };\n  xhr.open('post', option.action, true);\n\n  // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n  if (option.withCredentials && 'withCredentials' in xhr) {\n    xhr.withCredentials = true;\n  }\n  var headers = option.headers || {};\n\n  // when set headers['X-Requested-With'] = null , can close default XHR header\n  // see https://github.com/react-component/upload/issues/33\n  if (headers['X-Requested-With'] !== null) {\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  }\n  for (var h in headers) {\n    if (headers.hasOwnProperty(h) && headers[h] !== null) {\n      xhr.setRequestHeader(h, headers[h]);\n    }\n  }\n  xhr.send(formData);\n  return {\n    abort: function abort() {\n      xhr.abort();\n    }\n  };\n}","map":{"version":3,"names":["getError","option","xhr","msg","action","status","err","Error","method","url","getBody","text","responseText","response","JSON","parse","e","upload","XMLHttpRequest","onProgress","onprogress","progress","total","percent","loaded","formData","FormData","data","Object","keys","map","key","append","filename","file","onerror","error","onError","onload","onSuccess","open","withCredentials","headers","setRequestHeader","h","hasOwnProperty","send","abort"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/rc-upload/es/request.js"],"sourcesContent":["function getError(option, xhr) {\n  var msg = 'cannot post ' + option.action + ' ' + xhr.status + '\\'';\n  var err = new Error(msg);\n  err.status = xhr.status;\n  err.method = 'post';\n  err.url = option.action;\n  return err;\n}\n\nfunction getBody(xhr) {\n  var text = xhr.responseText || xhr.response;\n  if (!text) {\n    return text;\n  }\n\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return text;\n  }\n}\n\n// option {\n//  onProgress: (event: { percent: number }): void,\n//  onError: (event: Error, body?: Object): void,\n//  onSuccess: (body: Object): void,\n//  data: Object,\n//  filename: String,\n//  file: File,\n//  withCredentials: Boolean,\n//  action: String,\n//  headers: Object,\n// }\nexport default function upload(option) {\n  var xhr = new XMLHttpRequest();\n\n  if (option.onProgress && xhr.upload) {\n    xhr.upload.onprogress = function progress(e) {\n      if (e.total > 0) {\n        e.percent = e.loaded / e.total * 100;\n      }\n      option.onProgress(e);\n    };\n  }\n\n  var formData = new FormData();\n\n  if (option.data) {\n    Object.keys(option.data).map(function (key) {\n      formData.append(key, option.data[key]);\n    });\n  }\n\n  formData.append(option.filename, option.file);\n\n  xhr.onerror = function error(e) {\n    option.onError(e);\n  };\n\n  xhr.onload = function onload() {\n    // allow success when 2xx status\n    // see https://github.com/react-component/upload/issues/34\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(option, xhr), getBody(xhr));\n    }\n\n    option.onSuccess(getBody(xhr), xhr);\n  };\n\n  xhr.open('post', option.action, true);\n\n  // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n  if (option.withCredentials && 'withCredentials' in xhr) {\n    xhr.withCredentials = true;\n  }\n\n  var headers = option.headers || {};\n\n  // when set headers['X-Requested-With'] = null , can close default XHR header\n  // see https://github.com/react-component/upload/issues/33\n  if (headers['X-Requested-With'] !== null) {\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  }\n\n  for (var h in headers) {\n    if (headers.hasOwnProperty(h) && headers[h] !== null) {\n      xhr.setRequestHeader(h, headers[h]);\n    }\n  }\n  xhr.send(formData);\n\n  return {\n    abort: function abort() {\n      xhr.abort();\n    }\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}