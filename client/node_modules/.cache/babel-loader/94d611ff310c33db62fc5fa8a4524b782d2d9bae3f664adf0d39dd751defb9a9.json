{"ast":null,"code":"import _objectSpread from \"C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { LOGIN_REQUEST, LOGIN_SUCCEED, LOGIN_FAIL, REGISTER_FAIL, REGISTER_SUCCEED, REGISTER_REQUEST, TOKEN_RECEIVE, TOKEN_VERIFY, TOKEN_REJECT, LOGOUT_REQUEST, LOGOUT_SUCCEED } from '../constants';\nimport { combineReducers } from 'redux';\nvar initialState = {\n  type: '',\n  status: ''\n};\nvar initUser = {\n  isPageLoading: true,\n  isLoggedIn: false,\n  email: '',\n  name: ''\n};\nvar message = function message() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n    type = _ref.type,\n    payload = _ref.payload;\n  switch (type) {\n    case LOGIN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        type: \"login\",\n        status: 'Logging in'\n      });\n    case LOGIN_FAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        type: \"login error\",\n        status: 'Failed to Log in, ' + payload\n      });\n    case LOGIN_SUCCEED:\n      window.localStorage.setItem('token', payload.token);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        type: \"login success\",\n        status: payload.success\n      });\n    case REGISTER_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        type: \"register\",\n        status: \"Registering\"\n      });\n    case REGISTER_FAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        type: \"register error\",\n        status: \"Failed to register, \" + payload\n      });\n    case REGISTER_SUCCEED:\n      window.localStorage.setItem('token', payload.token);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        type: 'register success',\n        status: payload.success\n      });\n    default:\n      return state;\n  }\n};\nvar user = function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initUser;\n  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,\n    type = _ref2.type,\n    payload = _ref2.payload;\n  switch (type) {\n    case TOKEN_RECEIVE:\n      return initUser;\n    case TOKEN_VERIFY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        isPageLoading: false,\n        email: payload.email,\n        name: payload.name\n      });\n    case TOKEN_REJECT:\n      return _objectSpread(_objectSpread({}, initUser), {}, {\n        isPageLoading: false\n      });\n    case LOGOUT_REQUEST:\n      return state;\n    case LOGOUT_SUCCEED:\n      window.localStorage.setItem('token', '');\n      return initUser;\n    default:\n      return state;\n  }\n};\nexport default combineReducers({\n  user: user,\n  message: message\n});","map":{"version":3,"names":["LOGIN_REQUEST","LOGIN_SUCCEED","LOGIN_FAIL","REGISTER_FAIL","REGISTER_SUCCEED","REGISTER_REQUEST","TOKEN_RECEIVE","TOKEN_VERIFY","TOKEN_REJECT","LOGOUT_REQUEST","LOGOUT_SUCCEED","combineReducers","initialState","type","status","initUser","isPageLoading","isLoggedIn","email","name","message","state","arguments","length","undefined","_ref","payload","_objectSpread","window","localStorage","setItem","token","success","user","_ref2"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/src/reducers/index.js"],"sourcesContent":["\r\n\r\nimport { \r\n  LOGIN_REQUEST, LOGIN_SUCCEED, LOGIN_FAIL, \r\n  REGISTER_FAIL, REGISTER_SUCCEED, REGISTER_REQUEST, \r\n  TOKEN_RECEIVE, TOKEN_VERIFY, TOKEN_REJECT,\r\n  LOGOUT_REQUEST, LOGOUT_SUCCEED\r\n} from '../constants'\r\nimport { combineReducers } from 'redux';\r\n\r\nconst initialState = {\r\n  type: '',\r\n  status: '',\r\n}\r\n\r\nconst initUser = {\r\n  isPageLoading: true,\r\n  isLoggedIn: false,\r\n  email: '',\r\n  name: '',\r\n}\r\n\r\nconst message = (state = initialState, {type, payload} ) => {\r\n  switch(type){\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        type: \"login\",\r\n        status: 'Logging in'\r\n      }\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        type: \"login error\",\r\n        status: 'Failed to Log in, ' + payload\r\n      }\r\n    case LOGIN_SUCCEED:\r\n      window.localStorage.setItem('token', payload.token)\r\n      return {\r\n        ...state,\r\n        type: \"login success\",\r\n        status: payload.success\r\n      }\r\n    case REGISTER_REQUEST:\r\n      return {\r\n        ...state,\r\n        type: \"register\",\r\n        status: \"Registering\"\r\n      }\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        type: \"register error\",\r\n        status: \"Failed to register, \" + payload\r\n      }\r\n    case REGISTER_SUCCEED:\r\n      window.localStorage.setItem('token', payload.token)\r\n      return {\r\n        ...state,\r\n        type: 'register success',\r\n        status: payload.success\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst user = (state = initUser, {type, payload} ) => {\r\n  switch(type){\r\n    case TOKEN_RECEIVE:\r\n      return initUser\r\n    case TOKEN_VERIFY:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        isPageLoading: false,\r\n        email: payload.email,\r\n        name: payload.name\r\n      }\r\n    case TOKEN_REJECT:\r\n      return {\r\n        ...initUser,\r\n        isPageLoading: false\r\n      }\r\n    case LOGOUT_REQUEST:\r\n      return state\r\n    case LOGOUT_SUCCEED:\r\n      window.localStorage.setItem('token', '')\r\n      return initUser\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  user,\r\n  message\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}