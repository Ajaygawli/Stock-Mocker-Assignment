{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule CompositeDraftDecorator\r\n * @format\r\n * \r\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar Immutable = require('immutable');\nvar List = Immutable.List;\nvar DELIMITER = '.';\n\n/**\r\n * A CompositeDraftDecorator traverses through a list of DraftDecorator\r\n * instances to identify sections of a ContentBlock that should be rendered\r\n * in a \"decorated\" manner. For example, hashtags, mentions, and links may\r\n * be intended to stand out visually, be rendered as anchors, etc.\r\n *\r\n * The list of decorators supplied to the constructor will be used in the\r\n * order they are provided. This allows the caller to specify a priority for\r\n * string matching, in case of match collisions among decorators.\r\n *\r\n * For instance, I may have a link with a `#` in its text. Though this section\r\n * of text may match our hashtag decorator, it should not be treated as a\r\n * hashtag. I should therefore list my link DraftDecorator\r\n * before my hashtag DraftDecorator when constructing this composite\r\n * decorator instance.\r\n *\r\n * Thus, when a collision like this is encountered, the earlier match is\r\n * preserved and the new match is discarded.\r\n */\n\nvar CompositeDraftDecorator = function () {\n  function CompositeDraftDecorator(decorators) {\n    _classCallCheck(this, CompositeDraftDecorator);\n\n    // Copy the decorator array, since we use this array order to determine\n    // precedence of decoration matching. If the array is mutated externally,\n    // we don't want to be affected here.\n    this._decorators = decorators.slice();\n  }\n  CompositeDraftDecorator.prototype.getDecorations = function getDecorations(block, contentState) {\n    var decorations = Array(block.getText().length).fill(null);\n    this._decorators.forEach(function ( /*object*/decorator, /*number*/ii) {\n      var counter = 0;\n      var strategy = decorator.strategy;\n      var callback = function callback( /*number*/start, /*number*/end) {\n        // Find out if any of our matching range is already occupied\n        // by another decorator. If so, discard the match. Otherwise, store\n        // the component key for rendering.\n        if (canOccupySlice(decorations, start, end)) {\n          occupySlice(decorations, start, end, ii + DELIMITER + counter);\n          counter++;\n        }\n      };\n      strategy(block, callback, contentState);\n    });\n    return List(decorations);\n  };\n  CompositeDraftDecorator.prototype.getComponentForKey = function getComponentForKey(key) {\n    var componentKey = parseInt(key.split(DELIMITER)[0], 10);\n    return this._decorators[componentKey].component;\n  };\n  CompositeDraftDecorator.prototype.getPropsForKey = function getPropsForKey(key) {\n    var componentKey = parseInt(key.split(DELIMITER)[0], 10);\n    return this._decorators[componentKey].props;\n  };\n  return CompositeDraftDecorator;\n}();\n\n/**\r\n * Determine whether we can occupy the specified slice of the decorations\r\n * array.\r\n */\n\nfunction canOccupySlice(decorations, start, end) {\n  for (var ii = start; ii < end; ii++) {\n    if (decorations[ii] != null) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\r\n * Splice the specified component into our decoration array at the desired\r\n * range.\r\n */\nfunction occupySlice(targetArr, start, end, componentKey) {\n  for (var ii = start; ii < end; ii++) {\n    targetArr[ii] = componentKey;\n  }\n}\nmodule.exports = CompositeDraftDecorator;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","Immutable","require","List","DELIMITER","CompositeDraftDecorator","decorators","_decorators","slice","prototype","getDecorations","block","contentState","decorations","Array","getText","length","fill","forEach","decorator","ii","counter","strategy","callback","start","end","canOccupySlice","occupySlice","getComponentForKey","key","componentKey","parseInt","split","component","getPropsForKey","props","targetArr","module","exports"],"sources":["C:/Users/ajayg/Desktop/vssample/stock_mocker/client/node_modules/draft-js/lib/CompositeDraftDecorator.js"],"sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule CompositeDraftDecorator\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nvar Immutable = require('immutable');\r\n\r\nvar List = Immutable.List;\r\n\r\n\r\nvar DELIMITER = '.';\r\n\r\n/**\r\n * A CompositeDraftDecorator traverses through a list of DraftDecorator\r\n * instances to identify sections of a ContentBlock that should be rendered\r\n * in a \"decorated\" manner. For example, hashtags, mentions, and links may\r\n * be intended to stand out visually, be rendered as anchors, etc.\r\n *\r\n * The list of decorators supplied to the constructor will be used in the\r\n * order they are provided. This allows the caller to specify a priority for\r\n * string matching, in case of match collisions among decorators.\r\n *\r\n * For instance, I may have a link with a `#` in its text. Though this section\r\n * of text may match our hashtag decorator, it should not be treated as a\r\n * hashtag. I should therefore list my link DraftDecorator\r\n * before my hashtag DraftDecorator when constructing this composite\r\n * decorator instance.\r\n *\r\n * Thus, when a collision like this is encountered, the earlier match is\r\n * preserved and the new match is discarded.\r\n */\r\n\r\nvar CompositeDraftDecorator = function () {\r\n  function CompositeDraftDecorator(decorators) {\r\n    _classCallCheck(this, CompositeDraftDecorator);\r\n\r\n    // Copy the decorator array, since we use this array order to determine\r\n    // precedence of decoration matching. If the array is mutated externally,\r\n    // we don't want to be affected here.\r\n    this._decorators = decorators.slice();\r\n  }\r\n\r\n  CompositeDraftDecorator.prototype.getDecorations = function getDecorations(block, contentState) {\r\n    var decorations = Array(block.getText().length).fill(null);\r\n\r\n    this._decorators.forEach(function ( /*object*/decorator, /*number*/ii) {\r\n      var counter = 0;\r\n      var strategy = decorator.strategy;\r\n      var callback = function callback( /*number*/start, /*number*/end) {\r\n        // Find out if any of our matching range is already occupied\r\n        // by another decorator. If so, discard the match. Otherwise, store\r\n        // the component key for rendering.\r\n        if (canOccupySlice(decorations, start, end)) {\r\n          occupySlice(decorations, start, end, ii + DELIMITER + counter);\r\n          counter++;\r\n        }\r\n      };\r\n      strategy(block, callback, contentState);\r\n    });\r\n\r\n    return List(decorations);\r\n  };\r\n\r\n  CompositeDraftDecorator.prototype.getComponentForKey = function getComponentForKey(key) {\r\n    var componentKey = parseInt(key.split(DELIMITER)[0], 10);\r\n    return this._decorators[componentKey].component;\r\n  };\r\n\r\n  CompositeDraftDecorator.prototype.getPropsForKey = function getPropsForKey(key) {\r\n    var componentKey = parseInt(key.split(DELIMITER)[0], 10);\r\n    return this._decorators[componentKey].props;\r\n  };\r\n\r\n  return CompositeDraftDecorator;\r\n}();\r\n\r\n/**\r\n * Determine whether we can occupy the specified slice of the decorations\r\n * array.\r\n */\r\n\r\n\r\nfunction canOccupySlice(decorations, start, end) {\r\n  for (var ii = start; ii < end; ii++) {\r\n    if (decorations[ii] != null) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Splice the specified component into our decoration array at the desired\r\n * range.\r\n */\r\nfunction occupySlice(targetArr, start, end, componentKey) {\r\n  for (var ii = start; ii < end; ii++) {\r\n    targetArr[ii] = componentKey;\r\n  }\r\n}\r\n\r\nmodule.exports = CompositeDraftDecorator;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}